[
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "What is 451 to the power of 1/10, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Calculate the power\nresult = math.pow(451, 1/10)\n\n# Round to the nearest integer\nnearest_integer = round(result)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 17, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "[3]",
    "err": true,
    "question": "Let h be ((-8)/(-3))/((-10)/(-15)). Let w be (0 + -2)/2 - -4. Suppose 4*y = 5*s + 84 - 33, -w*y + h*s = -39. List the prime factors of y. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nh, w, y, s = sp.symbols('h w y s')\n\n# define the equations\neq1 = sp.Eq(h, ((-8)/(-3))/((-10)/(-15)))\neq2 = sp.Eq(w, (0 + -2)/2 - -4)\neq3 = sp.Eq(4*y, 5*s + 84 - 33)\neq4 = sp.Eq(-w*y + h*s, -39)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2,eq3,eq4), (h, w, y, s))\n\n# print the result\nprint(solution[y])\n\n# list the prime factors of the result\nprime_factors = sp.factorint(solution[y])\nprint(prime_factors)",
    "correct": false
  },
  {
    "ans": "831",
    "gt": "831",
    "err": false,
    "question": "What is the third root of 574688643 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the third root of 574688643\nthird_root = math.pow(574688643, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(third_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 15, in <module>\n  File \"<string>\", line 2, in run_it\nModuleNotFoundError: No module named 'max'\n",
    "gt": "-2",
    "err": true,
    "question": "What is the second biggest value in -6244, -2, 2/23? Let's write a program.",
    "output": "import max\n\n# define the values\nvalues = [-6244, -2, 2/23]\n\n# find the maximum value\nmax_value = max(values)\n\n# find the second maximum value\nsecond_max_value = max(values[1:])\n\n# print the second maximum value\nprint(second_max_value)",
    "correct": false
  },
  {
    "ans": "22",
    "gt": "-5",
    "err": false,
    "question": "Solve -2*d = m - 17, 2466*d - 27 = m + 2464*d for m. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nd, m = sp.symbols('d m')\n\n# solve the equations\nsolution = sp.solve((-2*d - m + 17, 2466*d - m - 2464*d + 27), (d, m))\n\n# print the result\nprint(solution[m])",
    "correct": false
  },
  {
    "ans": "25061",
    "gt": "25061",
    "err": false,
    "question": "What is the square root of 628069819 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the square root\nsqrt = math.sqrt(628069819)\n\n# round to the nearest integer\nnearest_int = round(sqrt)\n\nprint(nearest_int)",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Solve -2*d - 7 = -3*i, -4*i + 13 = 15*d - 2*d - 12*d for i. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nd, i = sp.symbols('d i')\n\n# define the equations\neq1 = sp.Eq(-2*d - 7, -3*i)\neq2 = sp.Eq(-4*i + 13, 15*d - 2*d - 12*d)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (d, i))\n\n# print the result\nfor var, val in solution.items():\n    print(var, '=', val)",
    "correct": true
  },
  {
    "ans": "",
    "gt": "6",
    "err": true,
    "question": "Which is the closest to 517?  (a) 6  (b) -3  (c) 0 Let's write a program.",
    "output": "a = 6\nb = -3\nc = 0\n\nif a > 517:\n    print(a)\nelif b > 517:\n    print(b)\nelif c > 517:\n    print(c)",
    "correct": false
  },
  {
    "ans": "51",
    "gt": "51",
    "err": false,
    "question": "What is the remainder when 34925 is divided by 53? Let's write a program.",
    "output": "remainder = 34925 % 53\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "1363",
    "gt": "1363.0",
    "err": false,
    "question": "-11023944 divided by -8088 Let's write a program.",
    "output": "a = -11023944\nb = -8088\n\nresult = a / b\n\nprint(result)",
    "correct": false
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "What is the fifth root of 1010 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the fifth root of 1010\nresult = math.pow(1010, 1/5)\n\n# round to the nearest integer\nnearest_integer = round(result)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "-0.4",
    "gt": "-0.4",
    "err": false,
    "question": "What is the nearest to -11/4 in -225.7, 0.4, -2/21, -2/5, 0.3? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [-225.7, 0.4, -2/21, -2/5, 0.3]\n\n# find the closest number to -11/4\nclosest_num = min(numbers, key=lambda x:abs(x-(-11/4)))\n\nprint(closest_num)",
    "correct": true
  },
  {
    "ans": "-0.1",
    "gt": "-0.1",
    "err": false,
    "question": "Which is the closest to -32?  (a) 0.2  (b) 1  (c) -0.1 Let's write a program.",
    "output": "a = 0.2\nb = 1\nc = -0.1\n\nclosest = min(a, b, c)\n\nprint(closest)",
    "correct": true
  },
  {
    "ans": "0.042",
    "gt": "0.042",
    "err": false,
    "question": "Let l = 1376 + -6881/5. What is the nearest to 1 in 0.042, l, -1? Let's write a program.",
    "output": "l = 1376 - 6881/5\nnearest_to_1 = [0.042, l, -1]\n\nnearest_to_1.sort(key=lambda x:abs(x-1))\n\nprint(nearest_to_1[0])",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 19, in <module>\n  File \"<string>\", line 16, in run_it\nAttributeError: 'Add' object has no attribute 'units_digit'\n",
    "gt": "0",
    "err": true,
    "question": "Let q = -2 + 10. Suppose 4*l - q - 6 = -b, -5*l + 130 = 5*b. What is the units digit of b? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nq = sp.symbols('q')\nl, b = sp.symbols('l b')\n\n# define the equations\neq1 = sp.Eq(4*l - q - 6, -b)\neq2 = sp.Eq(-5*l + 130, 5*b)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (l, b))\n\n# calculate the units digit of b\nunits_digit_b = b.subs(solution).units_digit\n\nprint(units_digit_b)",
    "correct": false
  },
  {
    "ans": "0.1",
    "gt": "0.1",
    "err": false,
    "question": "Which is the closest to -0.3?  (a) 0.1  (b) 0.4  (c) 54  (d) 4/5 Let's write a program.",
    "output": "a = 0.1\nb = 0.4\nc = 54\nd = 4/5\n\nclosest = min(a, b, c, d)\n\nprint(closest)",
    "correct": true
  },
  {
    "ans": "546",
    "gt": "546",
    "err": false,
    "question": "What is the cube root of 163143705 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate cube root\ncube_root = math.pow(163143705, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(cube_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 24, in <module>\n  File \"<string>\", line 18, in run_it\nNameError: name 'p' is not defined\n",
    "gt": "-9",
    "err": true,
    "question": "Suppose 5*g - 17 = -j, -3*j - 2 = -4*g + 4. Let l be 3 - (5 + -1 - j). Let a(p) = -5*p - p**2 - 2 + 0*p**2 - l. Calculate a(-6). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ng, j = sp.symbols('g j')\n\n# define the equations\neq1 = sp.Eq(5*g - 17, -j)\neq2 = sp.Eq(-3*j - 2, -4*g + 4)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (g, j))\n\n# calculate l\nl = 3 - (5 + -1 - solution[j])\n\n# define a(p)\na = -5*p - p**2 - 2 + 0*p**2 - l\n\n# calculate a(-6)\nresult = a.subs(p, -6)\n\nprint(result)",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "What is the units digit of 6079632? Let's write a program.",
    "output": "def find_unit_digit(number):\n    return number % 10\n\nprint(find_unit_digit(6079632))",
    "correct": true
  },
  {
    "ans": "217",
    "gt": "217",
    "err": false,
    "question": "Let q = 8809 + -1214. What is the highest common factor of 868 and q? Let's write a program.",
    "output": "import math\n\n# define the numbers\nq = 8809 - 1214\nnum1 = 868\nnum2 = q\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "4",
    "gt": "-122",
    "err": false,
    "question": "What is the fifth biggest value in -1, 0.3, 4, -122, 8/5? Let's write a program.",
    "output": "import itertools\n\n# define the values\nvalues = [-1, 0.3, 4, -122, 8/5]\n\n# get all permutations of the values\npermutations = list(itertools.permutations(values))\n\n# get the fifth biggest value\nfifth_biggest = max(permutations[4])\n\nprint(fifth_biggest)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "[113]",
    "err": false,
    "question": "Let p = 88 + -36. Suppose -24*c - 233 - 1231 = 0. Let s = p - c. What are the prime factors of s? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\np = 88 + -36\nc = sp.symbols('c')\ns = p - c\n\n# solve the equation for c\nsolution = sp.solve(24*c + 233 + 1231, c)[0]\n\n# substitute the solution in the expression for s\ns_value = s.subs(c, solution)\n\n# factorize the result\nfactors = sp.factorint(s_value)\n\n# print the prime factors\nprint(factors)",
    "correct": false
  },
  {
    "ans": "13",
    "gt": "13",
    "err": false,
    "question": "Let l = -162 + 227. Calculate the highest common divisor of 13 and l. Let's write a program.",
    "output": "import math\n\n# calculate l\nl = -162 + 227\n\n# calculate the highest common divisor of 13 and l\nhcf = math.gcd(13, l)\n\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "What is the fifth smallest value in 0.24, 0, 7, 607, 4, -1? Let's write a program.",
    "output": "values = [0.24, 0, 7, 607, 4, -1]\n# To sort the values in ascending order\nvalues.sort()\n\n# To get the fifth smallest value\nfifth_smallest = values[4]\n\nprint(fifth_smallest)",
    "correct": true
  },
  {
    "ans": "84",
    "gt": "84",
    "err": false,
    "question": "What is the highest common divisor of 168 and 129712884? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 168\nnum2 = 129712884\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "-1",
    "gt": "-0.5",
    "err": false,
    "question": "Let d = -0.9 + 0.5. Let l = -0.25 + -0.75. Which is the second smallest value?  (a) l  (b) d  (c) -0.5 Let's write a program.",
    "output": "d = -0.9 + 0.5\nl = -0.25 + -0.75\n\nif d < l:\n    print(d)\nelse:\n    print(l)",
    "correct": false
  },
  {
    "ans": "64",
    "gt": "64",
    "err": false,
    "question": "What is the square root of 4147 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the square root of 4147\nsqrt = math.sqrt(4147)\n\n# round to the nearest integer\nnearest_integer = round(sqrt)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "50",
    "gt": "50",
    "err": false,
    "question": "Calculate the greatest common divisor of 4150 and 512350. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 4150\nnum2 = 512350\n\n# calculate the greatest common divisor\ngcd = math.gcd(num1, num2)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "5894",
    "gt": "5894",
    "err": false,
    "question": "What is the remainder when 345134 is divided by 8481? Let's write a program.",
    "output": "remainder = 345134 % 8481\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 18, in <module>\n  File \"<string>\", line 14, in run_it\nUnboundLocalError: cannot access local variable 'k' where it is not associated with a value\n",
    "gt": "-1",
    "err": true,
    "question": "Let u(r) = r**3 + 6*r**2 - 10*r - 55. Let q be u(-4). Solve 0 = q*k + 173 - 156 for k. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nr = sp.symbols('r')\n\n# define the function u(r)\nu = r**3 + 6*r**2 - 10*r - 55\n\n# calculate q\nq = u.subs(r, -4)\n\n# solve the equation 0 = q*k + 173 - 156 for k\nk = sp.solve(q*k + 173 - 156, k)[0]\n\n# print the result\nprint(k)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 15, in run_it\nIndexError: list index out of range\n",
    "gt": "0.0",
    "err": true,
    "question": "Let d(i) = 17*i + 153. Let s be (-1)/(-2) - (-7 + (-66)/(-4)). Let z be d(s). Which is the closest to 1/3?  (a) z  (b) -1  (c) -7 Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ni = sp.symbols('i')\ns = sp.symbols('s')\nz = sp.symbols('z')\n\n# define the functions\nd = 17*i + 153\ns_expr = sp.Rational(-1, 1) - sp.Rational(-7, 1) - sp.Rational(-66, 4)\nz_expr = d.subs(i, s_expr)\n\n# calculate the values\ns_val = sp.solve(s_expr, i)[0]\nz_val = z_expr.subs(i, s_val)\n\n# find the closest to 1/3\nclosest_to_1_3 = min(z_val, 1/3)\n\nprint(closest_to_1_3)",
    "correct": false
  },
  {
    "ans": "25",
    "gt": "25",
    "err": false,
    "question": "What is the value of 8 - (2 + -17 + (0 - -4 - -8) - 14)? Let's write a program.",
    "output": "print(8 - (2 + -17 + (0 - -4 - -8) - 14))",
    "correct": true
  },
  {
    "ans": "-4",
    "gt": "-4",
    "err": false,
    "question": "What is the value of (10 - 4 - (18 + -14)) + -6? Let's write a program.",
    "output": "print((10 - 4 - (18 + -14)) + -6)",
    "correct": true
  },
  {
    "ans": "7",
    "gt": "7.0",
    "err": false,
    "question": "What is the value of ((-12)/(-60))/((-4)/840*-6)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nx = sp.symbols('x')\n\n# define the expression\nexpr = ((-12)/(-60))/((-4)/840*-6)\n\n# calculate the value\nvalue = sp.simplify(expr)\n\n# print the result\nprint(value)",
    "correct": false
  },
  {
    "ans": "-2.75",
    "gt": "-2.75",
    "err": false,
    "question": "What is (78/104)/(3/(-11))? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (78/104) / (3/(-11))\n\n# calculate the result\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "33",
    "gt": "33",
    "err": false,
    "question": "What is 1084 to the power of 1/2, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Calculate the square root of 1084\nsqrt_1084 = math.sqrt(1084)\n\n# Round to the nearest integer\nnearest_integer = round(sqrt_1084)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "56",
    "gt": "56",
    "err": false,
    "question": "Evaluate 57 + 18 + (-98 - -79). Let's write a program.",
    "output": "print(57 + 18 + (-98 - -79))",
    "correct": true
  },
  {
    "ans": "63",
    "gt": "63",
    "err": false,
    "question": "What is the remainder when 1087 is divided by 64? Let's write a program.",
    "output": "remainder = 1087 % 64\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "6",
    "gt": "6",
    "err": false,
    "question": "Let o = 195 + -129. Let t be (o/(-2))/((-1)/(-5)). Let k = 233 + t. What is the tens digit of k? Let's write a program.",
    "output": "o = 195 - 129\nt = (o/(-2))/((-1)/(-5))\nk = 233 + t\nprint(k//10%10)",
    "correct": true
  },
  {
    "ans": "-72",
    "gt": "-72",
    "err": false,
    "question": "-1 + (-10 - -11 - 7) + -70 + 5 Let's write a program.",
    "output": "print(-1 + (-10 - -11 - 7) + -70 + 5)",
    "correct": true
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "Let k = 10.2 + -10. What is the biggest value in k, 2/9, 4? Let's write a program.",
    "output": "k = 10.2 + -10\ntwo_nine = 2/9\nfour = 4\n\nif k > two_nine and k > four:\n    print(k)\nelif two_nine > four:\n    print(two_nine)\nelse:\n    print(four)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/utilities/misc.py\", line 555, in as_int\n    return operator.index(n)\n           ^^^^^^^^^^^^^^^^^\nTypeError: 'Float' object cannot be interpreted as an integer\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 27, in <module>\n  File \"<string>\", line 23, in run_it\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/ntheory/factor_.py\", line 1235, in factorint\n    n = as_int(n)\n        ^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/utilities/misc.py\", line 557, in as_int\n    raise ValueError('%s is not an integer' % (n,))\nValueError: 383.000000000000 is not an integer\n",
    "gt": "[383]",
    "err": true,
    "question": "Suppose -48 = 7*d + 5*d. List the prime factors of (d - 1934/(-5)) + (-5)/(-25). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nd = sp.symbols('d')\n\n# define the equation\nequation = sp.Eq(-48, 7*d + 5*d)\n\n# solve the equation for d\nsolution = sp.solve(equation, d)\n\n# calculate the value of d\nd_value = solution[0]\n\n# calculate the expression (d - 1934/(-5)) + (-5)/(-25)\nexpression = ((d_value - 1934/(-5)) + (-5)/(-25))\n\n# simplify the expression\nsimplified_expression = sp.simplify(expression)\n\n# factorize the simplified expression\nfactors = sp.factorint(simplified_expression)\n\n# print the prime factors\nprint(factors)",
    "correct": false
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "Simplify (-2 + (sqrt(700) - (sqrt(700) + 0 - sqrt(700)) - sqrt(700)))**2. Let's write a program.",
    "output": "import math\n\n# calculate the expression\nresult = (-2 + (math.sqrt(700) - (math.sqrt(700) + 0 - math.sqrt(700)) - math.sqrt(700)))**2\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 17, in run_it\nKeyError: a\n",
    "gt": "3",
    "err": true,
    "question": "Let v = -9 - -14. Suppose -m - 7*p + 2*p = v, -10 = 5*p. Suppose 3*y = 5*a - 9, a = -3*y + 14 - m. Calculate the greatest common factor of 27 and a. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nv, m, p, y, a = sp.symbols('v m p y a')\n\n# define the equations\neq1 = sp.Eq(v, -9 - -14)\neq2 = sp.Eq(-10, 5*p)\neq3 = sp.Eq(3*y, 5*a - 9)\neq4 = sp.Eq(a, -3*y + 14 - m)\n\n# solve the equations\nsolution = sp.solve((eq1, eq2, eq3, eq4), (v, m, p, y, a))\n\n# calculate the greatest common factor of 27 and a\na_value = solution[a]\ngcf = sp.gcd(27, a_value)\n\nprint(gcf)",
    "correct": false
  },
  {
    "ans": "38",
    "gt": "38",
    "err": false,
    "question": "Solve 67*u - 2105 = -164 + 605 for u. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nu = sp.symbols('u')\n\n# define the equation\nequation = sp.Eq(67*u - 2105, -164 + 605)\n\n# solve the equation\nsolution = sp.solve(equation, u)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Solve -2*r + 2*l = 0, 0 = -50*l + 49*l + 1 for r. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nr, l = sp.symbols('r l')\n\n# define the equations\neq1 = sp.Eq(-2*r + 2*l, 0)\neq2 = sp.Eq(-50*l + 49*l + 1, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (r, l))\n\n# print the result\nfor variable in solution:\n    print(variable, solution[variable])",
    "correct": true
  },
  {
    "ans": "25.81",
    "gt": "25.81",
    "err": false,
    "question": "What is the closest to 40 in 25.81, 5, -1/8? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [25.81, 5, -1/8]\n\n# calculate the closest to 40\nclosest = min(numbers, key=lambda x:abs(x-40))\n\n# print the result\nprint(closest)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Calculate the greatest common divisor of 14 and 223654. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 14\nnum2 = 223654\n\n# calculate the greatest common divisor\ngcd = math.gcd(num1, num2)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "Let n be ((-12)/32)/(-15*(-2)/8). Let w = 0.42 - 0.62. Which is the biggest value?  (a) w  (b) 5  (c) n Let's write a program.",
    "output": "import math\n\n# calculate n\nn = ((-12)/32)/(-15*(-2)/8)\n\n# calculate w\nw = 0.42 - 0.62\n\n# compare w and n with 5\nif w > 5:\n    biggest_value = w\nelse:\n    biggest_value = max(n, 5)\n\nprint(biggest_value)",
    "correct": true
  },
  {
    "ans": "12",
    "gt": "2",
    "err": false,
    "question": "Let y = -2 - 1. What is the units digit of (-1)/y + (-35)/(-3)? Let's write a program.",
    "output": "y = -2 - 1\nunits_digit = (-1)/y + (-35)/(-3)\nprint(units_digit)",
    "correct": false
  },
  {
    "ans": "-24",
    "gt": "-24",
    "err": false,
    "question": "Solve 3576*t + 336 = 3562*t for t. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nt = sp.symbols('t')\n\n# define the equation\neq = sp.Eq(3576*t + 336, 3562*t)\n\n# solve the equation\nsolution = sp.solve(eq, t)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "What is the ten thousands digit of 2321313? Let's write a program.",
    "output": "def find_ten_thousands_digit(n):\n    return str(n)[-5]\n\nprint(find_ten_thousands_digit(2321313))",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "38",
    "err": false,
    "question": "Suppose -3*r + 2090 = 2*r. Suppose -640 = 6*g - 868. Calculate the greatest common divisor of r and g. Let's write a program.",
    "output": "import math\n\n# solve for r\nr = 2090 / 5\n\n# solve for g\ng = (660 + 868) / 6\n\n# calculate the greatest common divisor\ngcd = math.gcd(int(r), int(g))\n\nprint(gcd)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Suppose -f + 442 = -169. What is the units digit of f? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nf = sp.symbols('f')\n\n# define the equation\neq = sp.Eq(-f + 442, -169)\n\n# solve the equation for f\nsolution = sp.solve(eq, f)\n\n# get the units digit of f\nunits_digit = solution[0] % 10\n\nprint(units_digit)",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-2.0",
    "err": false,
    "question": "-62 divided by 31 Let's write a program.",
    "output": "print(-62 / 31)",
    "correct": false
  },
  {
    "ans": "27",
    "gt": "-3",
    "err": false,
    "question": "Let j = 0.207 - 0.007. What is the fourth biggest value in -3, j, 19, 27? Let's write a program.",
    "output": "import math\n\n# define the values\nvalues = [-3, 0.207 - 0.007, 19, 27]\n\n# sort the values\nsorted_values = sorted(values)\n\n# get the fourth biggest value\nfourth_biggest = sorted_values[3]\n\n# print the result\nprint(fourth_biggest)",
    "correct": false
  },
  {
    "ans": "-19",
    "gt": "-19.0",
    "err": false,
    "question": "Evaluate 1008/(-2940)*-70 - (-86)/(-2). Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = sp.Rational(1008, -2940) * -70 - sp.Rational(-86, -2)\n\n# evaluate the expression\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "-6650",
    "gt": "-6650",
    "err": false,
    "question": "What is the second derivative of -24593*j**2 + 3 + 48939*j**2 - 27671*j**2 - 37*j wrt j? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nj = sp.symbols('j')\n\n# define the function\nf = -24593*j**2 + 3 + 48939*j**2 - 27671*j**2 - 37*j\n\n# calculate the second derivative\nsecond_derivative = sp.diff(f, j, 2)\n\n# print the result\nprint(second_derivative)",
    "correct": true
  },
  {
    "ans": "266",
    "gt": "0",
    "err": false,
    "question": "Let f be (2 + (-33)/3)/(-1). Let o(m) be the second derivative of -1/6*m**3 + 2*m + 5 + 9/2*m**2. Determine o(f). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nm = sp.symbols('m')\n\n# define the function f\nf = (2 + (-33)/3)/(-1)\n\n# define the function o(m)\no = -1/6*m**3 + 2*m + 5 + 9/2*m**2\n\n# calculate o(f)\no_f = o.subs(m, f)\n\n# print the result\nprint(o_f)",
    "correct": false
  },
  {
    "ans": "17",
    "gt": "17",
    "err": false,
    "question": "Let s(r) = 9*r**2 - r. Let w be s(2). Let n = 18 + -13. Suppose 5*v - 2*c = -5*c + 440, -n*c = 5*v - 450. What is the greatest common factor of v and w? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nr, v, c = sp.symbols('r v c')\n\n# define the function s(r)\ns = 9*r**2 - r\n\n# calculate w\nw = s.subs(r, 2)\n\n# calculate n\nn = 18 + -13\n\n# define the equations\neq1 = sp.Eq(5*v - 2*c, -5*c + 440)\neq2 = sp.Eq(-n*c, 5*v - 450)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (v, c))\n\n# calculate the greatest common factor of v and w\ngcf = sp.gcd(solution[v], w)\n\nprint(gcf)",
    "correct": true
  },
  {
    "ans": "9",
    "gt": "9",
    "err": false,
    "question": "Solve 65*t - 72 = 57*t for t. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nt = sp.symbols('t')\n\n# define the equation\neq = sp.Eq(65*t - 72, 57*t)\n\n# solve the equation\nsolution = sp.solve(eq, t)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "9",
    "gt": "9",
    "err": false,
    "question": "Let d(m) = -27*m**2 - 623*m - 33. Let a(q) = 74*q**3 - q**2 + q. Calculate the remainder when a(1) is divided by d(-23). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nm = sp.symbols('m')\nq = sp.symbols('q')\n\n# define the functions\nd = -27*m**2 - 623*m - 33\na = 74*q**3 - q**2 + q\n\n# substitute q = 1 into a\na1 = a.subs(q, 1)\n\n# substitute m = -23 into d\nd23 = d.subs(m, -23)\n\n# calculate the remainder\nremainder = a1 % d23\n\n# print the remainder\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-4",
    "gt": "4",
    "err": false,
    "question": "Let v(c) = c - 51. Let w be v(-7). Let s = 59 + w. Solve -q + s + 3 = 0 for q. Let's write a program.",
    "output": "def v(c):\n    return c - 51\n\nw = v(-7)\ns = 59 + w\n\nq = -s - 3\nprint(q)",
    "correct": false
  },
  {
    "ans": "3281.5",
    "gt": "3281.5",
    "err": false,
    "question": "-0.025 times -131260 Let's write a program.",
    "output": "print(-0.025*-131260)",
    "correct": true
  },
  {
    "ans": "1594",
    "gt": "1594",
    "err": false,
    "question": "Calculate the remainder when 173962 is divided by 1596. Let's write a program.",
    "output": "remainder = 173962 % 1596\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "What is the thousands digit of 1524? Let's write a program.",
    "output": "thousands_digit = 1524 // 1000\nprint(thousands_digit)",
    "correct": true
  },
  {
    "ans": "96",
    "gt": "96",
    "err": false,
    "question": "What is 86003450 to the power of 1/4, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the fourth root of the number\nresult = math.pow(86003450, 1/4)\n\n# round to the nearest integer\nnearest_integer = round(result)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "Suppose 87 = -67*j + 70*j. Solve 0 = -4*f + b + b + 24, 5*f - 2*b = j for f. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj, f, b = sp.symbols('j f b')\n\n# define the equations\neq1 = sp.Eq(-67*j + 70*j, 87)\neq2 = sp.Eq(0, -4*f + b + b + 24)\neq3 = sp.Eq(5*f - 2*b, j)\n\n# solve the first equation for j\nj_solution = sp.solve(eq1, j)[0]\n\n# substitute the solution of j in the other two equations and solve for f\nf_solution = sp.solve([eq2.subs(j, j_solution), eq3.subs(j, j_solution)], [f, b])\n\n# print the solution for f\nprint(f_solution[f])",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "Let w = -90 - -86. Let x(n) = -2*n**3 - 8*n**2 - n - 1. Let b be x(w). Solve 0 = b*i + 2*i for i. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw = sp.symbols('w')\nx = sp.symbols('x')\nb = sp.symbols('b')\n\n# calculate w\nw = -90 - -86\n\n# calculate b\nb = -2*w**3 - 8*w**2 - w - 1\n\n# solve the equation for i\nsolution = sp.solve(b*x + 2*x, x)\n\n# print the solution\nfor i in solution:\n    print(i)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 6, in <module>\n  File \"<string>\", line 3, in run_it\nNameError: name 'a' is not defined\n",
    "gt": "-10188",
    "err": true,
    "question": "Find the third derivative of -1698*a**3 - 472*a**2 wrt a. Let's write a program.",
    "output": "derivative = 0\nderivative = derivative - 1698*3*a**2 - 472*2*a\nderivative = derivative - 1698*3*a**2 - 472*2*a\nprint(derivative)",
    "correct": false
  },
  {
    "ans": "7/4",
    "gt": "3",
    "err": false,
    "question": "Suppose 4*u - 21 - 14 = 1. Suppose 2*w = 4*w - 42. What is the highest common divisor of w and u? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nu, w = sp.symbols('u w')\n\n# solve the equations\nsolution_u = sp.solve(4*u - 21 - 14, u)[0]\nsolution_w = sp.solve(2*w - 4*w + 42, w)[0]\n\n# calculate the highest common divisor\nhcd_uw = sp.gcd(solution_u, solution_w)\n\nprint(hcd_uw)",
    "correct": false
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "Let c = 24832 - 21439. Solve 2*m - c + 3383 = 0 for m. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nc, m = sp.symbols('c m')\n\n# define the equation\neq = sp.Eq(2*m - c + 3383, 0)\n\n# substitute c with the given value\neq_sub = eq.subs(c, 24832 - 21439)\n\n# solve the equation\nsolution = sp.solve(eq_sub, m)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-6",
    "gt": "-6",
    "err": false,
    "question": "Which is the smallest value?  (a) 2/3  (b) 3/5  (c) 27/8  (d) 0.4  (e) -6 Let's write a program.",
    "output": "a = 2/3\nb = 3/5\nc = 27/8\nd = 0.4\ne = -6\n\nsmallest = min(a, b, c, d, e)\nprint(smallest)",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Suppose 13*a + 2*a = 345. What is the remainder when a is divided by 4? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\na = sp.symbols('a')\n\n# define the equation\nequation = sp.Eq(13*a + 2*a, 345)\n\n# solve the equation for a\nsolution = sp.solve(equation, a)\n\n# calculate the remainder when a is divided by 4\nremainder = solution[0] % 4\n\n# print the result\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "13",
    "gt": "13",
    "err": false,
    "question": "Solve 17016*v = 17145*v - 1677 for v. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nv = sp.symbols('v')\n\n# define the equation\nequation = sp.Eq(17016*v, 17145*v - 1677)\n\n# solve the equation\nsolution = sp.solve(equation, v)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "24421",
    "gt": "-4",
    "err": false,
    "question": "What is the fourth biggest value in -1/2, -4, -4/5, 24421? Let's write a program.",
    "output": "import math\n\n# define the values\nvalues = [-1/2, -4, -4/5, 24421]\n\n# sort the values\nvalues.sort()\n\n# print the fourth biggest value\nprint(values[3])",
    "correct": false
  },
  {
    "ans": "44",
    "gt": "44",
    "err": false,
    "question": "What is 87766 to the power of 1/3, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the cube root of 87766\ncube_root = math.pow(87766, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(cube_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "0.3",
    "gt": "370",
    "err": false,
    "question": "Which is the biggest value?  (a) 0  (b) -3/49  (c) 370  (d) 0.3 Let's write a program.",
    "output": "a = 0\nb = -3/49\nc = 370\nd = 0.3\n\nif a > b:\n    if a > c:\n        if a > d:\n            print(a)\n        else:\n            print(d)\n    else:\n        if b > d:\n            print(b)\n        else:\n            print(d)\nelse:\n    if b > c:\n        if b > d:\n            print(b)\n        else:\n            print(d)\n    else:\n        if c > d:\n            print(c)\n        else:\n            print(d)",
    "correct": false
  },
  {
    "ans": "11",
    "gt": "[11]",
    "err": false,
    "question": "Let g(u) = -60*u - 109. List the prime factors of g(-2). Let's write a program.",
    "output": "import sympy as sp\n\n# define the function\ndef g(u):\n    return -60*u - 109\n\n# calculate the value of g at u = -2\nvalue = g(-2)\n\n# factorize the value\nfactors = sp.factorint(value)\n\n# print the prime factors\nprint(factors.keys())",
    "correct": false
  },
  {
    "ans": "-38.3",
    "gt": "-0.1",
    "err": false,
    "question": "Let x = -767 + 768. What is the second smallest value in -38.3, x, -0.1? Let's write a program.",
    "output": "import math\n\n# define the variable\nx = -767 + 768\n\n# calculate the smallest and second smallest values\nsmallest_value = min(-38.3, x, -0.1)\nsecond_smallest_value = math.inf if smallest_value == x else smallest_value\n\n# print the second smallest value\nprint(second_smallest_value)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Solve 3*f = 9*v + 18, -10002*v + 3*f - 6 + 0 = -10001*v + 20 for v. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nf, v = sp.symbols('f v')\n\n# define the equations\neq1 = sp.Eq(3*f, 9*v + 18)\neq2 = sp.Eq(-10002*v + 3*f - 6 + 0, -10001*v + 20)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (f, v))\n\n# print the result\nfor variable, value in solution.items():\n    print(variable, value)",
    "correct": true
  },
  {
    "ans": "0.1",
    "gt": "0.1",
    "err": false,
    "question": "What is the nearest to 0.7 in -3, 2.4, 0.1? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [-3, 2.4, 0.1]\n\n# find the nearest to 0.7\nnearest = min(numbers, key=lambda x:abs(x-0.7))\n\nprint(nearest)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "13",
    "err": false,
    "question": "Suppose 0 = 2*j - 3*j. Suppose -3*l + 3 + 6 = j. Suppose f = l + 10. What is the greatest common factor of f and 104? Let's write a program.",
    "output": "import math\n\n# define the variables\nj, l, f = 0, 0, 0\n\n# equation 1: 0 = 2*j - 3*j\nj = 0\n\n# equation 2: -3*l + 3 + 6 = j\nl = (j + 3) / -3\n\n# equation 3: f = l + 10\nf = l + 10\n\n# find the greatest common factor of f and 104\ngcf = math.gcd(int(f), 104)\n\nprint(gcf)",
    "correct": false
  },
  {
    "ans": "8",
    "gt": "8",
    "err": false,
    "question": "Let q(y) = -y**2 + 414*y - 12216. Give q(32). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ny = sp.symbols('y')\n\n# define the function\nq = -y**2 + 414*y - 12216\n\n# calculate the value of the function at y=32\nq_32 = q.subs(y, 32)\n\n# print the result\nprint(q_32)",
    "correct": true
  },
  {
    "ans": "61",
    "gt": "61",
    "err": false,
    "question": "Calculate the remainder when 516 is divided by 65. Let's write a program.",
    "output": "remainder = 516 % 65\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "14/3",
    "gt": "14",
    "err": false,
    "question": "Suppose a - 4*c - 3 = 0, -4*a - 2*c - 11 = 13. Let w = a - -7. Let m be (w + 1)/3 + 153. What is the highest common factor of 14 and m? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\na, c = sp.symbols('a c')\n\n# define the equations\neq1 = sp.Eq(a - 4*c - 3, 0)\neq2 = sp.Eq(-4*a - 2*c - 11, 13)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (a, c))\n\n# calculate w and m\nw = solution[a] - 7\nm = (w + 1)/3 + 153\n\n# calculate the highest common factor of 14 and m\nhcf = sp.gcd(14, m)\n\nprint(hcf)",
    "correct": false
  },
  {
    "ans": "14",
    "gt": "14",
    "err": false,
    "question": "What is the greatest common divisor of 1691354 and 98? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 1691354\nnum2 = 98\n\n# calculate the greatest common divisor\ngcd = math.gcd(num1, num2)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "[3, 5]",
    "err": false,
    "question": "Suppose -5*q + 4 = -2*u - 2, 4*q + 2 = 5*u. Let s(y) be the first derivative of y**3 + 3*y**2/2 - 3*y + 1. What are the prime factors of s(u)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nq, u = sp.symbols('q u')\n\n# define the equations\neq1 = sp.Eq(-5*q + 4, -2*u - 2)\neq2 = sp.Eq(4*q + 2, 5*u)\n\n# solve the system of equations for q and u\nsolution = sp.solve((eq1,eq2), (q, u))\n\n# define the function s(y)\ny = sp.symbols('y')\ns = y**3 + 3*y**2/2 - 3*y + 1\n\n# calculate s(u)\ns_u = s.subs(y, solution[u])\n\n# find the prime factors of s(u)\nprime_factors = sp.factorint(s_u)\n\nprint(prime_factors)",
    "correct": false
  },
  {
    "ans": "9",
    "gt": "9",
    "err": false,
    "question": "Suppose -4*x = -5*p - 143 - 165, 0 = -2*x - 2*p + 136. Calculate the greatest common divisor of x and 9. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nx, p = sp.symbols('x p')\n\n# define the equations\neq1 = sp.Eq(-4*x, -5*p - 143 - 165)\neq2 = sp.Eq(0, -2*x - 2*p + 136)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (x, p))\n\n# calculate the greatest common divisor of x and 9\ngcd = sp.gcd(solution[x], 9)\n\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "21",
    "gt": "[21]",
    "err": false,
    "question": "Let k(z) be the first derivative of -2*z**3/3 + 42*z**2 - 882*z - 120. Let k(f) = 0. What is f? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nz = sp.symbols('z')\n\n# define the function\nk = -2*z**3/3 + 42*z**2 - 882*z - 120\n\n# find the derivative of the function\nk_prime = sp.diff(k, z)\n\n# solve the equation k'(f) = 0\nsolution = sp.solve(k_prime, z)\n\n# print the solution\nfor f in solution:\n    print(f)",
    "correct": false
  },
  {
    "ans": "102",
    "gt": "-20*x",
    "err": false,
    "question": "Let c(o) be the second derivative of -5*o**4/6 - 51*o**2 - 4*o + 1. What is the first derivative of c(x) wrt x? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\no = sp.symbols('o')\n\n# define the function\nc = -5*o**4/6 - 51*o**2 - 4*o + 1\n\n# calculate the second derivative\nc_o = sp.diff(c, o)\n\n# calculate the first derivative of the second derivative w.r.t. x\nc_o_x = sp.diff(c_o, o)\n\n# print the result\nprint(c_o_x)",
    "correct": false
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "What is the remainder when 7241 is divided by 1034? Let's write a program.",
    "output": "remainder = 7241 % 1034\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-8",
    "gt": "-8",
    "err": false,
    "question": "Which is smaller: -8 or 0.6517? Let's write a program.",
    "output": "print(-8) if -8 < 0.6517 else print(0.6517)",
    "correct": true
  },
  {
    "ans": "-990",
    "gt": "-990",
    "err": false,
    "question": "Which is greater: -993 or -990? Let's write a program.",
    "output": "num1 = -993\r\nnum2 = -990\r\nif num1 > num2:\r\n    print(num1)\r\nelse:\r\n    print(num2)",
    "correct": true
  },
  {
    "ans": "8",
    "gt": "8.0",
    "err": false,
    "question": "Let k(w) = 20528*w + 84. Let z be k(7). What is the remainder when z/336 - -1*2/24 is divided by 10? Let's write a program.",
    "output": "def k(w):\n    return 20528*w + 84\n\nz = k(7)\n\nremainder = (z/336 - (-1*2/24)) % 10\n\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "-67",
    "gt": "-67",
    "err": false,
    "question": "Solve 71*g - 365*g - 747*g = 2364*g + 228135 for g. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ng = sp.symbols('g')\n\n# define the equation\neq = sp.Eq(71*g - 365*g - 747*g, 2364*g + 228135)\n\n# solve the equation\nsolution = sp.solve(eq, g)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "84",
    "gt": "84",
    "err": false,
    "question": "What is the remainder when 558 is divided by 158? Let's write a program.",
    "output": "remainder = 558 % 158\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "275",
    "gt": "275",
    "err": false,
    "question": "What is the remainder when 1949 is divided by 279? Let's write a program.",
    "output": "remainder = 1949 % 279\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "3",
    "err": false,
    "question": "Let p = 98 + -89. Solve -3*o - 5*y + 24 = 0, 0 = -o + 2*y - 4*y + p for o. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\no, y, p = sp.symbols('o y p')\n\n# define the equations\neq1 = sp.Eq(-3*o - 5*y + 24, 0)\neq2 = sp.Eq(-o + 2*y - 4*y + p, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (o, y))\n\n# calculate o\no_value = solution[o]\n\nprint(o_value)",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "What is the hundreds digit of 220? Let's write a program.",
    "output": "hundreds_digit = 220 / 100\nprint(int(hundreds_digit))",
    "correct": true
  },
  {
    "ans": "-4",
    "gt": "-4",
    "err": false,
    "question": "What is the third smallest value in 3, -39, -4, -160, 11? Let's write a program.",
    "output": "numbers = [3, -39, -4, -160, 11]\nnumbers.sort()\nprint(numbers[2])",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 17, in run_it\nNameError: name 'z' is not defined\n",
    "gt": "-5",
    "err": true,
    "question": "Let i(u) be the first derivative of -u**3/3 - 5*u**2/2 + 16*u + 3. Let b be i(-7). Solve -10 = b*z - 0*z for z. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nu = sp.symbols('u')\n\n# define the function i(u)\ni = -u**3/3 - 5*u**2/2 + 16*u + 3\n\n# calculate the derivative of i(u)\ndi = i.diff(u)\n\n# substitute u with -7 in the derivative\nb = di.subs(u, -7)\n\n# solve the equation -10 = b*z - 0*z for z\nsolution = sp.solve(b*z, z)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "What is -9 - ((1 - 0) + -1 - (-43 - -52))? Let's write a program.",
    "output": "print(-9 - ((1 - 0) + -1 - (-43 - -52)))",
    "correct": true
  },
  {
    "ans": "-5",
    "gt": "0.75",
    "err": false,
    "question": "Which is the nearest to 7?  (a) -1/240  (b) -5  (c) 3/4  (d) 40 Let's write a program.",
    "output": "a = -1/240\nb = -5\nc = 3/4\nd = 40\n\nnearest = min(a, b, c, d)\n\nprint(nearest)",
    "correct": false
  },
  {
    "ans": "30",
    "gt": "30",
    "err": false,
    "question": "1 + (2 - 9) + (-5 - 16) + 58 + -1 Let's write a program.",
    "output": "print(1 + (2 - 9) + (-5 - 16) + 58 + -1)",
    "correct": true
  },
  {
    "ans": "",
    "gt": "-1",
    "err": true,
    "question": "Let k(o) = -12*o + 27*o - 38 - 11*o - 6*o. Let a be k(-21). Solve a*x + 7 = -3*m, 4*m = -0*x - 3*x - 7 for m. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\no, x, m = sp.symbols('o x m')\n\n# define the function k(o)\nk = -12*o + 27*o - 38 - 11*o - 6*o\n\n# calculate a\na = k.subs(o, -21)\n\n# define the equations\neq1 = sp.Eq(a*x + 7, -3*m)\neq2 = sp.Eq(4*m, -0*x - 3*x - 7)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (x, m))\n\n# print the result\nfor i in solution:\n    print(i)",
    "correct": false
  },
  {
    "ans": "15",
    "gt": "15",
    "err": false,
    "question": "Calculate the greatest common factor of 19200 and 45. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 19200\nnum2 = 45\n\n# calculate the greatest common factor\ngcf = math.gcd(num1, num2)\n\n# print the result\nprint(gcf)",
    "correct": true
  },
  {
    "ans": "206",
    "gt": "206",
    "err": false,
    "question": "What is the highest common factor of 618 and 8175728? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 618\nnum2 = 8175728\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "-10",
    "gt": "-10.0",
    "err": false,
    "question": "74/(-8) - 12/16 Let's write a program.",
    "output": "print(74/(-8) - 12/16)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/utilities/misc.py\", line 555, in as_int\n    return operator.index(n)\n           ^^^^^^^^^^^^^^^^^\nTypeError: 'float' object cannot be interpreted as an integer\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 13, in run_it\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/ntheory/factor_.py\", line 1235, in factorint\n    n = as_int(n)\n        ^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/utilities/misc.py\", line 557, in as_int\n    raise ValueError('%s is not an integer' % (n,))\nValueError: 3457.0 is not an integer\n",
    "gt": "[3457]",
    "err": true,
    "question": "Suppose -27223 = 63*n - 82842 - 162172. What are the prime factors of n? Let's write a program.",
    "output": "import sympy as sp\n\n# Define the equation\n# -27223 = 63*n - 82842 - 162172\n# This can be rewritten as -27223 + 82842 + 162172 = 63*n\n# So, n = (-27223 + 82842 + 162172) / 63\n\n# Calculate n\nn = (-27223 + 82842 + 162172) / 63\n\n# Get the prime factors of n\nprime_factors = sp.factorint(n)\n\n# Print the prime factors of n\nprint(prime_factors)",
    "correct": false
  },
  {
    "ans": "4",
    "gt": "-4",
    "err": false,
    "question": "Let w = -2 + 5. Suppose -3 - w = -3*u. Suppose l = -4 + 12. Solve l*f - 3*f + 16 = -y, u*f + 20 = 3*y for f. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw, u, l, f, y = sp.symbols('w u l f y')\n\n# define w and u\nw = -2 + 5\nu = (-3 - w) / -3\n\n# define l\nl = -4 + 12\n\n# define the equations\neq1 = sp.Eq(l*f - 3*f + 16, -y)\neq2 = sp.Eq(u*f + 20, 3*y)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (f, y))\n\n# print the result\nfor variable in solution:\n    print(variable, solution[variable])",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "2.0",
    "err": false,
    "question": "(-3 + -1)*68/(-136) Let's write a program.",
    "output": "a = (-3 + -1)\nb = 68\nc = -136\n\nresult = (a*b)/c\n\nprint(result)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Suppose -13*r + 10*r + 153 = 0. What is the units digit of r? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nr = sp.symbols('r')\n\n# define the equation\nequation = sp.Eq(-13*r + 10*r + 153, 0)\n\n# solve the equation\nsolution = sp.solve(equation, r)\n\n# get the units digit of the solution\nunits_digit = solution[0] % 10\n\nprint(units_digit)",
    "correct": true
  },
  {
    "ans": "-5",
    "gt": "-5",
    "err": false,
    "question": "Solve -3*s + 4*r - 15 = 0, -s = -r - 2092 + 2097 for s. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nr, s = sp.symbols('r s')\n\n# define the equations\neq1 = sp.Eq(-3*s + 4*r - 15, 0)\neq2 = sp.Eq(-s, -r - 2092 + 2097)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (s, r))\n\n# print the result\nfor variable in solution:\n    print(variable, solution[variable])",
    "correct": true
  },
  {
    "ans": "1288",
    "gt": "1288",
    "err": false,
    "question": "Let i(m) = 797*m - 48923. What is i(63)? Let's write a program.",
    "output": "def i(m):\n    return 797*m - 48923\n\nprint(i(63))",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-2.0",
    "err": false,
    "question": "What is the value of (4/2)/(3/(-3))? Let's write a program.",
    "output": "print((4/2)/(3/(-3)))",
    "correct": false
  },
  {
    "ans": "5.45454545454545",
    "gt": "4",
    "err": false,
    "question": "Solve -16 = -4*a - r, -13*a - 2*r - 1692 + 1744 = 0 for a. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\na, r = sp.symbols('a r')\n\n# solve the first equation for r\nr = 16 / -4 - a\n\n# substitute r in the second equation\nequation = sp.Eq(-13*a - 2*r - 1692 + 1744, 0)\nequation = equation.subs(r, 16 / -4 - a)\n\n# solve the equation for a\nsolution = sp.solve(equation, a)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": false
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "What is the remainder when 117 is divided by 10? Let's write a program.",
    "output": "remainder = 117 % 10\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "Solve -7*u = 2*u - 45 for u. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nu = sp.symbols('u')\n\n# define the equation\nequation = sp.Eq(-7*u, 2*u - 45)\n\n# solve the equation\nsolution = sp.solve(equation, u)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "522",
    "gt": "522",
    "err": false,
    "question": "What is the greatest common divisor of 10141938 and 2610? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 10141938\nnum2 = 2610\n\n# calculate the greatest common divisor\ngcd = math.gcd(num1, num2)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "-66",
    "gt": "-66.0",
    "err": false,
    "question": "Calculate 5 + ((-4)/((-96)/15) - 73344/1024). Let's write a program.",
    "output": "import math\n\n# calculate the expression\nresult = 5 + ((-4)/((-96)/15) - 73344/1024)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "What is the units digit of 1110? Let's write a program.",
    "output": "def find_unit_digit(number):\n    return number % 10\n\nprint(find_unit_digit(1110))",
    "correct": true
  },
  {
    "ans": "558",
    "gt": "558",
    "err": false,
    "question": "What is the third root of 173500921 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the third root of 173500921\nthird_root = math.pow(173500921, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(third_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "[2, 7]",
    "err": false,
    "question": "List the prime factors of 9/15 - (-548)/20. Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = sp.Rational(9, 15) - sp.Rational(-548, 20)\n\n# simplify the expression\nsimplified_expr = sp.simplify(expr)\n\n# get the numerator\nnumerator = simplified_expr.as_numer_denom()[0]\n\n# get the prime factors of the numerator\nprime_factors = sp.factorint(numerator)\n\n# print the prime factors\nprint(prime_factors)",
    "correct": false
  },
  {
    "ans": "-11",
    "gt": "-11",
    "err": false,
    "question": "Let x(u) = -u**2 - 142*u + 46024. Determine x(-297). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nu = sp.symbols('u')\n\n# define the function\nx = -u**2 - 142*u + 46024\n\n# substitute u with -297\nx_value = x.subs(u, -297)\n\n# print the result\nprint(x_value)",
    "correct": true
  },
  {
    "ans": "17",
    "gt": "17",
    "err": false,
    "question": "Let t(w) = 3*w**2 - 23*w + 9. Let p be t(12). Let m = 251 - p. What is the remainder when m is divided by 23? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw = sp.symbols('w')\n\n# define the function t(w)\nt = 3*w**2 - 23*w + 9\n\n# calculate p\np = t.subs(w, 12)\n\n# calculate m\nm = 251 - p\n\n# calculate the remainder when m is divided by 23\nremainder = m % 23\n\n# print the result\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 13, in <module>\n  File \"<string>\", line 2, in run_it\nModuleNotFoundError: No module named 'min'\n",
    "gt": "-4",
    "err": true,
    "question": "Let n = 55/7 - 167/21. What is the smallest value in 2, n, -1/2, -4? Let's write a program.",
    "output": "import min\n\n# define the values\nn = 55/7 - 167/21\nvalues = [2, n, -1/2, -4]\n\n# find the smallest value\nsmallest_value = min(values)\n\n# print the result\nprint(smallest_value)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 11, in <module>\n  File \"<string>\", line 8, in run_it\nTypeError: 'float' object cannot be interpreted as an integer\n",
    "gt": "6",
    "err": true,
    "question": "Suppose -14*q + 68 = -16. Calculate the greatest common factor of 18 and q. Let's write a program.",
    "output": "import math\n\n# solve the equation for q\nq = 68 / -14\n\n# calculate the greatest common factor of 18 and q\ngcf = math.gcd(18, q)\n\nprint(gcf)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 11, in run_it\nAttributeError: module 'math' has no attribute 'argmin'\n",
    "gt": "3",
    "err": true,
    "question": "What is the nearest to -1/1049 in 3, -79/8, -5, 71? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [3, -79/8, -5, 71]\n\n# calculate the minimum distance from -1/1049\nmin_distance = min(abs(num - (-1/1049)) for num in numbers)\n\n# print the number that has the minimum distance\nprint(numbers[math.argmin(abs(num - (-1/1049)) for num in numbers)])",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "-1",
    "err": false,
    "question": "Solve 4*k + q + 3 = 0, 2*k + k - q + 4 = 0 for k. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nk, q = sp.symbols('k q')\n\n# define the equations\neq1 = sp.Eq(4*k + q + 3, 0)\neq2 = sp.Eq(2*k + k - q + 4, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (k, q))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": false
  },
  {
    "ans": "6",
    "gt": "6",
    "err": false,
    "question": "Suppose 0 = -2*c - o - 4*o + 10, -c - 3*o + 7 = 0. What is the units digit of -5 - (-171 - (5 + c))? Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\n\n# define the variables\nc, o = symbols('c o')\n\n# define the equations\neq1 = Eq(-2*c - o - 4*o + 10, 0)\neq2 = Eq(-c - 3*o + 7, 0)\n\n# solve the equations\nsolution = solve((eq1, eq2), (c, o))\n\n# calculate the units digit of -5 - (-171 - (5 + c))\nunits_digit = -5 - (-171 - (5 + solution[c]))\n\n# print the units digit\nprint(units_digit % 10)",
    "correct": true
  },
  {
    "ans": "10",
    "gt": "10",
    "err": false,
    "question": "Let c(n) = 16*n + 2. Let b = -5 + 2. Let l = -1 - b. Calculate the remainder when c(l) is divided by 12. Let's write a program.",
    "output": "def c(n):\n    return 16*n + 2\n\nb = -5 + 2\nl = -1 - b\n\nremainder = c(l) % 12\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "-4",
    "err": false,
    "question": "Solve 0 = -p - 5*r + 3 + 8, 0 = 4*p - 3*r + 25 for p. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\np, r = sp.symbols('p r')\n\n# define the equations\neq1 = sp.Eq(0, -p - 5*r + 3 + 8)\neq2 = sp.Eq(0, 4*p - 3*r + 25)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (p, r))\n\n# print the result\nfor variable in solution:\n    print(variable, solution[variable])",
    "correct": false
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "Solve 7*t + 8*t + 320 - 395 = 0 for t. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nt = sp.symbols('t')\n\n# define the equation\neq = sp.Eq(7*t + 8*t + 320 - 395, 0)\n\n# solve the equation\nsolution = sp.solve(eq, t)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "17",
    "gt": "17",
    "err": false,
    "question": "Let s = 55 + -38. Suppose 0 = -4*i - 8*y + 36, 2*i - 43*y + 45*y = 16. Which is bigger: s or i? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ni, y = sp.symbols('i y')\n\n# define the equations\neq1 = sp.Eq(-4*i - 8*y + 36, 0)\neq2 = sp.Eq(2*i - 43*y + 45*y, 16)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (i, y))\n\n# calculate s\ns = 55 + -38\n\n# find which is bigger: s or i\nif s > solution[i]:\n    print(s)\nelse:\n    print(solution[i])",
    "correct": true
  },
  {
    "ans": "11",
    "gt": "11.0",
    "err": false,
    "question": "What is the remainder when (-162)/486 + (-14434)/(-3) is divided by 12? Let's write a program.",
    "output": "remainder = ((-162)/486 + (-14434)/(-3)) % 12\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 23, in <module>\n  File \"<string>\", line 19, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "5",
    "err": true,
    "question": "Suppose -3*m + 0*m + 15 = 5*f, 0 = -m - 3*f + 5. Suppose 0 = -9*h + m*h + 16. Suppose h*i - i = 9. Solve 2*n + i = d, 3*d = -0*d + 5*n + 10 for d. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nm, f, h, i, n, d = sp.symbols('m f h i n d')\n\n# define the equations\neq1 = sp.Eq(-3*m + 0*m + 15, 5*f)\neq2 = sp.Eq(0, -m - 3*f + 5)\neq3 = sp.Eq(0, -9*h + m*h + 16)\neq4 = sp.Eq(h*i - i, 9)\neq5 = sp.Eq(2*n + i, d)\neq6 = sp.Eq(3*d, -0*d + 5*n + 10)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2, eq3, eq4, eq5, eq6), (m, f, h, i, n, d))\n\n# calculate d\nd = solution[d]\n\n# print the result\nprint(d)",
    "correct": false
  },
  {
    "ans": "-4988",
    "gt": "-4988",
    "err": false,
    "question": "Find the second derivative of -2494*p**2 - 4497*p wrt p. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\np = sp.symbols('p')\n\n# define the function\nf = -2494*p**2 - 4497*p\n\n# calculate the first derivative\nf_prime = sp.diff(f, p)\n\n# calculate the second derivative\nf_prime_prime = sp.diff(f_prime, p)\n\n# print the result\nprint(f_prime_prime)",
    "correct": true
  },
  {
    "ans": "-46",
    "gt": "0.4",
    "err": false,
    "question": "Which is the closest to -0.1?  (a) 48546  (b) -46  (c) -5  (d) 0.4 Let's write a program.",
    "output": "a = 48546\nb = -46\nc = -5\nd = 0.4\n\nclosest = b\n\nprint(closest)",
    "correct": false
  },
  {
    "ans": "325.46",
    "gt": "325.46",
    "err": false,
    "question": "What is -0.5 take away -325.96? Let's write a program.",
    "output": "print(-0.5 - -325.96)",
    "correct": true
  },
  {
    "ans": "-6",
    "gt": "-6",
    "err": false,
    "question": "Which is smaller: -6 or -3996/713? Let's write a program.",
    "output": "print(-6) if -6 < -3996/713 else print(-3996/713)",
    "correct": true
  },
  {
    "ans": "15",
    "gt": "5",
    "err": false,
    "question": "What is the millions digit of 15941470? Let's write a program.",
    "output": "millions_digit = 15941470 / 1000000\n\nprint(int(millions_digit))",
    "correct": false
  },
  {
    "ans": "29",
    "gt": "9",
    "err": false,
    "question": "What is the thousands digit of 29209? Let's write a program.",
    "output": "thousands_digit = 29209 / 1000\nprint(int(thousands_digit))",
    "correct": false
  },
  {
    "ans": "69",
    "gt": "69",
    "err": false,
    "question": "Calculate the remainder when 507 is divided by 73. Let's write a program.",
    "output": "remainder = 507 % 73\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Which is greater: 1 or 1/83616349? Let's write a program.",
    "output": "a = 1\nb = 1/83616349\n\nif a > b:\n    print(1)\nelse:\n    print(1/83616349)",
    "correct": true
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "Calculate 1 - (8 - 8 - (1 + 2)). Let's write a program.",
    "output": "print(1 - (8 - 8 - (1 + 2)))",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 15, in <module>\n  File \"<string>\", line 8, in run_it\nUnboundLocalError: cannot access local variable 'l' where it is not associated with a value\n",
    "gt": "-1",
    "err": true,
    "question": "Let a be (-1 - -3)*-2*(-3)/(-6). Let n be 2/(a/3) - -5. Suppose -l = n*l - l. Solve l*g + 2 = -2*g for g. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ng = sp.symbols('g')\n\n# solve the equation\nl = sp.solve(l*g + 2 - (-2*g), l)[0]\n\n# simplify the result\nl = sp.simplify(l)\n\n# print the result\nprint(l)",
    "correct": false
  },
  {
    "ans": "80.64",
    "gt": "80.64",
    "err": false,
    "question": "0.72 * 112 Let's write a program.",
    "output": "print(0.72 * 112)",
    "correct": true
  },
  {
    "ans": "-11",
    "gt": "-11",
    "err": false,
    "question": "Solve 237 + 390 = -57*c for c. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nc = sp.symbols('c')\n\n# define the equation\nequation = sp.Eq(237 + 390, -57*c)\n\n# solve the equation\nsolution = sp.solve(equation, c)\n\n# print the result\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-3",
    "gt": "8.0",
    "err": false,
    "question": "Let f be 75/12 + (-2)/8. Let m = f - -2. Which is the third smallest value?  (a) m  (b) -1/4  (c) -3 Let's write a program.",
    "output": "f = 75/12 + (-2)/8\nm = f - (-2)\n\nvalues = [m, -1/4, -3]\n\nthird_smallest = min(values)\nprint(third_smallest)",
    "correct": false
  },
  {
    "ans": "-6",
    "gt": "-6",
    "err": false,
    "question": "Let l(k) = 3 + 2 + k - 3 - 14. Give l(6). Let's write a program.",
    "output": "def l(k):\n    return 3 + 2 + k - 3 - 14\n\nprint(l(6))",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 8, in run_it\nTypeError: Expr.limit() missing 1 required positional argument: 'xlim'\n",
    "gt": "13.0",
    "err": true,
    "question": "What is the remainder when 93 is divided by (-62)/(-4) + 4/8? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = sp.Rational(93, 1) / (sp.Rational(-62, 1) / sp.Rational(-4, 1) + sp.Rational(4, 1) / sp.Rational(8, 1))\n\n# calculate the remainder\nremainder = expr.limit(0)\n\n# print the result\nprint(int(remainder))",
    "correct": false
  },
  {
    "ans": "11",
    "gt": "11.0",
    "err": false,
    "question": "Evaluate (-3 + 24)/3 + 20/((-15)/(-3)). Let's write a program.",
    "output": "print((-3 + 24)/3 + 20/((-15)/(-3)))",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "8",
    "err": false,
    "question": "What is the hundred millions digit of 1880250616? Let's write a program.",
    "output": "hundred_millions_digit = '1'\nprint(hundred_millions_digit)",
    "correct": false
  },
  {
    "ans": "-5",
    "gt": "-5",
    "err": false,
    "question": "Let u = 4 + -2. Suppose -2*a + 5*s = 1, -3*a = -2*a - 4*s + u. Let y(f) = 4*f**2 - 4*f**2 + f**a - 1 + 4*f. What is y(-2)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nu = 4 - 2\na, s = sp.symbols('a s')\n\n# define the equations\neq1 = sp.Eq(-2*a + 5*s, 1)\neq2 = sp.Eq(-3*a, -2*a - 4*s + u)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (a, s))\n\n# calculate y(-2)\ny = 4*(-2)**2 - 4*(-2)**2 + (-2)**solution[a] - 1 + 4*(-2)\nprint(y)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 9, in run_it\nNameError: name 'h' is not defined\n",
    "gt": "1",
    "err": true,
    "question": "Suppose 2*t + 55 = 65. Solve 3*h + 18 = 6, -h = -g + t for g. Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\n\n# define the variables\nt, g = symbols('t g')\n\n# define the equations\neq1 = Eq(2*t + 55, 65)\neq2 = Eq(3*h + 18, 6)\neq3 = Eq(-h, -g + t)\n\n# solve the first equation for t\nt_solution = solve(eq1, t)[0]\n\n# substitute t_solution in eq2 and solve for h\nh_solution = solve(eq2.subs(t, t_solution), h)[0]\n\n# substitute h_solution and t_solution in eq3 and solve for g\ng_solution = solve(eq3.subs({h: h_solution, t: t_solution}), g)[0]\n\nprint(g_solution)",
    "correct": false
  },
  {
    "ans": "118",
    "gt": "118",
    "err": false,
    "question": "Solve 30010 + 30052 = 509*s for s. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ns = sp.symbols('s')\n\n# define the equation\neq = sp.Eq(30010 + 30052, 509*s)\n\n# solve the equation\nsolution = sp.solve(eq, s)\n\n# print the result\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-0.375",
    "gt": "-3",
    "err": false,
    "question": "Let p be 2/7 + -2*37/112. What is the third biggest value in p, -2/3, -3? Let's write a program.",
    "output": "import numpy as np\n\n# Define the values\np = 2/7 - 2*37/112\nother_values = [-2/3, -3]\n\n# Find the third biggest value\nthird_biggest = sorted(np.array([p] + other_values))[2]\n\nprint(third_biggest)",
    "correct": false
  },
  {
    "ans": "1011",
    "gt": "1011",
    "err": false,
    "question": "Suppose 2*m - 2754 = 2*v - 742, 3*m = -5*v + 3074. Which is smaller: 1011 or m? Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\n\n# define the symbols\nm, v = symbols('m v')\n\n# define the equations\neq1 = Eq(2*m - 2754, 2*v - 742)\neq2 = Eq(3*m, -5*v + 3074)\n\n# solve the system of equations\nsolution = solve((eq1, eq2), (m, v))\n\n# find the smaller number between 1011 and m\nif solution[m] < 1011:\n    smaller_number = solution[m]\nelse:\n    smaller_number = 1011\n\nprint(smaller_number)",
    "correct": true
  },
  {
    "ans": "-1",
    "gt": "-1",
    "err": false,
    "question": "Solve 12*a + 9 = -3 for a. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\na = sp.symbols('a')\n\n# define the equation\nequation = sp.Eq(12*a + 9, -3)\n\n# solve the equation\nsolution = sp.solve(equation, a)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-16",
    "gt": "-16.0",
    "err": false,
    "question": "What is the value of (-12 + 224/40)*10/4? Let's write a program.",
    "output": "print((-12 + 224/40)*10/4)",
    "correct": false
  },
  {
    "ans": "0.4",
    "gt": "-0.5",
    "err": false,
    "question": "Which is the third biggest value?  (a) -0.5  (b) -3  (c) 114582  (d) 0.4 Let's write a program.",
    "output": "a = -0.5\nb = -3\nc = 114582\nd = 0.4\n\nthird_biggest = max(b, d)\n\nprint(third_biggest)",
    "correct": false
  },
  {
    "ans": "891",
    "gt": "891",
    "err": false,
    "question": "Simplify ((sqrt(132)/sqrt(3)*2 - sqrt(44))/(sqrt(24)/sqrt(486)))**2. Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = ((sp.sqrt(132)/sp.sqrt(3)*2 - sp.sqrt(44))/(sp.sqrt(24)/sp.sqrt(486)))**2\n\n# simplify the expression\nsimplified_expr = sp.simplify(expr)\n\n# print the result\nprint(simplified_expr)",
    "correct": true
  },
  {
    "ans": "6",
    "gt": "6",
    "err": false,
    "question": "Let l = -166 + 176. What is the remainder when 46 is divided by l? Let's write a program.",
    "output": "l = -166 + 176\nremainder = 46 % l\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "-10",
    "err": false,
    "question": "Let c = 23 + -67. Let u be (3*1)/((-33)/c). What is the second derivative of u*t - 5*t**2 + 0 + 0 - 7*t wrt t? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nt = sp.symbols('t')\n\n# define the expression\nexpr = (3*t)/((-33)/(23 + -67)) - 5*t**2 + 0 + 0 - 7*t\n\n# calculate the derivative\nderivative = sp.diff(expr, t)\n\n# print the result\nprint(derivative)",
    "correct": false
  },
  {
    "ans": "20",
    "gt": "7",
    "err": false,
    "question": "What is the thousands digit of 207596? Let's write a program.",
    "output": "thousands_digit = 207596 / 10000\nprint(int(thousands_digit))",
    "correct": false
  },
  {
    "ans": "272",
    "gt": "272",
    "err": false,
    "question": "Let r(s) = s**2 - 61*s + 272. What is r(0)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ns = sp.symbols('s')\n\n# define the function\nr = s**2 - 61*s + 272\n\n# calculate the value of r(0)\nr_0 = r.subs(s, 0)\n\nprint(r_0)",
    "correct": true
  },
  {
    "ans": "-1.0000000000000029",
    "gt": "-0.1",
    "err": false,
    "question": "Let z = 0.95 + -1. Let h = 35.05 + -36. Let j = z + h. What is the second smallest value in -0.1, j, 4? Let's write a program.",
    "output": "z = 0.95 - 1\nh = 35.05 - 36\nj = z + h\nvalues = [-0.1, j, 4]\n\nsecond_smallest = min(values[1:])\nprint(second_smallest)",
    "correct": false
  },
  {
    "ans": "308",
    "gt": "308",
    "err": false,
    "question": "What is the square root of 95088 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the square root of 95088\nsqrt = math.sqrt(95088)\n\n# round to the nearest integer\nnearest_integer = round(sqrt)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "-0.3",
    "gt": "0.013",
    "err": false,
    "question": "Which is the nearest to 0.2665?  (a) 12  (b) -0.3  (c) 0  (d) 0.013 Let's write a program.",
    "output": "a = 12\nb = -0.3\nc = 0\nd = 0.013\n\nnearest = min(a, b, c, d)\n\nprint(nearest)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 8, in run_it\nNameError: name 'a' is not defined\n",
    "gt": "4",
    "err": true,
    "question": "Solve 0 = -a - 4*r - 9 + 29, -5*r + 16 = -a for a. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nr = sp.symbols('r')\n\n# define the equations\neq1 = sp.Eq(-a - 4*r - 9 + 29, 0)\neq2 = sp.Eq(-5*r + 16, -a)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (a, r))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": false
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "Let j(l) = l**3 + 7*l**2 - 3*l - 62. Let f be j(-5). Suppose -f*u = 5*r - 1261, -4*u + 4*r + 1716 = 2*r. What is the units digit of u? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nl = sp.symbols('l')\nu = sp.symbols('u')\nr = sp.symbols('r')\n\n# define the function j(l)\nj = l**3 + 7*l**2 - 3*l - 62\n\n# calculate f\nf = j.subs(l, -5)\n\n# define the equations\neq1 = sp.Eq(-f*u, 5*r - 1261)\neq2 = sp.Eq(-4*u + 4*r + 1716, 2*r)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (u, r))\n\n# calculate the units digit of u\nunits_digit_u = solution[u] % 10\n\nprint(units_digit_u)",
    "correct": true
  },
  {
    "ans": "",
    "gt": "-1.0",
    "err": true,
    "question": "Let g = 0.28 - 2.28. Let v = 0.3 + -1.3. Which is greater: v or g? Let's write a program.",
    "output": "g = 0.28 - 2.28\nv = 0.3 + -1.3\n\nif g > v:\n  print('g')\nelse:\n  print('v')",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Which is greater: 1 or -1/730? Let's write a program.",
    "output": "a = 1\nb = -1/730\n\nif a > b:\n    print(1)\nelse:\n    print(-1/730)",
    "correct": true
  },
  {
    "ans": "12",
    "gt": "-94.0",
    "err": false,
    "question": "Let a = -86.31 - 7.69. What is the fourth biggest value in -2/7, a, 12, -5? Let's write a program.",
    "output": "import math\n\n# define the variable\na = -86.31 - 7.69\n\n# calculate the fourth biggest value\nfourth_biggest = max(-2/7, a, 12, -5)\n\nprint(fourth_biggest)",
    "correct": false
  },
  {
    "ans": "972.5",
    "gt": "972.5",
    "err": false,
    "question": "What is the distance between 14.5 and -958? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 14.5\nnum2 = -958\n\n# calculate the distance\ndistance = math.fabs(num1 - num2)\n\n# print the result\nprint(distance)",
    "correct": true
  },
  {
    "ans": "13",
    "gt": "13",
    "err": false,
    "question": "Let f(i) = 9*i**2 - 2*i - 6. What is the remainder when f(3) is divided by 14? Let's write a program.",
    "output": "def f(i):\n    return 9*i**2 - 2*i - 6\n\nremainder = f(3) % 14\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-5",
    "gt": "1.4",
    "err": false,
    "question": "Which is the third smallest value?  (a) 1/5  (b) -5  (c) 1.4  (d) 9  (e) 11 Let's write a program.",
    "output": "a = 1/5\nb = -5\nc = 1.4\nd = 9\ne = 11\n\nthird_smallest = min(b, c, d, e)\n\nprint(third_smallest)",
    "correct": false
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "Calculate 9 - (9 + 8 + 0 + (-5 - 1)). Let's write a program.",
    "output": "print(9 - (9 + 8 + 0 + (-5 - 1)))",
    "correct": true
  },
  {
    "ans": "9",
    "gt": "9",
    "err": false,
    "question": "Let x(v) = v**2 - 2*v + 39. What is the units digit of x(0)? Let's write a program.",
    "output": "def units_digit(v):\n    return (v**2 - 2*v + 39) % 10\n\nprint(units_digit(0))",
    "correct": true
  },
  {
    "ans": "33307",
    "gt": "33307",
    "err": false,
    "question": "What is the biggest value in -1/9, 33307, -32? Let's write a program.",
    "output": "import math\n\n# define the values\nvalues = [-1/9, 33307, -32]\n\n# find the biggest value\nbiggest_value = max(values)\n\n# print the result\nprint(biggest_value)",
    "correct": true
  },
  {
    "ans": "-108",
    "gt": "-108",
    "err": false,
    "question": "Find the third derivative of -18*p**3 + 34*p**2 + 16*p**2 - 26*p**2 wrt p. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\np = sp.symbols('p')\n\n# define the function\nf = -18*p**3 + 34*p**2 + 16*p**2 - 26*p**2\n\n# calculate the third derivative\nf_third_derivative = sp.diff(f, p, 3)\n\n# print the result\nprint(f_third_derivative)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 23, in <module>\n  File \"<string>\", line 21, in run_it\nTypeError: 'Float' object is not iterable\n",
    "gt": "[2, 3]",
    "err": true,
    "question": "Let j = -21 - -9. Let w be (-2 + j/(-1))/2. Suppose -c + 78 = w*v - 12, 2*c = -4*v + 72. List the prime factors of v. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj, w, c, v = sp.symbols('j w c v')\n\n# define j\nj = -21 - -9\n\n# define w\nw = (-2 + j/(-1))/2\n\n# define the equations\neq1 = sp.Eq(-c + 78, w*v - 12)\neq2 = sp.Eq(2*c, -4*v + 72)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (c, v))\n\n# print the prime factors of v\nfor v in solution[v]:\n    print(sp.factorint(v))",
    "correct": false
  },
  {
    "ans": "18",
    "gt": "18",
    "err": false,
    "question": "What is the square root of 334 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the square root of 334\nsqrt_334 = math.sqrt(334)\n\n# round to the nearest integer\nnearest_integer = round(sqrt_334)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "-8",
    "gt": "-8",
    "err": false,
    "question": "Let r(t) = -t**3 + 173*t**2 + 2402*t - 469232. Give r(171). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nt = sp.symbols('t')\n\n# define the function\nr = -t**3 + 173*t**2 + 2402*t - 469232\n\n# calculate the value of r at t=171\nr_171 = r.subs(t, 171)\n\nprint(r_171)",
    "correct": true
  },
  {
    "ans": "8",
    "gt": "8",
    "err": false,
    "question": "Let u(f) = f + 1 + f - 3*f. Calculate the remainder when 18 is divided by u(-9). Let's write a program.",
    "output": "def u(f):\n    return f + 1 + f - 3*f\n\nremainder = 18 % u(-9)\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "10",
    "gt": "10",
    "err": false,
    "question": "What is the remainder when 124 is divided by 19? Let's write a program.",
    "output": "remainder = 124 % 19\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "What is the units digit of 1777? Let's write a program.",
    "output": "def find_unit_digit(number):\n    return number % 10\n\nprint(find_unit_digit(1777))",
    "correct": true
  },
  {
    "ans": "-4",
    "gt": "0.75",
    "err": false,
    "question": "Which is the nearest to 2?  (a) 3/4  (b) -0.3  (c) -4  (d) 7  (e) -2/13 Let's write a program.",
    "output": "a = 3/4\nb = -0.3\nc = -4\nd = 7\ne = -2/13\n\nnearest = min(a, b, c, d, e)\n\nprint(nearest)",
    "correct": false
  },
  {
    "ans": "-14",
    "gt": "-14",
    "err": false,
    "question": "Which is smaller: 1/7 or -14? Let's write a program.",
    "output": "a = 1/7\nb = -14\n\nif a < b:\n    print(a)\nelse:\n    print(b)",
    "correct": true
  },
  {
    "ans": "97",
    "gt": "97",
    "err": false,
    "question": "What is the highest common divisor of 10573 and 2533543? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 10573\nnum2 = 2533543\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "Solve 171*q - 588 = 465*q for q. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nq = sp.symbols('q')\n\n# define the equation\nequation = sp.Eq(171*q - 588, 465*q)\n\n# solve the equation\nsolution = sp.solve(equation, q)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 18, in <module>\n  File \"<string>\", line 8, in run_it\nNameError: name 'x' is not defined\n",
    "gt": "1",
    "err": true,
    "question": "Suppose -x = -3*n + 1058, -4*x + 1735 = -n + 6*n. What is the units digit of n? Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\n\n# define the variables\nn = symbols('n')\n\n# define the equations\neq1 = Eq(-x, -3*n + 1058)\neq2 = Eq(-4*x + 1735, -n + 6*n)\n\n# solve the system of equations\nsolution = solve((eq1, eq2), (x, n))\n\n# get the units digit of n\nunits_digit_n = solution[n] % 10\n\nprint(units_digit_n)",
    "correct": false
  },
  {
    "ans": "-0.5",
    "gt": "-0.5",
    "err": false,
    "question": "Let d = -3.37 + 3.36. Which is smaller: d or -1/2? Let's write a program.",
    "output": "d = -3.37 + 3.36\nd = round(d, 2)\n\n# Compare d with -1/2\nif d < -1/2:\n    print(d)\nelse:\n    print(-1/2)",
    "correct": true
  },
  {
    "ans": "-318.2",
    "gt": "-318.2",
    "err": false,
    "question": "-1591 divided by 5 Let's write a program.",
    "output": "print(-1591 / 5)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 14, in <module>\n  File \"<string>\", line 2, in run_it\nModuleNotFoundError: No module named 'min'\n",
    "gt": "-2",
    "err": true,
    "question": "What is the smallest value in 0.22, 1.34, -2? Let's write a program.",
    "output": "import min\n\n# define the numbers\nnum1 = 0.22\nnum2 = 1.34\nnum3 = -2\n\n# find the smallest number\nsmallest_num = min(num1, num2, num3)\n\n# print the smallest number\nprint(smallest_num)",
    "correct": false
  },
  {
    "ans": "-3",
    "gt": "-3.0",
    "err": false,
    "question": "168/112*(-24 - -22) Let's write a program.",
    "output": "print(168/112*(-24 - -22))",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "Let u(d) = -d**3 - 12*d**2 + d + 12. Calculate u(-12). Let's write a program.",
    "output": "def u(d):\n    return -d**3 - 12*d**2 + d + 12\n\nprint(u(-12))",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 9\n    \"0.3\" = str(0.3)\n    ^^^^^\nSyntaxError: cannot assign to literal here. Maybe you meant '==' instead of '='?\n",
    "gt": "10.0",
    "err": true,
    "question": "Let d be (-6)/(66/(-253)) - 13. What is the third smallest value in d, 0.3, -168? Let's write a program.",
    "output": "import math\n\n# calculate d\nd = (-6)/(66/(-253)) - 13\n\n# convert all values to string for sorting\nd = str(d)\n\"0.3\" = str(0.3)\n\"-168\" = str(-168)\n\n# sort the values\nsorted_values = sorted(d, \"0.3\", \"-168\")\n\n# print the third smallest value\nprint(sorted_values[2])",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "6",
    "err": false,
    "question": "Let a = -2 - -6. Suppose t = -a*t - 35. Let l = -1 - t. What is the units digit of l? Let's write a program.",
    "output": "def find_units_digit():\n    a = -2 - -6\n    t = (-a*-1) - 35\n    l = -1 - t\n    units_digit = l % 10\n    return units_digit\n\nprint(find_units_digit())",
    "correct": false
  },
  {
    "ans": "-4",
    "gt": "-4",
    "err": false,
    "question": "Let t(q) be the third derivative of -q**5/20 + q**4/12 + q**3/6 + 9*q**2. What is t(-1)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nq = sp.symbols('q')\n\n# define the function\nt = -q**5/20 + q**4/12 + q**3/6 + 9*q**2\n\n# calculate the third derivative\nt_third = sp.diff(t, q, 3)\n\n# substitute q = -1 into the third derivative\nresult = t_third.subs(q, -1)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "-5",
    "gt": "-5",
    "err": false,
    "question": "Solve -270 = 58*g - 53*g + 5*m, 3*m = -4*g - 159 + 56 - 64 for g. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ng, m = sp.symbols('g m')\n\n# define the equations\neq1 = sp.Eq(-270, 58*g - 53*g + 5*m)\neq2 = sp.Eq(3*m, -4*g - 159 + 56 - 64)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (g, m))\n\n# print the result\nprint(solution[g])",
    "correct": true
  },
  {
    "ans": "-0.1",
    "gt": "0",
    "err": false,
    "question": "Which is the nearest to 1?  (a) -0.1  (b) 4  (c) 418  (d) 0 Let's write a program.",
    "output": "a = -0.1\nb = 4\nc = 418\nd = 0\n\n# Find the nearest to 1\nnearest_to_1 = min(a, b, c, d)\n\nprint(nearest_to_1)",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "0.0",
    "err": false,
    "question": "What is (-8)/16*0/(-2)? Let's write a program.",
    "output": "print((-8)/16*0/(-2))",
    "correct": false
  },
  {
    "ans": "2.3",
    "gt": "2.3",
    "err": false,
    "question": "Which is the biggest value?  (a) 0.2  (b) 2  (c) -3  (d) 2.3 Let's write a program.",
    "output": "a = 0.2\nb = 2\nc = -3\nd = 2.3\n\nif a > b:\n    if a > c:\n        if a > d:\n            print(a)\n        else:\n            print(d)\n    else:\n        if c > d:\n            print(c)\n        else:\n            print(d)\nelse:\n    if b > c:\n        if b > d:\n            print(b)\n        else:\n            print(d)\n    else:\n        if c > d:\n            print(c)\n        else:\n            print(d)",
    "correct": true
  },
  {
    "ans": "138",
    "gt": "138",
    "err": false,
    "question": "What is the cube root of 2631015 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate cube root\ncube_root = math.pow(2631015, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(cube_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "Simplify (1*(sqrt(77) + sqrt(77)*-1))/sqrt(11). Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (1*(sp.sqrt(77) + sp.sqrt(77)*-1))/sp.sqrt(11)\n\n# simplify the expression\nsimplified_expr = sp.simplify(expr)\n\n# print the result\nprint(simplified_expr)",
    "correct": true
  },
  {
    "ans": "54",
    "gt": "54",
    "err": false,
    "question": "What is the highest common factor of 162 and 1728? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 162\nnum2 = 1728\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "-312",
    "gt": "-312*u",
    "err": false,
    "question": "Let b(w) = -w**3 + w**2 + w - 1. Let c(s) = 13*s**4 - s**3 - 7*s**2 + s - 1. Let h(g) = b(g) - c(g). What is the third derivative of h(u) wrt u? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nu = sp.symbols('u')\n\n# define the functions b(w), c(s) and h(g)\nb = -u**3 + u**2 + u - 1\nc = 13*u**4 - u**3 - 7*u**2 + u - 1\nh = b - c\n\n# calculate the third derivative of h(u) wrt u\nthird_derivative = sp.diff(h, u, 3)\n\n# print the result\nprint(third_derivative)",
    "correct": false
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "What is the hundreds digit of 2213502? Let's write a program.",
    "output": "hundreds_digit = 5\nprint(hundreds_digit)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 7:0: if a < c:\n",
    "gt": "5.0",
    "err": true,
    "question": "Let h = -0.11 - -5.11. Which is the third smallest value?  (a) 2  (b) h  (c) 1 Let's write a program.",
    "output": "h = -0.11 - -5.11\na = 2\nb = h\nc = 1\n\nif a < b:\nif a < c:\nprint(a)\nelse:\nprint(c)\nelse:\nif b < c:\nprint(b)\nelse:\nprint(c)",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "2.0",
    "err": false,
    "question": "Let g(z) = -z**3 + 13*z**2 - 35*z - 5. Let c = 3 - 2. What is the remainder when (-6)/7*(c + -8) is divided by g(9)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nz = sp.symbols('z')\n\n# define the function g(z)\ng = -z**3 + 13*z**2 - 35*z - 5\n\n# define c = 3 - 2\nc = 3 - 2\n\n# calculate (-6)/7*(c + -8)\nremainder = (-6)/7 * (c + -8)\n\n# calculate the remainder when remainder is divided by g(9)\nremainder_mod_g = remainder % g.subs(z, 9)\n\n# print the result\nprint(remainder_mod_g)",
    "correct": false
  },
  {
    "ans": "1417",
    "gt": "1417",
    "err": false,
    "question": "What is the remainder when 50851 is divided by 1498? Let's write a program.",
    "output": "remainder = 50851 % 1498\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-79/13",
    "gt": "-2",
    "err": false,
    "question": "Solve -5*r + 37 = l + 64, 0 = -8*l - r - 21 for l. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nr, l = sp.symbols('r l')\n\n# define the equations\neq1 = sp.Eq(-5*r + 37, l + 64)\neq2 = sp.Eq(-8*l - r, -21)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (r, l))\n\n# print the result\nfor variable, value in solution.items():\n    print(variable, value)",
    "correct": false
  },
  {
    "ans": "-8",
    "gt": "-8.0",
    "err": false,
    "question": "Calculate ((-11264)/(-132))/16*(9/(-2))/3. Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpression = ((-11264)/(-132))/16*(9/(-2))/3\n\n# calculate the result\nresult = sp.simplify(expression)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "44",
    "gt": "44",
    "err": false,
    "question": "Solve 1718 = 117*a - 769 - 2661 for a. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\na = sp.symbols('a')\n\n# define the equation\nequation = sp.Eq(1718, 117*a - 769 - 2661)\n\n# solve the equation\nsolution = sp.solve(equation, a)\n\n# print the result\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "Solve -5*x = -3*g + 4, 5*g + 3*x + 0*x + 16 = 0 for g. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nx, g = sp.symbols('x g')\n\n# define the equations\neq1 = sp.Eq(-5*x, -3*g + 4)\neq2 = sp.Eq(5*g + 3*x + 0*x + 16, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (x, g))\n\n# print the result\nfor variable, value in solution.items():\n    print(variable, value)",
    "correct": true
  },
  {
    "ans": "",
    "gt": "-5",
    "err": true,
    "question": "Let o(n) = -n**3 + 2*n**2. Let c be o(1). Let d be 2 - (c - (0 - -2)). Solve d + 2 = -m for m. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nn = sp.symbols('n')\n\n# define the function o(n)\no = -n**3 + 2*n**2\n\n# calculate c\nc = o.subs(n, 1)\n\n# calculate d\nd = 2 - (c - (0 - -2))\n\n# solve the equation d + 2 = -m\nm = sp.solve(d + 2, n)\n\n# print the result\nprint(m)",
    "correct": false
  },
  {
    "ans": "184",
    "gt": "184",
    "err": false,
    "question": "What is 1134508901 to the power of 1/4, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# define the number\nnum = 1134508901\n\n# calculate the fourth root of the number\nroot = math.pow(num, 1/4)\n\n# round the result to the nearest integer\nnearest_int = round(root)\n\nprint(nearest_int)",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "Which is greater: -9 or 0? Let's write a program.",
    "output": "num1 = -9\nnum2 = 0\n\nif num1 > num2:\n    print(num1)\nelse:\n    print(num2)",
    "correct": true
  },
  {
    "ans": "-22",
    "gt": "-22",
    "err": false,
    "question": "Suppose 11*w = 19*w. Let p(g) = 14 + g**2 + w*g**2 - 3*g - 23*g + 11*g. Calculate p(12). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw, g = sp.symbols('w g')\n\n# define the equation\neq = sp.Eq(11*w, 19*w)\n\n# solve the equation\nsolution = sp.solve(eq, w)[0]\n\n# define the function p(g)\np = 14 + g**2 + solution*g**2 - 3*g - 23*g + 11*g\n\n# calculate p(12)\nresult = p.subs(g, 12)\n\nprint(result)",
    "correct": true
  },
  {
    "ans": "10",
    "gt": "10",
    "err": false,
    "question": "What is the fourth root of 10096 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Calculate the fourth root of 10096\nroot = math.pow(10096, 1/4)\n\n# Round to the nearest integer\nnearest_integer = round(root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 15, in run_it\nTypeError: cannot unpack non-iterable Symbol object\n",
    "gt": "-2",
    "err": true,
    "question": "Solve 3*y + 21 = 5*s, 14*y - 9*y + 5*s = 5 for y. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ny, s = sp.symbols('y s')\n\n# define the equations\neq1 = sp.Eq(3*y + 21, 5*s)\neq2 = sp.Eq(14*y - 9*y + 5*s, 5)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (y, s))\n\n# print the result\nfor variable, value in solution:\n    print(variable, '=', value)",
    "correct": false
  },
  {
    "ans": "34",
    "gt": "34",
    "err": false,
    "question": "Let h(c) = -3*c**3 - c**2 + 141*c + 90. Calculate the remainder when h(-12) is divided by 46. Let's write a program.",
    "output": "import sympy as sp\n\n# define the function\nc = sp.symbols('c')\nh = -3*c**3 - c**2 + 141*c + 90\n\n# calculate the remainder\nremainder = h.subs(c, -12) % 46\n\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "642",
    "gt": "642",
    "err": false,
    "question": "What is the third root of 264405262 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the third root of 264405262\nthird_root = math.pow(264405262, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(third_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Solve -s = 3*f + 8, -5*f + 4*f = -3*s + 6 for s. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ns, f = sp.symbols('s f')\n\n# define the equations\neq1 = sp.Eq(-s, 3*f + 8)\neq2 = sp.Eq(-5*f + 4*f, -3*s + 6)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (s, f))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": true
  },
  {
    "ans": "82",
    "gt": "82",
    "err": false,
    "question": "Suppose 5*d = -f + 14817, 10387 + 4409 = 5*d - 2*f. Calculate the remainder when d is divided by 90. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nd, f = sp.symbols('d f')\n\n# define the equations\neq1 = sp.Eq(5*d, -f + 14817)\neq2 = sp.Eq(10387 + 4409, 5*d - 2*f)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (d, f))\n\n# calculate the remainder when d is divided by 90\nremainder = solution[d] % 90\n\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-76",
    "gt": "-76",
    "err": false,
    "question": "Solve 1065*z + 125096 = 404*z - 985*z for z. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nz = sp.symbols('z')\n\n# define the equation\neq = sp.Eq(1065*z + 125096, 404*z - 985*z)\n\n# solve the equation\nsolution = sp.solve(eq, z)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "11",
    "gt": "11",
    "err": false,
    "question": "What is the fifth root of 144251 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the fifth root of 144251\nfifth_root = math.pow(144251, 1/5)\n\n# round to the nearest integer\nnearest_integer = round(fifth_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "6",
    "gt": "6",
    "err": false,
    "question": "Suppose 14 = 3*a - 4*t, -5*a + 30 = 5*t - 5. Let v be (28/a)/7*1125/6. Let j = v + 136. What is the tens digit of j? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\na, t = sp.symbols('a t')\n\n# define the equations\neq1 = sp.Eq(3*a - 4*t, 14)\neq2 = sp.Eq(5*t - 5*a, -5)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (a, t))\n\n# calculate v\nv = (28/solution[a])/(7*1125/6)\n\n# calculate j\nj = v + 136\n\n# get the tens digit of j\ntens_digit = str(j)[-2]\n\n# print the tens digit\nprint(tens_digit)",
    "correct": true
  },
  {
    "ans": "-3",
    "gt": "-3",
    "err": false,
    "question": "Suppose 4*b + 5*j + 38 = 0, j + 0*j + 10 = -b. Let l be (-30)/b*(-4)/(-5). Solve -3*n + l*p - 7*p = -11, -4 = -p for n. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nb, j, n, p = sp.symbols('b j n p')\n\n# define the equations\neq1 = sp.Eq(4*b + 5*j + 38, 0)\neq2 = sp.Eq(j + 0*j + 10, -b)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (b, j))\n\n# calculate l\nl = (-30) / solution[b] * (-4) / (-5)\n\n# define the second equation\neq3 = sp.Eq(-3*n + l*p - 7*p, -11)\neq4 = sp.Eq(-4, -p)\n\n# solve the system of equations\nsolution2 = sp.solve((eq3,eq4), (n, p))\n\n# print the result\nprint(solution2[n])",
    "correct": true
  },
  {
    "ans": "-0.2",
    "gt": "-13",
    "err": false,
    "question": "Suppose -9*i - 84 - 33 = 0. Which is the smallest value?  (a) i  (b) 2  (c) -0.2 Let's write a program.",
    "output": "import math\n\n# define the variables\ni = math.inf\n# -9*i - 84 - 33 = 0\n# -9*i = 84 + 33\n# i = -84 / -9\n# i = 9\n\n# print the smallest value\nprint(min(i, 2, -0.2))",
    "correct": false
  },
  {
    "ans": "-1",
    "gt": "-1.0",
    "err": false,
    "question": "Evaluate (7/((-35)/(-15)))/(-3). Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (7/((-35)/(-15)))/(-3)\n\n# evaluate the expression\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "What is -4 - ((8 - -5) + -19)? Let's write a program.",
    "output": "print(-4 - ((8 - -5) + -19))",
    "correct": true
  },
  {
    "ans": "63",
    "gt": "63",
    "err": false,
    "question": "What is the highest common factor of 6489 and 189? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 6489\nnum2 = 189\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "Solve -51*g = -9*g - 294 for g. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ng = sp.symbols('g')\n\n# define the equation\nequation = sp.Eq(-51*g, -9*g - 294)\n\n# solve the equation\nsolution = sp.solve(equation, g)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-499",
    "gt": "-499",
    "err": false,
    "question": "Let z(x) = 38*x**2 + 646*x + 1477. Give z(-13). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nx = sp.symbols('x')\n\n# define the function\nz = 38*x**2 + 646*x + 1477\n\n# substitute x with -13\nz_at_minus_13 = z.subs(x, -13)\n\n# print the result\nprint(z_at_minus_13)",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "Let q(s) = 2075*s - 29052. What is q(14)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ns = sp.symbols('s')\n\n# define the function\nq = 2075*s - 29052\n\n# calculate the value of q at s=14\nq_14 = q.subs(s, 14)\n\nprint(q_14)",
    "correct": true
  },
  {
    "ans": "0.5",
    "gt": "0.5",
    "err": false,
    "question": "4/6*(-21)/(-28) Let's write a program.",
    "output": "print(4/6*(-21)/(-28))",
    "correct": true
  },
  {
    "ans": "20.46",
    "gt": "20.46",
    "err": false,
    "question": "Product of -0.66 and -31. Let's write a program.",
    "output": "\nprint(-0.66 * -31)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2.0",
    "err": false,
    "question": "What is 2612 divided by 1306? Let's write a program.",
    "output": "print(2612 / 1306)",
    "correct": false
  },
  {
    "ans": "-97212",
    "gt": "-97212",
    "err": false,
    "question": "Which is smaller: -97190 or -97212? Let's write a program.",
    "output": "print(-97190) if -97190 < -97212 else print(-97212)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 4:30: expression = ((-154)/(-28))/11)/((-1)/20)\n",
    "gt": "-10.0",
    "err": true,
    "question": "Calculate (((-154)/(-28))/11)/((-1)/20). Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpression = ((-154)/(-28))/11)/((-1)/20)\n\n# calculate the result\nresult = sp.simplify(expression)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "What is the closest to -4/7 in -29, 3/7, 0? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [-29, 3/7, 0]\n\n# find the closest to -4/7\nclosest = min(numbers, key=lambda x:abs(x+4/7))\n\nprint(closest)",
    "correct": true
  },
  {
    "ans": "25",
    "gt": "25",
    "err": false,
    "question": "What is the sixth root of 268163237 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the sixth root of 268163237\nroot = math.pow(268163237, 1/6)\n\n# round to the nearest integer\nnearest_integer = round(root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "Suppose 163*o + 4615 = 158*o. Let i = o - -1458. What is the units digit of i? Let's write a program.",
    "output": "from sympy import Eq, Symbol, solve\r\n\r\n# 163*o + 4615 = 158*o\r\neq = Eq(163*Symbol('o') + 4615, 158*Symbol('o'))\r\n\r\n# solve the equation\r\nsolution = solve(eq, 'o')\r\n\r\n# calculate i = o - -1458\r\ni = solution[0] - -1458\r\n\r\n# get the units digit of i\r\nunits_digit = i % 10\r\n\r\nprint(units_digit)",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "Solve 2*v + 762843*d = 762846*d + 59, -d + 7 = -14*v for v. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nv, d = sp.symbols('v d')\n\n# define the equations\neq1 = sp.Eq(2*v + 762843*d, 762846*d + 59)\neq2 = sp.Eq(-d + 7, -14*v)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (v, d))\n\n# print the result\nfor variable in solution:\n    print(variable, solution[variable])",
    "correct": true
  },
  {
    "ans": "17",
    "gt": "17",
    "err": false,
    "question": "Suppose b - 4*j = 75, 4 = -2*j - 2. What is the remainder when b is divided by 23? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj, b = sp.symbols('j b')\n\n# define the equations\neq1 = sp.Eq(b - 4*j, 75)\neq2 = sp.Eq(4, -2*j - 2)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (j, b))\n\n# calculate the remainder of b when divided by 23\nremainder = solution[b] % 23\n\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "2838.3",
    "gt": "2838.3",
    "err": false,
    "question": "Calculate 28383 divided by 10. Let's write a program.",
    "output": "print(28383 / 10)",
    "correct": true
  },
  {
    "ans": "0.4",
    "gt": "0.4",
    "err": false,
    "question": "Let d = -0.02 - -11.02. Let i = d + -6. Let l = -5 + i. What is the closest to l in 0.4, 3/4, 2? Let's write a program.",
    "output": "d = -0.02 - -11.02\ni = d + -6\nl = -5 + i\n\nvalues = [0.4, 3/4, 2]\n\nclosest = min(values, key=lambda x:abs(x-l))\n\nprint(closest)",
    "correct": true
  },
  {
    "ans": "37",
    "gt": "37",
    "err": false,
    "question": "Let k(f) = -4*f**3 - 10*f**2 - 11*f - 14. What is k(-3)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nf = sp.symbols('f')\n\n# define the function\nk = -4*f**3 - 10*f**2 - 11*f - 14\n\n# substitute f with -3\nresult = k.subs(f, -3)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "128",
    "gt": "128",
    "err": false,
    "question": "What is the remainder when 29105714 is divided by 954? Let's write a program.",
    "output": "remainder = 29105714 % 954\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "32",
    "gt": "32",
    "err": false,
    "question": "Let d(z) = 120*z - 928. Determine d(8). Let's write a program.",
    "output": "def d(z):\n    return 120*z - 928\n\nprint(d(8))",
    "correct": true
  },
  {
    "ans": "-14",
    "gt": "-14",
    "err": false,
    "question": "Solve -23*n + 1629*n + 7738 = -1740 - 13006 for n. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nn = sp.symbols('n')\n\n# define the equation\neq = sp.Eq(-23*n + 1629*n + 7738, -1740 - 13006)\n\n# solve the equation\nsolution = sp.solve(eq, n)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "2.5",
    "gt": "2.5",
    "err": false,
    "question": "What is 2*1*(-5)/(-4)? Let's write a program.",
    "output": "print(2*1*(-5)/(-4))",
    "correct": true
  },
  {
    "ans": "-36",
    "gt": "-36.0",
    "err": false,
    "question": "What is (-72)/(-1)*(-3842)/7684? Let's write a program.",
    "output": "print((-72)/(-1)*(-3842)/7684)",
    "correct": false
  },
  {
    "ans": "31",
    "gt": "31.0",
    "err": false,
    "question": "Evaluate (5890/(-76))/5*8/(-4). Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (5890/(-76))/5*8/(-4)\n\n# evaluate the expression\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "45",
    "gt": "45",
    "err": false,
    "question": "Calculate the highest common divisor of 90 and 945. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 90\nnum2 = 945\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "409",
    "gt": "409",
    "err": false,
    "question": "Let z(w) = 2*w**3 - 380*w**2 + 368*w + 2299. Calculate z(189). Let's write a program.",
    "output": "def z(w):\n    return 2*w**3 - 380*w**2 + 368*w + 2299\n\nprint(z(189))",
    "correct": true
  },
  {
    "ans": "55",
    "gt": "55.0",
    "err": false,
    "question": "What is the value of (153 - -12)*(-280)/(-840)? Let's write a program.",
    "output": "print((153 - -12)*(-280)/(-840))",
    "correct": false
  },
  {
    "ans": "217",
    "gt": "217",
    "err": false,
    "question": "What is the highest common divisor of 4991 and 136927? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 4991\nnum2 = 136927\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "-109",
    "err": false,
    "question": "Which is the fifth biggest value?  (a) -1  (b) -2/5  (c) -5  (d) 2  (e) -109 Let's write a program.",
    "output": "value = [-109, -5, -2/5, -1, 2]\r\nprint(max(value))",
    "correct": false
  },
  {
    "ans": "546",
    "gt": "8",
    "err": false,
    "question": "What is the thousands digit of 5468597? Let's write a program.",
    "output": "thousands_digit = 5468597 / 10000\nprint(int(thousands_digit))",
    "correct": false
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "What is the fifth root of 3226 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the fifth root of 3226\nfifth_root = math.pow(3226, 1/5)\n\n# round to the nearest integer\nnearest_integer = round(fifth_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 9, in run_it\nTypeError: 'float' object cannot be interpreted as an integer\n",
    "gt": "17",
    "err": true,
    "question": "Let j = -70 - -87. Suppose 5*z + 1122 = 11*z. What is the greatest common factor of z and j? Let's write a program.",
    "output": "import math\n\n# define the variables\nj = -70 - -87\nz = 1122 / 5\n\n# find the greatest common factor of z and j\ngcf = math.gcd(z, j)\n\nprint(gcf)",
    "correct": false
  },
  {
    "ans": "-31",
    "gt": "-31",
    "err": false,
    "question": "What is (-2 + 4 + -38 - 5) + 5 - (-4 + -1)? Let's write a program.",
    "output": "print((-2 + 4 + -38 - 5) + 5 - (-4 + -1))",
    "correct": true
  },
  {
    "ans": "179",
    "gt": "179",
    "err": false,
    "question": "Which is greater: 4 or 179? Let's write a program.",
    "output": "print(4) if 4 > 179 else print(179)",
    "correct": true
  },
  {
    "ans": "-10",
    "gt": "0.4",
    "err": false,
    "question": "Let a = -0.922 + -0.078. What is the closest to 10 in 1/3, 0.4, a? Let's write a program.",
    "output": "import math\n\n# define the variable\na = -0.922 - 0.078\n\n# calculate the closest to 10\nclosest_to_10 = min(1/3, 0.4, a)\n\n# print the result\nprint(math.ceil(10 * closest_to_10))",
    "correct": false
  },
  {
    "ans": "15",
    "gt": "15",
    "err": false,
    "question": "What is the highest common factor of 2535 and 60? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 2535\nnum2 = 60\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "-2.5",
    "gt": "-2.5",
    "err": false,
    "question": "Calculate 218/218*2*(-10)/8. Let's write a program.",
    "output": "print(218/218*2*(-10)/8)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 13, in run_it\nTypeError: 'Add' object is not callable\n",
    "gt": "0",
    "err": true,
    "question": "Let z(b) = -b**3 + 2*b**2 + b - 2. Suppose -3*h = -18 - 0. Let f(s) = 6 - 2*s. Let y be f(h). Let p be 3 + (y/2)/3. What is z(p)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nb, h, s, y, p = sp.symbols('b h s y p')\n\n# define the functions\nz = -b**3 + 2*b**2 + b - 2\nf = 6 - 2*s\n\n# given values\nh = -18/3 - 0/3\ny = f(h)\np = 3 + (y/2)/3\n\n# calculate z(p)\nresult = z.subs(b, p)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "6",
    "gt": "6",
    "err": false,
    "question": "Let s = -60 - -171. What is the remainder when s is divided by 15? Let's write a program.",
    "output": "s = -60 - -171\nremainder = s % 15\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 16, in run_it\nKeyError: 0\n",
    "gt": "45",
    "err": true,
    "question": "Solve -6450*y + 139 = 3*k - 6452*y, -k + 5*y + 55 = 0 for k. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ny, k = sp.symbols('y k')\n\n# define the equations\neq1 = sp.Eq(-6450*y + 139, 3*k - 6452*y)\neq2 = sp.Eq(-k + 5*y + 55, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (y, k))\n\n# print the result\nfor i in range(len(solution)):\n    print(solution[i])",
    "correct": false
  },
  {
    "ans": "-93",
    "gt": "-93",
    "err": false,
    "question": "Let c(s) = -s**2 - 71*s + 2807. Give c(29). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ns = sp.symbols('s')\n\n# define the function\nc = -s**2 - 71*s + 2807\n\n# substitute s with 29\nresult = c.subs(s, 29)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "10",
    "gt": "10",
    "err": false,
    "question": "Let o(i) = -3*i**2 - 2. Let d be o(3). Let l = d + 34. Let b(m) = -m**3 + 5*m**2 + 2*m. What is b(l)? Let's write a program.",
    "output": "def o(i):\n    return -3*i**2 - 2\n\nd = o(3)\nl = d + 34\n\ndef b(m):\n    return -m**3 + 5*m**2 + 2*m\n\nprint(b(l))",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 15, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "19",
    "err": true,
    "question": "Let b = 31 - 27. Suppose -5 = -2*p - t + 35, 2*p = -b*t + 46. What is the highest common factor of 152 and p? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nb, p, t = sp.symbols('b p t')\n\n# define the equations\neq1 = sp.Eq(b, 31 - 27)\neq2 = sp.Eq(-2*p - t + 35, -2*p - b*t + 46)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2), (b, p))\n\n# calculate p\np = solution[p]\n\n# calculate the highest common factor of 152 and p\nhcf = sp.gcd(152, p)\n\nprint(hcf)",
    "correct": false
  },
  {
    "ans": "-576",
    "gt": "-576",
    "err": false,
    "question": "Simplify (2*((sqrt(6) - (sqrt(84)/sqrt(2))/sqrt(7)) + -2*sqrt(486))/(sqrt(54)/sqrt(2)*-1))**2*-2*1. Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (2*((sp.sqrt(6) - (sp.sqrt(84)/sp.sqrt(2))/sp.sqrt(7)) + -2*sp.sqrt(486))/(sp.sqrt(54)/sp.sqrt(2)*-1))**2*-2*1\n\n# simplify the expression\nsimplified_expr = sp.simplify(expr)\n\n# print the result\nprint(simplified_expr)",
    "correct": true
  },
  {
    "ans": "-19",
    "gt": "-19.0",
    "err": false,
    "question": "Evaluate (342/((-342)/19))/1. Let's write a program.",
    "output": "print((342/((-342)/19))/1)",
    "correct": false
  },
  {
    "ans": "-5",
    "gt": "1.5",
    "err": false,
    "question": "Let o be (-5)/(-8)*1650/1375. Which is the fifth smallest value?  (a) -5  (b) -3  (c) -2  (d) 3/2  (e) o Let's write a program.",
    "output": "import math\n\n# calculate o\no = (-5) / (-8) * 1650 / 1375\n\n# define the values\nvalues = [-5, -3, -2, 3/2, o]\n\n# find the fifth smallest value\nfifth_smallest = min(values)\n\n# print the result\nprint(fifth_smallest)",
    "correct": false
  },
  {
    "ans": "-12",
    "gt": "-12",
    "err": false,
    "question": "-29 - (-21 + 8) - (-5 + 1) Let's write a program.",
    "output": "print(-29 - (-21 + 8) - (-5 + 1))",
    "correct": true
  },
  {
    "ans": "9",
    "gt": "9",
    "err": false,
    "question": "What is the hundreds digit of 973? Let's write a program.",
    "output": "hundreds_digit = 9\nprint(hundreds_digit)",
    "correct": true
  },
  {
    "ans": "-0.5",
    "gt": "-0.5",
    "err": false,
    "question": "What is -6 divided by 12? Let's write a program.",
    "output": "print(-6 / 12)",
    "correct": true
  },
  {
    "ans": "-1",
    "gt": "-1.0",
    "err": false,
    "question": "Calculate (22/(-4) + 5)*2. Let's write a program.",
    "output": "print((22/(-4) + 5)*2)",
    "correct": false
  },
  {
    "ans": "13",
    "gt": "13",
    "err": false,
    "question": "What is the second smallest value in -3/4, 1065125, 13? Let's write a program.",
    "output": "values = [-3/4, 1065125, 13]\nsecond_smallest = min(values[1:])\nprint(second_smallest)",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "Solve 0 = -2*b - 22*b for b. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nb = sp.symbols('b')\n\n# define the equation\neq = sp.Eq(0, -2*b - 22*b)\n\n# solve the equation\nsolution = sp.solve(eq, b)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-18",
    "gt": "-18",
    "err": false,
    "question": "Let w(b) = -18*b**2 + 46*b + 46. What is w(-1)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nb = sp.symbols('b')\n\n# define the function\nw = -18*b**2 + 46*b + 46\n\n# substitute b = -1 into the function\nresult = w.subs(b, -1)\n\nprint(result)",
    "correct": true
  },
  {
    "ans": "-4",
    "gt": "-4",
    "err": false,
    "question": "Let a be (-7)/(-2) + 2/4. Let p be 0 + 3/((-9)/(-12)). Let h be a/p*(-1 - -1). Solve h*t - 5*t = 20 for t. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\na, p, h, t = sp.symbols('a p h t')\n\n# define the expressions for a, p and h\na = (-7)/(-2) + 2/4\np = 0 + 3/((-9)/(-12))\nh = a/p*(-1 - -1)\n\n# solve the equation for t\nsolution = sp.solve(h*t - 5*t - 20, t)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "8904",
    "gt": "8904",
    "err": false,
    "question": "Calculate the remainder when 2694514 is divided by 9910. Let's write a program.",
    "output": "remainder = 2694514 % 9910\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "Let k(a) = a + 7. Let d(n) = n + 3. Let m be d(4). What is the units digit of k(m)? Let's write a program.",
    "output": "def k(a):\n    return a + 7\n\ndef d(n):\n    return n + 3\n\nm = d(4)\nunits_digit = k(m) % 10\nprint(units_digit)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 23, in <module>\n  File \"<string>\", line 19, in run_it\nIndexError: list index out of range\n",
    "gt": "5",
    "err": true,
    "question": "Let c = -11 + 22. Suppose 19*q - 8 = 258. Suppose 3*k = 9 + 6. Solve -q - c = -k*i for i. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nc, q, k, i = sp.symbols('c q k i')\n\n# define the equations\neq1 = sp.Eq(c, -11 + 22)\neq2 = sp.Eq(19*q - 8, 258)\neq3 = sp.Eq(3*k, 9 + 6)\n\n# solve the second equation for q\nq_sol = sp.solve(eq2, q)[0]\n\n# substitute q_sol in the third equation and solve for k\nk_sol = sp.solve(eq3.subs(q, q_sol), k)[0]\n\n# substitute q_sol and k_sol in the first equation and solve for i\ni_sol = sp.solve(eq1.subs({q: q_sol, k: k_sol}), i)[0]\n\n# print the result\nprint(i_sol)",
    "correct": false
  },
  {
    "ans": "933",
    "gt": "933.0",
    "err": false,
    "question": "What is -7477062 divided by -8014? Let's write a program.",
    "output": "divided = -7477062 / -8014\nprint(divided)",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "52*f",
    "err": false,
    "question": "Let o(u) be the first derivative of 26*u**3/3 + 35*u + 26. What is the first derivative of o(f) wrt f? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nu = sp.symbols('u')\n\n# define the function\no = 26*u**3/3 + 35*u + 26\n\n# calculate the first derivative\no_prime = sp.diff(o, u)\n\n# define the variable for the first derivative\nf = sp.symbols('f')\n\n# calculate the first derivative of the first derivative wrt f\no_prime_prime = sp.diff(o_prime, f)\n\n# print the result\nprint(o_prime_prime)",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "12 3 0",
    "err": false,
    "question": "Suppose 4*q - 3*s = 48, -3*q = 5*s - 5 - 31. Sort 3, 0, q in decreasing order. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nq, s = sp.symbols('q s')\n\n# define the equations\neq1 = sp.Eq(4*q - 3*s, 48)\neq2 = sp.Eq(-3*q, 5*s - 5 - 31)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (q, s))\n\n# calculate the sorted list [3, 0, q]\nsorted_list = sorted([3, 0] + [solution[q]], reverse=True)\n\n# print the result\nprint(sorted_list)",
    "correct": false
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "What is the ten thousands digit of 1841503? Let's write a program.",
    "output": "def find_ten_thousands_digit(n):\n    return n // 10000 % 10\n\nprint(find_ten_thousands_digit(1841503))",
    "correct": true
  },
  {
    "ans": "7",
    "gt": "3",
    "err": false,
    "question": "Let u(g) = 2*g + g**3 - 5*g**2 + 3*g - 1 + 0*g. Let o be u(4). Suppose 0 = -f + 4*f - 21. Solve -f*i + 12 = -o*i for i. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ng = sp.symbols('g')\nf = sp.symbols('f')\ni = sp.symbols('i')\n\n# define the function u(g)\nu = 2*g + g**3 - 5*g**2 + 3*g - 1 + 0*g\n\n# calculate o\no = u.subs(g, 4)\n\n# solve f\nf_solution = sp.solve(f - 4*f + 21, f)\n\n# solve i\nfor solution in f_solution:\n    i_solution = sp.solve(-solution*i + 12, i)\n    for isol in i_solution:\n        if isol.subs(i, o) == 0:\n            print(isol)\n            break\n    else:\n        print(solution)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 8, in run_it\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/core/relational.py\", line 614, in __new__\n    lhs = _sympify(lhs)\n          ^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/core/sympify.py\", line 528, in _sympify\n    return sympify(a, strict=True)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/core/sympify.py\", line 449, in sympify\n    raise SympifyError(a)\nsympy.core.sympify.SympifyError: SympifyError: 'q'\n",
    "gt": "-3",
    "err": true,
    "question": "Solve q = 5*y + 22, 3*q - 693*y = -691*y + 1 for q. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ny = sp.symbols('y')\n\n# define the equations\neq1 = sp.Eq('q', 5*y + 22)\neq2 = sp.Eq(3*'q' - 693*y, -691*y + 1)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), ('q', 'y'))\n\n# print the result\nprint(solution['q'])",
    "correct": false
  },
  {
    "ans": "-77",
    "gt": "-77",
    "err": false,
    "question": "Calculate -110 + (2 - 0 - (11 + -42)). Let's write a program.",
    "output": "print(-110 + (2 - 0 - (11 + -42)))",
    "correct": true
  },
  {
    "ans": "80",
    "gt": "80",
    "err": false,
    "question": "Which is greater: 79 or 80? Let's write a program.",
    "output": "print(79)\nprint(80)",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Let b = 172 + 96. Let a = b + -265. Solve 4*o + 5*t = 2*o + 16, 2*o + a*t - 12 = 0 for o. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nb = 172 + 96\na = b + -265\n\n# solve the system of equations\no = sp.symbols('o')\nt = sp.symbols('t')\nsolution = sp.solve((4*o + 5*t - 2*o - 16, 2*o + a*t - 12), (o, t))\n\n# print the result\nprint(solution[o])",
    "correct": true
  },
  {
    "ans": "-0.18181818181818182",
    "gt": "0.048",
    "err": false,
    "question": "Let p = -71.2 + -391.8. Let i = 463 + p. Which is the third smallest value?  (a) i  (b) -2/11  (c) 0.048 Let's write a program.",
    "output": "import math\n\n# define the values\np = -71.2 - 391.8\ni = 463 + p\n\n# calculate the smallest value\nsmallest = min(i, -2/11, 0.048)\n\n# print the third smallest value\nprint(smallest)",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Let l(b) be the second derivative of b**4/12 + 7*b**3/6 + 7*b**2 - 7*b. Let r be l(-5). Solve -y + 6 = -r*g + 8*g, 3*y - 5 = g for y. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nb, g, y = sp.symbols('b g y')\n\n# define the function l(b)\nl = sp.diff(b**4/12 + 7*b**3/6 + 7*b**2 - 7*b, b, 2)\n\n# calculate r\nr = l.subs(b, -5)\n\n# define the equations\neq1 = sp.Eq(-y + 6, -r*g + 8*g)\neq2 = sp.Eq(3*y - 5, g)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (y, g))\n\n# print the result\nprint(solution[y])",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Calculate 4 + -3 + 5 + -4. Let's write a program.",
    "output": "print(4 + -3 + 5 + -4)",
    "correct": true
  },
  {
    "ans": "-0.4",
    "gt": "-0.4",
    "err": false,
    "question": "Let x = -0.026 - 0.074. What is the closest to x in -0.4, -1, 1? Let's write a program.",
    "output": "import numpy as np\n\n# define the variable\nx = -0.026 - 0.074\n\n# define the options\noptions = [-0.4, -1, 1]\n\n# calculate the closest option to x\nclosest_option = min(options, key=lambda y:abs(y-x))\n\nprint(closest_option)",
    "correct": true
  },
  {
    "ans": "-5",
    "gt": "-5",
    "err": false,
    "question": "Let h = 1/140 + -289/1260. Let m = -324.3 + 198.4. Let o = 126 + m. Which is the nearest to -7?  (a) -5  (b) o  (c) h Let's write a program.",
    "output": "h = 1/140 + -289/1260\nm = -324.3 + 198.4\no = 126 + m\n\nnearest_to_minus_7 = -5 if abs(h) > abs(o) else o\n\nprint(nearest_to_minus_7)",
    "correct": true
  },
  {
    "ans": "0.4",
    "gt": "0.4",
    "err": false,
    "question": "Calculate (-6)/15*11/(-11). Let's write a program.",
    "output": "print((-6)/15*11/(-11))",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "13",
    "err": false,
    "question": "Let q(l) = -l - 26. Let h(t) = 5. Let g(o) = -11*h(o) - 2*q(o). Suppose 5*z - 12*c = -56, z + 43 = 5*c + 11. Determine g(z). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nl, t, o, z, c = sp.symbols('l t o z c')\n\n# define the functions\nq = -l - 26\nh = 5\ng = -11*h - 2*q\n\n# solve the equations\nsolution = sp.solve((5*z - 12*c - 56, z + 43 - 5*c - 11), (z, c))\n\n# substitute the solutions into g\ng_value = g.subs(solution)\n\nprint(g_value)",
    "correct": false
  },
  {
    "ans": "8",
    "gt": "8",
    "err": false,
    "question": "Solve 108*x - 1724 = -88*x - 156 for x. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nx = sp.symbols('x')\n\n# define the equation\neq = sp.Eq(108*x - 1724, -88*x - 156)\n\n# solve the equation\nsolution = sp.solve(eq, x)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "16",
    "gt": "7",
    "err": false,
    "question": "Let s(z) = -6 + 3 + 7*z**2 + 4 + 3*z + z**3. Let g be s(-3). Suppose -10 = 2*h - g. Calculate the remainder when 16 is divided by h. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nz = sp.symbols('z')\n\n# define the function s(z)\ns = -6 + 3 + 7*z**2 + 4 + 3*z + z**3\n\n# calculate g\ng = s.subs(z, -3)\n\n# calculate h\nh = (2*g + 10) / 2\n\n# calculate the remainder when 16 is divided by h\nremainder = 16 % h\n\n# print the result\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 19, in <module>\n  File \"<string>\", line 18, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "0",
    "err": true,
    "question": "Let b = 3 + 1. Let w(q) = 52*q**2 + 260*q + 5. Let c be w(-5). Solve m - 22 = b*o - 2, -25 = 3*m + c*o for m. Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\n\n# define the variables\nb, w, q, c, m, o = symbols('b w q c m o')\n\n# define the equations\neq1 = Eq(b, 3 + 1)\neq2 = Eq(w, 52*q**2 + 260*q + 5)\neq3 = Eq(c, w.subs(q, -5))\neq4 = Eq(m - 22, b*o - 2)\neq5 = Eq(-25, 3*m + c*o)\n\n# solve the system of equations\nsolution = solve((eq1, eq2, eq3, eq4, eq5), (b, w, q, c, m, o))\n\n# print the result\nprint(solution[m])",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 26, in <module>\n  File \"<string>\", line 16, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "11",
    "err": true,
    "question": "Suppose 3*z + 49 = 5*i - 4, -z = -5*i + 51. Suppose 14*d = -i*d + 264. Calculate the greatest common factor of d and 88. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nz, i, d = sp.symbols('z i d')\n\n# define the equations\neq1 = sp.Eq(3*z + 49, 5*i - 4)\neq2 = sp.Eq(-z, -5*i + 51)\neq3 = sp.Eq(14*d, -i*d + 264)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2,eq3), (z, i, d))\n\n# calculate the greatest common factor of d and 88\nd_val = solution[d]\nfactors_d = sp.factorint(d_val)\n\n# calculate the greatest common factor of d and 88\nfactors_88 = sp.factorint(88)\n\n# find the greatest common factor\ngcf = max(factors_d.keys())\n\nprint(gcf)",
    "correct": false
  },
  {
    "ans": "-0.2",
    "gt": "-0.5",
    "err": false,
    "question": "Let r be (5 - 6)/(5 - 0). Which is the smallest value?  (a) r  (b) -1/2  (c) 4/3 Let's write a program.",
    "output": "r = (5-6)/(5-0)\nprint(r)",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Solve 3*w + 9 = -3*d, -4*d = -4*w + 5*w + 18 for w. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw, d = sp.symbols('w d')\n\n# define the equations\neq1 = sp.Eq(3*w + 9, -3*d)\neq2 = sp.Eq(-4*d, -4*w + 5*w + 18)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (w, d))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": true
  },
  {
    "ans": "2569/12",
    "gt": "0",
    "err": false,
    "question": "Suppose -2*z = -5*t - 28 - 1, 3*t - 4*z + 9 = 0. Let b(f) be the second derivative of -f**4/12 - 7*f**3/6 - 2*f. What is b(t)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nz, t = sp.symbols('z t')\n\n# define the equations\neq1 = sp.Eq(-2*z, -5*t - 28 - 1)\neq2 = sp.Eq(3*t - 4*z + 9, 0)\n\n# solve the system of equations for z and t\nsolution = sp.solve((eq1,eq2), (z, t))\n\n# calculate b(t)\nb_t = -t**4/12 - 7*t**3/6 - 2*t\n\n# substitute the solutions for z and t into b(t)\nresult = b_t.subs(solution)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "54",
    "gt": "54",
    "err": false,
    "question": "What is 156500 to the power of 1/3, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the cube root of 156500\ncube_root = math.pow(156500, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(cube_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "3686.6953",
    "gt": "6",
    "err": false,
    "question": "What is the hundred thousands digit of 368669530? Let's write a program.",
    "output": "hundred_thousands_digit = 368669530 / 100000\r\nprint(hundred_thousands_digit)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 24, in <module>\n  File \"<string>\", line 15, in run_it\nNameError: name 'n' is not defined\n",
    "gt": "8",
    "err": true,
    "question": "Suppose -5*t + 65 + 0 = 5*j, 6 = 2*j - 3*t. Let n(q) = -6 - j - 2*q + 7 + 3*q**2. What is the tens digit of n(6)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nt, j = sp.symbols('t j')\n\n# define the equations\neq1 = sp.Eq(-5*t + 65 + 0, 5*j)\neq2 = sp.Eq(6, 2*j - 3*t)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (t, j))\n\n# calculate n(6)\nn_6 = n(6, solution)\n\n# convert n(6) to string\nn_6_str = str(n_6)\n\n# get the tens digit of n(6)\ntens_digit = n_6_str[-2]\n\nprint(tens_digit)",
    "correct": false
  },
  {
    "ans": "247",
    "gt": "247",
    "err": false,
    "question": "Calculate the highest common factor of 23323469 and 2470. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 23323469\nnum2 = 2470\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "-48",
    "gt": "-48",
    "err": false,
    "question": "Suppose 3*t + 3*i + 156 = 0, t = -4*i - 31 - 33. Let o(c) = 5*c + c**3 - 7 + 0*c**3 + 0*c**3 - 8*c**2. Let j be o(6). Which is greater: j or t? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ni, t = sp.symbols('i t')\n\n# define the equations\neq1 = sp.Eq(3*t + 3*i + 156, 0)\neq2 = sp.Eq(t, -4*i - 31 - 33)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (t, i))\n\n# calculate j\nj = 5*6 + 6**3 - 7 + 0*6**3 + 0*6**3 - 8*6**2\n\n# compare j and t\nif j > solution[t]:\n    print('j')\nelse:\n    print(solution[t])",
    "correct": true
  },
  {
    "ans": "0.75",
    "gt": "0.75",
    "err": false,
    "question": "What is the value of (-50)/8 + (-238)/(-272)*8? Let's write a program.",
    "output": "print((-50)/8 + (-238)/(-272)*8)",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "7",
    "err": false,
    "question": "Suppose x - 2*d + 0 = -5, 4*d = -20. Let u be (-5)/(x/34) + (-13)/39. Let b(z) = z**2 - 5*z + 5. What is the tens digit of b(u)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nx, d = sp.symbols('x d')\n\n# define the equations\neq1 = sp.Eq(x - 2*d + 0, -5)\neq2 = sp.Eq(4*d, -20)\n\n# solve the equations\nsolution = sp.solve((eq1,eq2), (x, d))\n\n# calculate u\nu = (-5)/(solution[x]/34) + (-13)/39\n\n# define the function b(z)\nb = lambda z: z**2 - 5*z + 5\n\n# calculate b(u)\nbu = b(u)\n\n# convert bu to string\nbu_str = str(bu)\n\n# get the tens digit of bu\ntens_digit = bu_str[-2]\n\nprint(tens_digit)",
    "correct": false
  },
  {
    "ans": "183509",
    "gt": "9",
    "err": false,
    "question": "What is the ten thousands digit of 1835096829? Let's write a program.",
    "output": "def digit_ten_thousands(n):\n    return n // 10000\n\nprint(digit_ten_thousands(1835096829))",
    "correct": false
  },
  {
    "ans": "11065",
    "gt": "11065",
    "err": false,
    "question": "What is 122431609 to the power of 1/2, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the square root of 122431609\nsqrt = math.sqrt(122431609)\n\n# round to the nearest integer\nnearest_integer = round(sqrt)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "9",
    "gt": "9",
    "err": false,
    "question": "Calculate the remainder when 15981 is divided by 11. Let's write a program.",
    "output": "remainder = 15981 % 11\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-86/47",
    "gt": "2",
    "err": false,
    "question": "Solve -2*x + 15*p - 71 = 0, -3*x = -39*p + 38*p - 1 for x. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nx, p = sp.symbols('x p')\n\n# define the equations\neq1 = sp.Eq(-2*x + 15*p - 71, 0)\neq2 = sp.Eq(-3*x + -39*p + 38*p - 1, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (x, p))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/utilities/misc.py\", line 555, in as_int\n    return operator.index(n)\n           ^^^^^^^^^^^^^^^^^\nTypeError: 'Float' object cannot be interpreted as an integer\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 26, in <module>\n  File \"<string>\", line 25, in run_it\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/ntheory/factor_.py\", line 1235, in factorint\n    n = as_int(n)\n        ^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/utilities/misc.py\", line 557, in as_int\n    raise ValueError('%s is not an integer' % (n,))\nValueError: -11.0000000000000 is not an integer\n",
    "gt": "[11]",
    "err": true,
    "question": "Let f = 14 + -8. Let y be (f/(-4))/((-15)/140). Suppose -y + 3 = -r. What are the prime factors of r? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nf, y, r = sp.symbols('f y r')\n\n# define the equation for y\ny_eq = sp.Eq(y, (f/(-4))/((-15)/140))\n\n# substitute f\nf_val = 14 + -8\ny_eq = y_eq.subs(f, f_val)\n\n# solve for y\ny_sol = sp.solve(y_eq, y)[0]\n\n# substitute y in the equation for r\nr_eq = sp.Eq(r, -y + 3)\nr_eq = r_eq.subs(y, y_sol)\n\n# solve for r\nr_sol = sp.solve(r_eq, r)[0]\n\n# print the prime factors of r\nprint(sp.factorint(r_sol))",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 2, in run_it\nModuleNotFoundError: No module named 'min'\n",
    "gt": "-11.6",
    "err": true,
    "question": "What is the smallest value in -5, 5, -58/5, 3, 2/7? Let's write a program.",
    "output": "import min\n\n# define the values\nvalues = [-5, 5, -58/5, 3, 2/7]\n\n# find the smallest value\nsmallest_value = min(values)\n\n# print the result\nprint(smallest_value)",
    "correct": false
  },
  {
    "ans": "-23",
    "gt": "-23.0",
    "err": false,
    "question": "-206632 divided by 8984 Let's write a program.",
    "output": "a = -206632\nb = 8984\nprint(a/b)",
    "correct": false
  },
  {
    "ans": "96",
    "gt": "-96*u",
    "err": false,
    "question": "Suppose 46 = 5*o - 14. Let p be (2/(-2))/((-4)/o). What is the third derivative of 9*u**3 + p*u**2 + 0*u**4 - 9*u**3 - 4*u**4 wrt u? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nu = sp.symbols('u')\n\n# define the function\nf = 9*u**3 + (2/(-2))/((-4)/u)*u**2 - 9*u**3 - 4*u**4\n\n# calculate the derivative\ndf = sp.diff(f, u)\n\n# calculate the second derivative\nd2f = sp.diff(df, u)\n\n# calculate the third derivative\nd3f = sp.diff(d2f, u)\n\n# print the result\nprint(d3f)",
    "correct": false
  },
  {
    "ans": "-5",
    "gt": "-5",
    "err": false,
    "question": "Evaluate -3 + -8 + 2 + 4. Let's write a program.",
    "output": "print(-3 + -8 + 2 + 4)",
    "correct": true
  },
  {
    "ans": "3098",
    "gt": "3098",
    "err": false,
    "question": "What is 9597007 to the power of 1/2, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Given number\nnum = 9597007\n\n# Calculate the square root\nsqrt_num = math.sqrt(num)\n\n# Round to the nearest integer\nnearest_int = round(sqrt_num)\n\nprint(nearest_int)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 11, in run_it\nNameError: name 'u' is not defined\n",
    "gt": "1",
    "err": true,
    "question": "Let n(k) = 2*k**3 + 14*k**2 + 20*k - 2. Let f(u) = -u**3 - 7*u**2 - 9*u. Let h(t) = -9*f(t) - 4*n(t). Give h(-7). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nk = sp.symbols('k')\n\n# define the function n(k)\nn = 2*k**3 + 14*k**2 + 20*k - 2\n\n# define the function f(u)\nf = -u**3 - 7*u**2 - 9*u\n\n# define the function h(t)\nh = -9*f - 4*n\n\n# calculate h(-7)\nresult = h.subs(u, -7)\n\nprint(result)",
    "correct": false
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "Calculate -1 + -3 + 7 + 4. Let's write a program.",
    "output": "print(-1 + -3 + 7 + 4)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 2, in run_it\nModuleNotFoundError: No module named 'min'\n",
    "gt": "-86",
    "err": true,
    "question": "What is the smallest value in -1/5, 4/7, -86, -2/13? Let's write a program.",
    "output": "import min\n\n# define the numbers\nnumbers = [-1/5, 4/7, -86, -2/13]\n\n# find the smallest number\nsmallest_number = min(numbers)\n\n# print the result\nprint(smallest_number)",
    "correct": false
  },
  {
    "ans": "38",
    "gt": "38.0",
    "err": false,
    "question": "Evaluate (((-2)/14)/(126/(-294)))/(9*10/10260). Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (((-2)/14)/(126/(-294)))/(9*10/10260)\n\n# simplify the expression\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 15, in run_it\nNameError: name 'v' is not defined\n",
    "gt": "3",
    "err": true,
    "question": "Suppose 0 = 3*r - 2*l - 15, 2*l + 3 = -r - 0. Let v(w) = 2*w**3 + 7*w**2 - 29*w - 46. Let o be v(-5). Calculate the highest common divisor of r and o. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nr, l = sp.symbols('r l')\n\n# define the equations\neq1 = sp.Eq(3*r - 2*l - 15, 0)\neq2 = sp.Eq(2*l + 3, -r)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (r, l))\n\n# calculate the value of v(-5)\nv_minus_5 = v(-5)\n\n# calculate the highest common divisor of r and v(-5)\nhcd = sp.gcd(solution[r], v_minus_5)\n\nprint(hcd)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 15, in run_it\n  File \"<string>\", line 15, in <listcomp>\nTypeError: 'Symbol' object is not iterable\n",
    "gt": "-5",
    "err": true,
    "question": "Suppose -2*c - 10 = 4*k, -3*c + 17 = -k - 3. What is the nearest to k in 2/23, -5, -1/2? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nc, k = sp.symbols('c k')\n\n# define the equations\neq1 = sp.Eq(-2*c - 10, 4*k)\neq2 = sp.Eq(-3*c + 17, -k - 3)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (c, k))\n\n# calculate the nearest to k for each option\nnearest_to_k = [solution[k] for sol in solution for k in sol]\n\n# find the nearest to k\nnearest_k = min(nearest_to_k, key=lambda x:abs(x))\n\n# print the result\nprint(nearest_k)",
    "correct": false
  },
  {
    "ans": "-374",
    "gt": "-374",
    "err": false,
    "question": "Let f(a) = a**2 + 49*a - 766. Give f(-56). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\na = sp.symbols('a')\n\n# define the function\nf = a**2 + 49*a - 766\n\n# substitute a with -56\nresult = f.subs(a, -56)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 26, in <module>\n  File \"<string>\", line 16, in run_it\nIndexError: list index out of range\n",
    "gt": "1",
    "err": true,
    "question": "Let p = -6 - -9. Suppose 7*x = -1227 + 1241. Suppose -19 - 156 = -a - 2*k, p*a + x*k = 545. What is the hundreds digit of a? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nx, k, a = sp.symbols('x k a')\n\n# define the given equations\neq1 = sp.Eq(7*x, -1227 + 1241)\neq2 = sp.Eq(-19 - 156, -a - 2*k)\neq3 = sp.Eq(x*k, 545)\n\n# solve the first equation for x\nx_sol = sp.solve(eq1, x)[0]\n\n# substitute x_sol in the third equation and solve for a\na_sol = sp.solve(eq3.subs(x, x_sol), a)[0]\n\n# substitute a_sol in the second equation and solve for k\nk_sol = sp.solve(eq2.subs(a, a_sol), k)[0]\n\n# convert a_sol to string and get the hundreds digit\na_str = str(a_sol)\nhundreds_digit = a_str[-2]\n\nprint(hundreds_digit)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 17, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "18",
    "err": true,
    "question": "Suppose 98 = -0*w + w + 2*t, -5*w + 446 = -t. Suppose 3*o = -3*o + w. Suppose 20*q - 375 = o*q. Calculate the remainder when q is divided by 19. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw, t, o, q = sp.symbols('w t o q')\n\n# define the equations\neq1 = sp.Eq(-0*w + w + 2*t, 98)\neq2 = sp.Eq(-5*w + 446, -t)\neq3 = sp.Eq(3*o, -3*o + w)\neq4 = sp.Eq(20*q - 375, o*q)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2,eq3,eq4), (w, t, o, q))\n\n# calculate the remainder when q is divided by 19\nremainder = solution[q] % 19\n\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "0.3333333333333333",
    "gt": "-6",
    "err": false,
    "question": "Let t = -72 + 66. Which is the third biggest value?  (a) 1/3  (b) t  (c) 3 Let's write a program.",
    "output": "t = -72 + 66\nthird_biggest = 1/3\n\nif t > third_biggest:\n    print(t)\nelse:\n    print(third_biggest)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 27, in <module>\n  File \"<string>\", line 26, in run_it\nIndexError: list index out of range\n",
    "gt": "-4",
    "err": true,
    "question": "Suppose 4*n = -2*o, -4*n = 4*o - 7*o. Solve 4*s - 2*u + 16 = o, 2*s + 2*u + 12 = -s for s. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nn, o, s, u = sp.symbols('n o s u')\n\n# given equations\neq1 = sp.Eq(4*n, -2*o)\neq2 = sp.Eq(-4*n, 4*o - 7*o)\n\n# solve the equations\nsolution = sp.solve((eq1,eq2), (n, o))\n\n# new equations\neq3 = sp.Eq(4*s - 2*u + 16, o)\neq4 = sp.Eq(2*s + 2*u + 12, -s)\n\n# substitute the solutions in the equations\nnew_eq3 = eq3.subs(solution)\nnew_eq4 = eq4.subs(solution)\n\n# solve the new equations\ns_solution = sp.solve((new_eq3,new_eq4), s)\n\n# print the result\nprint(s_solution[0])",
    "correct": false
  },
  {
    "ans": "-3",
    "gt": "-3",
    "err": false,
    "question": "Let s(o) = -2 + 4*o - 3*o - 2 - 5. Determine s(6). Let's write a program.",
    "output": "def s(o):\n    return -2 + 4*o - 3*o - 2 - 5\n\nprint(s(6))",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "6",
    "err": false,
    "question": "Let j(q) = -5*q - 1553*q**2 + 4 + 1552*q**2 - 3. Let x be j(-5). What is the tens digit of (0 - x/6) + 3465/54? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nq = sp.symbols('q')\n\n# define the function j(q)\nj = -5*q - 1553*q**2 + 4 + 1552*q**2 - 3\n\n# calculate x\nx = j.subs(q, -5)\n\n# calculate (0 - x/6) + 3465/54\nresult = (0 - x/6) + 3465/54\n\n# convert the result to string\nresult_str = str(result)\n\n# get the tens digit\ntens_digit = result_str[-2]\n\n# print the tens digit\nprint(tens_digit)",
    "correct": false
  },
  {
    "ans": "-4",
    "gt": "6",
    "err": false,
    "question": "Solve 98 = 3*p - 20*y, 188*y - 184*y = 5*p - 1 - 45 for p. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\np, y = sp.symbols('p y')\n\n# define the equations\neq1 = sp.Eq(98, 3*p - 20*y)\neq2 = sp.Eq(188*y - 184*y, 5*p - 1 - 45)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (p, y))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": false
  },
  {
    "ans": "",
    "gt": "-1",
    "err": true,
    "question": "Suppose -2*r + 12 = -4*f, -4*r + 20 = -4*f - 0*r. Let w = -7 - -6. Let v = -0.259 - -0.059. Which is the closest to f?  (a) w  (b) 3  (c) v Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\r\n\r\n# r, f = symbols('r f')\r\n\r\n# eq1 = Eq(-2*r + 12, -4*f)\r\n# eq2 = Eq(-4*r + 20, -4*f - 0*r)\r\n\r\n# solutions = solve((eq1, eq2), (r, f))\r\n# f_sol = [i.evalf() for i in solutions[f]]\r\n\r\n# w = -7 - -6\r\n# v = -0.259 - -0.059\r\n\r\n# closest = min(f_sol, key=lambda x:abs(x))\r\n\r\n# print(closest)",
    "correct": false
  },
  {
    "ans": "-0.1",
    "gt": "-0.1",
    "err": false,
    "question": "Which is greater: -29 or -0.1? Let's write a program.",
    "output": "a = -29\nb = -0.1\n\nif a > b:\n    print(a)\nelse:\n    print(b)",
    "correct": true
  },
  {
    "ans": "45",
    "gt": "45.0",
    "err": false,
    "question": "Let i = 62.0059 - 17.0059. Let z = 7/6 + -3/2. Which is the biggest value?  (a) z  (b) i  (c) -3 Let's write a program.",
    "output": "i = 62.0059 - 17.0059\nz = 7/6 + -3/2\n\nif z > i:\n    print(z)\nelse:\n    print(i)",
    "correct": false
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Suppose 4*x - 2*i - 1312 = 0, -2*x + 5*i + 346 = -x. What is the hundreds digit of x? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nx, i = sp.symbols('x i')\n\n# define the equations\neq1 = sp.Eq(4*x - 2*i - 1312, 0)\neq2 = sp.Eq(-2*x + 5*i + 346, -x)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (x, i))\n\n# get the hundreds digit of x\nhundreds_digit_x = solution[x] / 100 % 10\n\n# print the hundreds digit of x\nprint(int(hundreds_digit_x))",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 14\n    240*x = 2*j + 16\n    ^^^^^\nSyntaxError: cannot assign to expression here. Maybe you meant '==' instead of '='?\n",
    "gt": "-1",
    "err": true,
    "question": "Let q = -15 - -14. Suppose -2*j = 5*x + 4, -240*x + 241*x = 2*j + 16. Which is smaller: q or x? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nq, j, x = sp.symbols('q j x')\n\n# define the equation q = -15 - -14\nq = -15 + 14\n\n# define the equation -2*j = 5*x + 4\nj = (5*x + 4) / -2\n\n# define the equation -240*x + 241*x = 2*j + 16\n240*x = 2*j + 16\n\n# substitute the value of j from the first equation into the second equation\n240*x = 2*(5*x + 4) / -2 + 16\n\n# solve the equation for x\nsolution = sp.solve(240*x - (5*x + 4) + 16, x)\n\n# find the smallest solution\nx_smallest = min(solution)\n\n# print the smallest solution\nprint(x_smallest)",
    "correct": false
  },
  {
    "ans": "-3",
    "gt": "-3",
    "err": false,
    "question": "Let q(n) = 3*n**2 - 2*n - 1. Let i be q(2). Let g(t) = -153 - 2*t + 169 + t - t. Let v be g(i). Solve v*l + 10 = 4 for l. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nn = sp.symbols('n')\nl = sp.symbols('l')\n\n# define the functions\nq = 3*n**2 - 2*n - 1\ni = q.subs(n, 2)\ng = -153 - 2*i + 169 + i - i\nv = g.subs(i, q.subs(n, 2))\n\n# solve the equation\nsolution = sp.solve(v*l + 10 - 4, l)\n\n# print the result\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "13",
    "gt": "13",
    "err": false,
    "question": "Let t(p) = 13*p**2 - 151*p + 151. Determine t(1). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\np = sp.symbols('p')\n\n# define the function\nt = 13*p**2 - 151*p + 151\n\n# substitute p = 1 into the function\nresult = t.subs(p, 1)\n\nprint(result)",
    "correct": true
  },
  {
    "ans": "9",
    "gt": "9.0",
    "err": false,
    "question": "Evaluate (2871/3509)/((-2)/(-22)). Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (2871/3509)/((-2)/(-22))\n\n# simplify the expression\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "80",
    "gt": "80",
    "err": false,
    "question": "What is the highest common factor of 80 and 3920? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 80\nnum2 = 3920\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 17, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "7",
    "err": true,
    "question": "Suppose 6 = -2*y + 3*h + 13, -3*y + 4*h = -11. Suppose z - 3 = -3*z + y*i, 0 = z + i - 12. Calculate the highest common divisor of 77 and z. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ny, h, i, z = sp.symbols('y h i z')\n\n# define the equations\neq1 = sp.Eq(-2*y + 3*h + 13, 6)\neq2 = sp.Eq(-3*y + 4*h, -11)\neq3 = sp.Eq(z - 3, -3*z + y*i)\neq4 = sp.Eq(z + i, 12)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2, eq3, eq4), (y, h, i, z))\n\n# calculate the highest common divisor of 77 and z\nhcd = sp.gcd(77, solution[z])\n\nprint(hcd)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 11, in run_it\nTypeError: 'Add' object is not callable\n",
    "gt": "-5",
    "err": true,
    "question": "Let y(s) = -70*s - 61. Let r be y(-1). Solve -r*h + 8*h = i, -3*i + h = 20 for i. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ns, h, i = sp.symbols('s h i')\n\n# define the function y(s)\ny = -70*s - 61\n\n# calculate r\nr = y(-1)\n\n# define the equations\neq1 = sp.Eq(-r*h + 8*h, i)\neq2 = sp.Eq(-3*i + h, 20)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (i, h))\n\n# print the result\nprint(solution[i])",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 6:0: third_biggest = d\n",
    "gt": "-5.0",
    "err": true,
    "question": "Let o = -186 + 240. Let d = 53 - o. Let w = -5.09 + 0.09. Which is the third biggest value?  (a) d  (b) -0.6  (c) w Let's write a program.",
    "output": "o = -186 + 240\nd = 53 - o\nw = -5.09 + 0.09\n\nif d > w:\nthird_biggest = d\nelse:\nthird_biggest = w\n\nprint(third_biggest)",
    "correct": false
  },
  {
    "ans": "-3",
    "gt": "-3.0",
    "err": false,
    "question": "What is -2*2*231/308? Let's write a program.",
    "output": "result = -2*2*231/308\nprint(result)",
    "correct": false
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "Solve -f + 25*c - 102 = 0, -2*f - 2195*c = -2196*c + 8 for f. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nf, c = sp.symbols('f c')\n\n# define the equations\neq1 = sp.Eq(-f + 25*c - 102, 0)\neq2 = sp.Eq(-2*f - 2195*c, -2196*c + 8)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (f, c))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": true
  },
  {
    "ans": "-3",
    "gt": "-3",
    "err": false,
    "question": "Suppose -2*f + 48 = 2*f. Let r(q) = 29055 - 447*q. Let h be r(65). Solve -4*p = f - h for p. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nf, p = sp.symbols('f p')\n\n# define the equation\neq1 = sp.Eq(-2*f + 48, 2*f)\n\n# solve for f\nf_sol = sp.solve(eq1, f)[0]\n\n# define the function r(q)\nr = 29055 - 447*65\n\n# calculate h\nh = r\n\n# define the equation -4*p = f - h\neq2 = sp.Eq(-4*p, f_sol - h)\n\n# solve for p\np_sol = sp.solve(eq2, p)[0]\n\n# print the solution\nprint(p_sol)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 4:0: print(a)\n",
    "gt": "-2",
    "err": true,
    "question": "Let y = -2766.17 + 2766. Which is the third biggest value?  (a) 0.5  (b) -2  (c) y Let's write a program.",
    "output": "y = -2766.17 + 2766\n\nif y > 0.5:\nprint(a)\nelif y > -2:\nprint(b)\nelse:\nprint(c)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 8, in run_it\nUnboundLocalError: cannot access local variable 'k' where it is not associated with a value\n",
    "gt": "-48*g",
    "err": true,
    "question": "Suppose 40*k - 36*k = 32. Find the third derivative of k*g + 4*g**2 - 18*g + 10*g - 2*g**4 wrt g. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ng = sp.symbols('g')\n\n# define the equation\neq = sp.Eq(40*k - 36*k, 32)\n\n# solve the equation for k\nk = sp.solve(eq, k)[0]\n\n# define the function\nf = k*g + 4*g**2 - 18*g + 10*g - 2*g**4\n\n# find the third derivative of the function wrt g\nthird_derivative = sp.diff(f, g, 3)\n\n# print the result\nprint(third_derivative)",
    "correct": false
  },
  {
    "ans": "-1",
    "gt": "-1.0",
    "err": false,
    "question": "(-3 + 5)*(-6)/(-30)*10/(-4) Let's write a program.",
    "output": "print((-3 + 5)*(-6)/(-30)*10/(-4))",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 23, in <module>\n  File \"<string>\", line 20, in run_it\nTypeError: '<' not supported between instances of 'int' and 'list'\n",
    "gt": "-3",
    "err": true,
    "question": "Suppose -7*g + 28 = -0*g. Let j be (-1)/(2/((-426)/(-9))). Let y = j + 23. Which is the smallest value?  (a) g  (b) -3  (c) y Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ng, j, y = sp.symbols('g j y')\n\n# define the equation\neq = sp.Eq(-7*g + 28, -0*g)\n\n# solve the equation for g\nsolution = sp.solve(eq, g)\n\n# calculate j\nj = (-1)/(2/((-426)/(-9)))\n\n# calculate y\ny = j + 23\n\n# find the smallest value\nsmallest_value = min(solution, -3, y)\n\nprint(smallest_value)",
    "correct": false
  },
  {
    "ans": "-0.5",
    "gt": "4",
    "err": false,
    "question": "Let m = 11 + 3. Let h be (-4)/m*-11 + -3. Which is the third smallest value?  (a) -0.5  (b) h  (c) 4 Let's write a program.",
    "output": "m = 11 + 3\r\nh = (-4)/m*-11 + -3\r\nvalues = [h, 4, -0.5]\r\n\r\nthird_smallest = min(values)\r\nprint(third_smallest)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "1.0",
    "err": false,
    "question": "What is 133366684 divided by 133366684? Let's write a program.",
    "output": "num = 133366684\nprint(num / num)",
    "correct": false
  },
  {
    "ans": "11",
    "gt": "11",
    "err": false,
    "question": "Let s(f) = 4*f + 17 + 10 - 3*f. Let q be s(-17). Let y(a) = -1 + 14*a**2 - q*a + 2*a - 15*a**2. What is y(-6)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nf = sp.symbols('f')\na = sp.symbols('a')\n\n# define the functions s and y\ns = 4*f + 17 + 10 - 3*f\nq = s.subs(f, -17)\ny = -1 + 14*a**2 - q*a + 2*a - 15*a**2\n\n# calculate y(-6)\nresult = y.subs(a, -6)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "What is the units digit of 544901? Let's write a program.",
    "output": "units_digit = 544901 % 10\nprint(units_digit)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 18, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "1",
    "err": true,
    "question": "Suppose 5*b + 24 = 11*b. Suppose b*l + 2*w = 20, -w = -2*l + 3*w. Suppose -4*y = -l*t - 592, 7 + 18 = -5*t. What is the hundreds digit of y? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nb, l, w, y, t = sp.symbols('b l w y t')\n\n# define the equations\neq1 = sp.Eq(5*b + 24, 11*b)\neq2 = sp.Eq(b*l + 2*w, 20)\neq3 = sp.Eq(-w, -2*l + 3*w)\neq4 = sp.Eq(-4*y, -l*t - 592)\neq5 = sp.Eq(7 + 18, -5*t)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2, eq3, eq4, eq5), (b, l, w, y, t))\n\n# calculate the hundreds digit of y\nhundreds_digit_y = solution[y] / 100 % 1\n\nprint(hundreds_digit_y)",
    "correct": false
  },
  {
    "ans": "12",
    "gt": "5",
    "err": false,
    "question": "What is the hundreds digit of 12580? Let's write a program.",
    "output": "hundreds_digit = 12580 / 1000\nprint(int(hundreds_digit))",
    "correct": false
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Let c(w) = 2*w**2 + 17*w - 27. Let p be c(-12). Calculate the highest common divisor of p and 3. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nw = sp.symbols('w')\n\n# define the function c(w)\nc = 2*w**2 + 17*w - 27\n\n# calculate p\np = c.subs(w, -12)\n\n# calculate the highest common divisor of p and 3\nhcd = sp.gcd(p, 3)\n\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "100",
    "gt": "100",
    "err": false,
    "question": "Solve 17146 + 15629 = -12*l + 33975 for l. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nl = sp.symbols('l')\n\n# define the equation\nequation = sp.Eq(17146 + 15629, -12*l + 33975)\n\n# solve the equation\nsolution = sp.solve(equation, l)\n\n# print the result\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-3",
    "gt": "-3",
    "err": false,
    "question": "Evaluate -14 - (18 - (44 - 15)). Let's write a program.",
    "output": "print(-14 - (18 - (44 - 15)))",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 16, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "2",
    "err": true,
    "question": "Suppose 0 = -3*f + 2 + 10. Suppose -f*s - s + 30 = 0. Let w(q) be the third derivative of -q**6/120 + q**5/12 + 7*q**4/24 - 2*q**3/3 - 6*q**2. Calculate w(s). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nf, s = sp.symbols('f s')\n\n# define the equations\neq1 = sp.Eq(0, -3*f + 2 + 10)\neq2 = sp.Eq(-f*s - s + 30, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (f, s))\n\n# calculate w(s)\nw = -s**6/120 + s**5/12 + 7*s**4/24 - 2*s**3/3 - 6*s**2\nw_value = w.subs(s, solution[s])\n\n# print the result\nprint(w_value)",
    "correct": false
  },
  {
    "ans": "97",
    "gt": "97",
    "err": false,
    "question": "Calculate the remainder when 16567 is divided by 610. Let's write a program.",
    "output": "remainder = 16567 % 610\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 24, in <module>\n  File \"<string>\", line 21, in run_it\nAttributeError: module 'sympy' has no attribute 'hcf'\n",
    "gt": "17",
    "err": true,
    "question": "Let d(l) = -l**2 + 4*l + 5. Let q be d(4). Suppose -q*o + 4*u + 85 = 0, -2*o + 4*u + 28 = -6. Calculate the highest common factor of 102 and o. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nl, o, u = sp.symbols('l o u')\n\n# define the function d(l)\nd = -l**2 + 4*l + 5\n\n# calculate q\nq = d.subs(l, 4)\n\n# define the equations\neq1 = sp.Eq(-q*o + 4*u + 85, 0)\neq2 = sp.Eq(-2*o + 4*u + 28, -6)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (o, u))\n\n# calculate the highest common factor of 102 and o\nhcf = sp.hcf(102, solution[o])\n\nprint(hcf)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 1:25: z = 174 + 118 // solving the first equation\n",
    "gt": "3",
    "err": true,
    "question": "Suppose 2*z - 118 = 174. Suppose -f = f - z. What is the units digit of f? Let's write a program.",
    "output": "z = 174 + 118 // solving the first equation\nf = z / 2 // solving the second equation\n# Since f = z / 2, the units digit of f is the same as the units digit of z.\n# The units digit of z is 8 (since 174 + 118 = 292), so the units digit of f is 8.\n\nprint(8)",
    "correct": false
  },
  {
    "ans": "-82",
    "gt": "-82",
    "err": false,
    "question": "Evaluate (623 + -595 - (8 - 0)) + -102. Let's write a program.",
    "output": "print((623 + -595 - (8 - 0)) + -102)",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "Let y(g) = 42860 - 2857*g. What is y(15)? Let's write a program.",
    "output": "def y(g):\n    return 42860 - 2857*g\n\nprint(y(15))",
    "correct": true
  },
  {
    "ans": "1.8",
    "gt": "1.8",
    "err": false,
    "question": "Suppose 47*o - 17 = 171. What is the second smallest value in 0.2, o, 1.8? Let's write a program.",
    "output": "from sympy import Eq, Symbol, solve\r\n\r\n# o = 171/47 + 17\r\no = 171/47 + 17\r\n\r\nvalues = [0.2, o, 1.8]\r\n\r\n# Second smallest value in 0.2, o, 1.8\r\nsecond_smallest = min(values[1:])\r\n\r\nprint(second_smallest)",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "-0.0",
    "err": false,
    "question": "0 divided by -209620 Let's write a program.",
    "output": "print(0 / -209620)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 23, in <module>\n  File \"<string>\", line 17, in run_it\nNameError: name 'a' is not defined\n",
    "gt": "1.0",
    "err": true,
    "question": "Let s(y) = -y**2 - 4*y - 4. Let c be s(-4). Let r be ((-18)/24)/((-1)/c). Let u(a) = -a**3 - 2*a**2 + 4*a + 4. Determine u(r). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ny = sp.symbols('y')\n\n# define the function s(y)\ns = -y**2 - 4*y - 4\n\n# calculate c\nc = s.subs(y, -4)\n\n# calculate r\nr = ((-18)/24)/((-1)/c)\n\n# define the function u(a)\nu = -a**3 - 2*a**2 + 4*a + 4\n\n# calculate u(r)\nu_r = u.subs(a, r)\n\nprint(u_r)",
    "correct": false
  },
  {
    "ans": "29",
    "gt": "29",
    "err": false,
    "question": "Calculate the remainder when 209 is divided by 30. Let's write a program.",
    "output": "remainder = 209 % 30\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "2.6999999999999993",
    "gt": "2",
    "err": false,
    "question": "Let y = 41 + 86. What is the tens digit of y? Let's write a program.",
    "output": "y = 41 + 86\ntens_digit = y / 10 % 10\nprint(tens_digit)",
    "correct": false
  },
  {
    "ans": "-0.5",
    "gt": "-0.5",
    "err": false,
    "question": "What is the nearest to -6/5 in -0.5, -5, 0.3, -115? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [-0.5, -5, 0.3, -115]\n\n# find the closest number to -6/5\nclosest_num = min(numbers, key=lambda x:math.fabs(x-(-6/5)))\n\n# print the result\nprint(closest_num)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Solve 14*g + 24 = 26*g for g. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ng = sp.symbols('g')\n\n# define the equation\neq = sp.Eq(14*g + 24, 26*g)\n\n# solve the equation\nsolution = sp.solve(eq, g)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "51",
    "gt": "51",
    "err": false,
    "question": "Let i(z) = 2*z**2 - z + 51. Give i(0). Let's write a program.",
    "output": "def i(z):\n    return 2*z**2 - z + 51\n\nprint(i(0))",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "Let b(p) = p**2 - 22865*p - 182986. Give b(-8). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\np = sp.symbols('p')\n\n# define the function\nb = p**2 - 22865*p - 182986\n\n# substitute p with -8\nresult = b.subs(p, -8)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "145.6",
    "gt": "145.6",
    "err": false,
    "question": "What is the product of -0.13 and -1120? Let's write a program.",
    "output": "print(-0.13 * -1120)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 8, in run_it\nNameError: name 'i' is not defined\n",
    "gt": "-4",
    "err": true,
    "question": "Let i be (54 - 1) + -2 - (-6 - -10). Solve i*n = 52*n + 20 for n. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nn = sp.symbols('n')\n\n# define the equation\neq = sp.Eq(i*n, 52*n + 20)\n\n# solve the equation\nsolution = sp.solve(eq, n)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": false
  },
  {
    "ans": "-5",
    "gt": "-0.3",
    "err": false,
    "question": "Let m = 7 + -3. Let r = 4.99 - -0.01. Let x = r + -10. Which is the nearest to 2/3?  (a) -0.3  (b) x  (c) m Let's write a program.",
    "output": "m = 7 - 3\nr = 4.99 - (-0.01)\nx = r - 10\n\nvalue = r + x + m\n\nnearest = 2/3\n\nif nearest == value:\n    print(10)\nelif nearest < value:\n    print(x)\nelse:\n    print(m)",
    "correct": false
  },
  {
    "ans": "-1",
    "gt": "-1.0",
    "err": false,
    "question": "Let v = 3 + -2. Let z be ((1 - -1)*-1)/((-114)/741). Let k(x) = v - 7*x**2 - 5*x**2 - 3*x + z*x**2. What is k(2)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nx = sp.symbols('x')\n\n# define the function k(x)\nv = 3 + -2\nz = ((1 - -1)*-1)/((-114)/741)\nk = v - 7*x**2 - 5*x**2 - 3*x + z*x**2\n\n# calculate k(2)\nk_2 = k.subs(x, 2)\n\n# print the result\nprint(k_2)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "7",
    "err": false,
    "question": "What is the tens digit of 17471? Let's write a program.",
    "output": "tens_digit = 17471 % 10\nprint(tens_digit)",
    "correct": false
  },
  {
    "ans": "0.3",
    "gt": "0.3",
    "err": false,
    "question": "What is the nearest to 42/71 in 96.3, 8, 4, 0.3? Let's write a program.",
    "output": "from math import inf\n\n# define the numbers\nnumbers = [96.3, 8, 4, 0.3]\n\n# find the number closest to 42/71\nclosest = min(numbers, key=lambda x:abs(x-42/71))\n\nprint(closest)",
    "correct": true
  },
  {
    "ans": "147",
    "gt": "147",
    "err": false,
    "question": "Calculate the remainder when 15957 is divided by 155. Let's write a program.",
    "output": "remainder = 15957 % 155\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "-17",
    "err": false,
    "question": "Which is the third biggest value?  (a) -17  (b) 2  (c) -26/11 Let's write a program.",
    "output": "values = [-17, 2, -26/11]\nthird_biggest = max(values)\nprint(third_biggest)",
    "correct": false
  },
  {
    "ans": "-8575",
    "gt": "-8575",
    "err": false,
    "question": "Multiply 1715 and -5. Let's write a program.",
    "output": "print(1715 * -5)",
    "correct": true
  },
  {
    "ans": "23",
    "gt": "23.0",
    "err": false,
    "question": "What is (36/(-108))/((-3)/621*3)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (36/(-108))/((-3)/621*3)\n\n# calculate the result\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 24, in <module>\n  File \"<string>\", line 20, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "13",
    "err": true,
    "question": "Let v(t) = -5*t + 0*t - t + 4*t + 2*t**2 + 1. Suppose 5*r - 7 = z + 14, 5*z = 3*r + 5. Suppose 5*h - 18 = -c, 27 = r*h + 6*c - 2*c. Give v(h). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nt, r, z, h, c = sp.symbols('t r z h c')\n\n# define the function v(t)\nv = -5*t + 0*t - t + 4*t + 2*t**2 + 1\n\n# define the equations\neq1 = sp.Eq(5*r - 7, z + 14)\neq2 = sp.Eq(5*z, 3*r + 5)\neq3 = sp.Eq(5*h - 18, -c)\neq4 = sp.Eq(27, r*h + 6*c - 2*c)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2, eq3, eq4), (r, z, h, c))\n\n# substitute the solutions into v(t)\nv_h = v.subs(h, solution[h])\n\n# print the result\nprint(v_h)",
    "correct": false
  },
  {
    "ans": "13",
    "gt": "13",
    "err": false,
    "question": "Solve -10056*h + 10096*h - 520 = 0 for h. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nh = sp.symbols('h')\n\n# define the equation\nequation = sp.Eq(-10056*h + 10096*h - 520, 0)\n\n# solve the equation\nsolution = sp.solve(equation, h)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "747",
    "gt": "747",
    "err": false,
    "question": "What is 416185228 to the power of 1/3, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# define the number\nnum = 416185228\n\n# calculate the cube root\ncube_root = num ** (1/3)\n\n# round to the nearest integer\nnearest_integer = round(cube_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "19",
    "gt": "19.0",
    "err": false,
    "question": "What is (-2964)/(-26)*(2/16)/(183/244)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpression = (-2964)/(-26)*(2/16)/(183/244)\n\n# calculate the result\nresult = sp.simplify(expression)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "6",
    "gt": "5",
    "err": false,
    "question": "Let b = 3281 - 2226. What is the units digit of b? Let's write a program.",
    "output": "b = 3281 - 2226\n# The units digit of a subtraction is the same as the units digit of the smaller number.\nunits_digit = 2226 % 10\nprint(units_digit)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 14, in <module>\n  File \"<string>\", line 11, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "1",
    "err": true,
    "question": "Suppose -6 = 5*z - 21. Suppose -z*o = 2*h + 6, -4*h + 7*o = 2*o - 32. Suppose -5*u + 0*y + y = 0, -22 = h*u - 5*y. Which is greater: u or 2/13? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nz, h, o, u, y = sp.symbols('z h o u y')\n\n# solve the equations\nsolution = sp.solve((-6 - 21 + 5*z, -4*h + 7*o - 2*o + 32, -5*u + 0*y + y, -22 + h*u - 5*y), (z, h, o, u, y))\n\n# find the greater value\ngreater_value = max(solution[u], 2/13)\n\nprint(greater_value)",
    "correct": false
  },
  {
    "ans": "97",
    "gt": "97",
    "err": false,
    "question": "Calculate the remainder when 134198 is divided by 12191. Let's write a program.",
    "output": "remainder = 134198 % 12191\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 19, in <module>\n  File \"<string>\", line 17, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "2",
    "err": true,
    "question": "Suppose -2*q = 4*v - 16, -4*v + v + 11 = 2*q. Solve 2*p = -3*b, v*b - 13 = 4*p - 3*p for b. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nq, v, b, p = sp.symbols('q v b p')\n\n# define the equations\neq1 = sp.Eq(-2*q, 4*v - 16)\neq2 = sp.Eq(-4*v + v + 11, 2*q)\neq3 = sp.Eq(2*p, -3*b)\neq4 = sp.Eq(v*b - 13, 4*p - 3*p)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2, eq3, eq4), (q, v, b, p))\n\n# calculate b\nb_value = solution[b]\nprint(b_value)",
    "correct": false
  },
  {
    "ans": "283/9",
    "gt": "7 1 -1",
    "err": false,
    "question": "Suppose 0 = -5*d - 3*p + 12, 5*p - 4*p - 4 = 4*d. Suppose d = 5*v + 19 - 54. Put 1, -1, v in descending order. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nd, p, v = sp.symbols('d p v')\n\n# define the equations\neq1 = sp.Eq(d, -5*p - 3)\neq2 = sp.Eq(d, 4*p - 4)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (d, p))\n\n# calculate v\nv_value = solution[d] - 19 + 54\n\n# sort 1, -1, v\nsorted_values = sorted([1, -1, v_value])\n\n# print the result\nprint(sorted_values)",
    "correct": false
  },
  {
    "ans": "-75",
    "gt": "-75",
    "err": false,
    "question": "What is the value of 4 - ((3 - 9) + 11) - (19 + (5 - -50))? Let's write a program.",
    "output": "print(4 - ((3 - 9) + 11) - (19 + (5 - -50)))",
    "correct": true
  },
  {
    "ans": "22",
    "gt": "2",
    "err": false,
    "question": "What is the hundreds digit of 2281? Let's write a program.",
    "output": "hundreds_digit = 2281 / 100\nprint(int(hundreds_digit))",
    "correct": false
  },
  {
    "ans": "9",
    "gt": "9",
    "err": false,
    "question": "Calculate the remainder when 345 is divided by 48. Let's write a program.",
    "output": "remainder = 345 % 48\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-0.5",
    "gt": "-0.5",
    "err": false,
    "question": "(-3)/9*-9*(-3)/18 Let's write a program.",
    "output": "print((-3)/9*-9*(-3)/18)",
    "correct": true
  },
  {
    "ans": "962",
    "gt": "962",
    "err": false,
    "question": "Let z(l) = 4884*l - 3922. Calculate z(1). Let's write a program.",
    "output": "def z(l):\n    return 4884*l - 3922\n\nprint(z(1))",
    "correct": true
  },
  {
    "ans": "42",
    "gt": "42",
    "err": false,
    "question": "Calculate the greatest common divisor of 210 and 462. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 210\nnum2 = 462\n\n# calculate the greatest common divisor\ngcd = math.gcd(num1, num2)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "What is 4 - (6 + -3 - 2)? Let's write a program.",
    "output": "print(4 - (6 + -3 - 2))",
    "correct": true
  },
  {
    "ans": "-0.0014114326040931546",
    "gt": "-0.2",
    "err": false,
    "question": "Which is the fourth biggest value?  (a) 74  (b) -2  (c) -0.2  (d) -2/13  (e) -2/1417 Let's write a program.",
    "output": "a = 74\nb = -2\nc = -0.2\nd = -2/13\ne = -2/1417\n\nfourth_biggest = max(d, e, c, b)\n\nprint(fourth_biggest)",
    "correct": false
  },
  {
    "ans": "80",
    "gt": "80",
    "err": false,
    "question": "Solve 769*r = -545*r + 91*r - 1343*r + 205280 for r. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nr = sp.symbols('r')\n\n# define the equation\neq = sp.Eq(769*r, -545*r + 91*r - 1343*r + 205280)\n\n# solve the equation\nsolution = sp.solve(eq, r)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-0.21",
    "gt": "-1.5",
    "err": false,
    "question": "Let u = 170 - 170.1. What is the third biggest value in -3/2, u, -0.21? Let's write a program.",
    "output": "import math\n\n# define the value of u\nu = -3/2\n\n# define the third biggest value\nthird_biggest = -0.21\n\n# find the third biggest value\nif u > third_biggest:\n    third_biggest = u\n\n# print the result\nprint(third_biggest)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 9, in <module>\n  File \"<string>\", line 6, in run_it\nAttributeError: 'int' object has no attribute 'index'\n",
    "gt": "1",
    "err": true,
    "question": "Which is the nearest to -0.3?  (a) 1  (b) 12  (c) 7 Let's write a program.",
    "output": "a = 1\nb = 12\nc = 7\n\nnearest = (a, b, c)[a.index(-0.3)//2]\n\nprint(nearest)",
    "correct": false
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "What is the tenth root of 1366434 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the tenth root of 1366434\ntenth_root = math.pow(1366434, 1/10)\n\n# round to the nearest integer\nnearest_integer = round(tenth_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "8",
    "gt": "8",
    "err": false,
    "question": "What is the units digit of 188? Let's write a program.",
    "output": "def find_unit_digit(number):\n    return number % 10\n\nprint(find_unit_digit(188))",
    "correct": true
  },
  {
    "ans": "-26",
    "gt": "-26",
    "err": false,
    "question": "Solve -781*t - 5186 = 15120 for t. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nt = sp.symbols('t')\n\n# define the equation\neq = sp.Eq(-781*t - 5186, 15120)\n\n# solve the equation\nsolution = sp.solve(eq, t)\n\n# print the result\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "23",
    "gt": "23",
    "err": false,
    "question": "Let w(d) = -46*d. Let i be w(-1). Calculate the greatest common factor of 69 and i. Let's write a program.",
    "output": "import math\n\n# define the function w\ndef w(d):\n    return -46*d\n\n# calculate i\ni = w(-1)\n\n# calculate the greatest common factor of 69 and i\nfactor = math.gcd(69, i)\n\nprint(factor)",
    "correct": true
  },
  {
    "ans": "0.5",
    "gt": "0.5",
    "err": false,
    "question": "Evaluate (-4)/28*7/(-2). Let's write a program.",
    "output": "print((-4)/28*7/(-2))",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 16, in run_it\nKeyError: 0\n",
    "gt": "-5",
    "err": true,
    "question": "Solve 7486*a - 7481*a + 17 - 2 = -2*w, w + 2*a + 7 = 0 for w. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\na, w = sp.symbols('a w')\n\n# define the equations\neq1 = sp.Eq(7486*a - 7481*a + 17 - 2, -2*w)\neq2 = sp.Eq(w + 2*a + 7, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (a, w))\n\n# print the result\nfor i in range(len(solution)):\n    print(solution[i])",
    "correct": false
  },
  {
    "ans": "-2",
    "gt": "5",
    "err": false,
    "question": "Which is the nearest to 4?  (a) -2  (b) -1  (c) 5  (d) -2/19 Let's write a program.",
    "output": "a = -2\nb = -1\nc = 5\nd = -2/19\n\nnearest = min(a, b, c, d)\n\nprint(nearest)",
    "correct": false
  },
  {
    "ans": "-13",
    "gt": "-13",
    "err": false,
    "question": "Solve 72*p + 112 + 824 = 0 for p. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\np = sp.symbols('p')\n\n# define the equation\neq = sp.Eq(72*p + 112 + 824, 0)\n\n# solve the equation\nsolution = sp.solve(eq, p)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "9",
    "err": false,
    "question": "Let k(w) = 23*w - 30. Let u(m) = -3 - 59 + 89*m - 32*m - 13. Let c(g) = -12*k(g) + 5*u(g). Find the first derivative of c(p) wrt p. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw, m, g, p = sp.symbols('w m g p')\n\n# define the functions k(w), u(m) and c(g)\nk = 23*w - 30\nu = -3 - 59 + 89*m - 32*m - 13\nc = -12*k + 5*u\n\n# find the first derivative of c(p) wrt p\ndc_dp = sp.diff(c.subs(g, p), p)\n\n# print the result\nprint(dc_dp)",
    "correct": false
  },
  {
    "ans": "38",
    "gt": "12",
    "err": false,
    "question": "Let c(h) = 1 - h. Let d(n) be the third derivative of -n**5/10 - 2*n**4/3 + n**3 - 19*n**2. Let p(o) = 6*c(o) - d(o). Find the second derivative of p(f) wrt f. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nf = sp.symbols('f')\n\n# define the functions\nc = 1 - f\nd = -f**5/10 - 2*f**4/3 + f**3 - 19*f**2\np = 6*c - d\n\n# calculate the first derivative of p\np_f = sp.diff(p, f)\n\n# calculate the second derivative of p\np_f_2 = sp.diff(p_f, f)\n\n# print the result\nprint(p_f_2)",
    "correct": false
  },
  {
    "ans": "-2",
    "gt": "5",
    "err": false,
    "question": "Suppose -5*m - 58 = -6*m. What is the tens digit of m? Let's write a program.",
    "output": "m = -58 / 5\r\nprint(m)\r\ntens_digit = m // 10\r\nprint(tens_digit)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 19, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "5",
    "err": true,
    "question": "Suppose 13 = 4*b - 10*z + 5*z, -4*z = 4. Suppose 0 = -2*h - 5*k + k - 16, -2*k = -3*h + 8. Solve 3*j - 5*o + h*o = 25, -b*j + 4*o + 18 = 0 for j. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nb, z, h, k, j, o = sp.symbols('b z h k j o')\n\n# define the equations\neq1 = sp.Eq(b, 4*z - 10*z + 5*z)\neq2 = sp.Eq(-4*z, 4)\neq3 = sp.Eq(0, -2*h - 5*k + k - 16)\neq4 = sp.Eq(-2*k, -3*h + 8)\neq5 = sp.Eq(3*j - 5*o + h*o, 25)\neq6 = sp.Eq(-b*j + 4*o + 18, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2, eq3, eq4, eq5, eq6), (b, z, h, k, j, o))\n\n# calculate j\nj_value = solution[j]\nprint(j_value)",
    "correct": false
  },
  {
    "ans": "92",
    "gt": "1",
    "err": false,
    "question": "Let c be 1 + (-2 - -1) - 0. Let h(j) be the first derivative of -j**4/4 + j + 92. Give h(c). Let's write a program.",
    "output": "c = 1 + (-2 - -1) - 0\nh = lambda j: -j**4/4 + j + 92\nh_c = h(c)\nprint(h_c)",
    "correct": false
  },
  {
    "ans": "34",
    "gt": "34",
    "err": false,
    "question": "Calculate the remainder when 5179 is divided by 49. Let's write a program.",
    "output": "remainder = 5179 % 49\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-357",
    "gt": "-357",
    "err": false,
    "question": "Which is smaller: -355 or -357? Let's write a program.",
    "output": "num1 = -355\nnum2 = -357\n\nif num1 < num2:\n    print(num1)\nelse:\n    print(num2)",
    "correct": true
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "Calculate the greatest common divisor of 16 and 484. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 16\nnum2 = 484\n\n# calculate the greatest common divisor\ngcd = math.gcd(num1, num2)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "[2, 3]",
    "err": false,
    "question": "Let i(h) be the first derivative of 6*h**3 + 3. List the prime factors of i(1). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nh = sp.symbols('h')\n\n# define the function\ni = 6*h**3 + 3\n\n# calculate the derivative\ni_derivative = sp.diff(i, h)\n\n# substitute h = 1\ni_derivative_at_1 = i_derivative.subs(h, 1)\n\n# factorize the result\nfactors = sp.factorint(i_derivative_at_1)\n\n# print the prime factors\nprint(factors.keys())",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "What is the units digit of 1632? Let's write a program.",
    "output": "def find_unit_digit(number):\n    return number % 10\n\nprint(find_unit_digit(1632))",
    "correct": true
  },
  {
    "ans": "-15",
    "gt": "-15",
    "err": false,
    "question": "What is (-2 - 22) + 34 + 18 + -8 + -35? Let's write a program.",
    "output": "print((-2 - 22) + 34 + 18 + -8 + -35)",
    "correct": true
  },
  {
    "ans": "84",
    "gt": "84.0",
    "err": false,
    "question": "-10271604 divided by -122281 Let's write a program.",
    "output": "a = -10271604\nb = -122281\n\nresult = a / b\n\nprint(result)",
    "correct": false
  },
  {
    "ans": "-4",
    "gt": "-4",
    "err": false,
    "question": "Let q(z) = 16 + 0*z + 7*z + 23 + 6. Let s be q(-3). Solve -c - s = 5*c for c. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nz = sp.symbols('z')\n\n# define the function q(z)\nq = 16 + 0*z + 7*z + 23 + 6\n\n# calculate s\ns = q.subs(z, -3)\n\n# define the variable c\nc = sp.symbols('c')\n\n# define the equation -c - s = 5*c\neq = sp.Eq(-c - s, 5*c)\n\n# solve the equation for c\nsolution = sp.solve(eq, c)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-0.2857142857142857",
    "gt": "-0.3",
    "err": false,
    "question": "What is the third biggest value in 2/3, -0.3, -2/7, -69605, -0.5, -1? Let's write a program.",
    "output": "values = [2/3, -0.3, -2/7, -69605, -0.5, -1]\nthird_biggest = max(values[1:])\nprint(third_biggest)",
    "correct": false
  },
  {
    "ans": "-10",
    "gt": "-10",
    "err": false,
    "question": "Which is the smallest value?  (a) -0.5  (b) 0  (c) 1  (d) -10 Let's write a program.",
    "output": "a = -0.5\nb = 0\nc = 1\nd = -10\n\nsmallest = min(a, b, c, d)\n\nprint(smallest)",
    "correct": true
  },
  {
    "ans": "15921",
    "gt": "15921",
    "err": false,
    "question": "What is the square root of 253468392 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the square root of 253468392\nsqrt = math.sqrt(253468392)\n\n# round to the nearest integer\nnearest_integer = round(sqrt)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "477",
    "gt": "477",
    "err": false,
    "question": "What is the square root of 227892 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the square root of 227892\nsqrt = math.sqrt(227892)\n\n# round to the nearest integer\nnearest_int = round(sqrt)\n\nprint(nearest_int)",
    "correct": true
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "Let b(s) = -s**3 - 18*s**2 - 35*s + 20. Let o be b(-16). What is the greatest common factor of o and 4? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ns = sp.symbols('s')\n\n# define the function b(s)\nb = -s**3 - 18*s**2 - 35*s + 20\n\n# calculate o\no = b.subs(s, -16)\n\n# calculate the greatest common factor of o and 4\ngcf = sp.gcd(o, 4)\n\nprint(gcf)",
    "correct": true
  },
  {
    "ans": "31",
    "gt": "31",
    "err": false,
    "question": "What is the third root of 30282 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the third root of 30282\nthird_root = math.pow(30282, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(third_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "9/4",
    "gt": "1",
    "err": false,
    "question": "Suppose -28 = -4*d + 4*f, -d + 4*f - 2 + 3 = 0. Let r be 3*(d/(-3) + 2). What is the units digit of (-6)/4*2/r? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nd, f = sp.symbols('d f')\n\n# define the equations\neq1 = sp.Eq(-4*d + 4*f, -28)\neq2 = sp.Eq(-d + 4*f - 2 + 3, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (d, f))\n\n# calculate r\nr = 3 * (solution[d] / (-3) + 2)\n\n# calculate the units digit of (-6)/4*2/r\nunits_digit = (-6) / (4 * 2 / r) % 10\n\n# print the result\nprint(units_digit)",
    "correct": false
  },
  {
    "ans": "0.8",
    "gt": "0.8",
    "err": false,
    "question": "(-44)/55*1/(-2)*2 Let's write a program.",
    "output": "print((-44)/55*1/(-2)*2)",
    "correct": true
  },
  {
    "ans": "19",
    "gt": "19",
    "err": false,
    "question": "Calculate the remainder when 42 is divided by 23. Let's write a program.",
    "output": "remainder = 42 % 23\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "0.358",
    "gt": "0.358",
    "err": false,
    "question": "Calculate -1*-0.358. Let's write a program.",
    "output": "print(-1*-0.358)",
    "correct": true
  },
  {
    "ans": "-16",
    "gt": "-16",
    "err": false,
    "question": "Let r(m) = m**3 + 8*m**2 + 10*m + 5. What is r(-7)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nm = sp.symbols('m')\n\n# define the function\nr = m**3 + 8*m**2 + 10*m + 5\n\n# substitute m with -7\nresult = r.subs(m, -7)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "Suppose -2*z - 5*u + 16 = -u, -z - 3*u + 11 = 0. Solve -v = -z*v for v. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nu, v, z = sp.symbols('u v z')\n\n# define the equations\neq1 = sp.Eq(-2*z - 5*u + 16, -u)\neq2 = sp.Eq(-z - 3*u + 11, 0)\n\n# solve the system of equations for z and u\nsolution = sp.solve((eq1,eq2), (z, u))\n\n# substitute the solution back into the equation for v\neq_v = sp.Eq(v, -solution[z]*v)\n\n# solve the equation for v\nsolution_v = sp.solve(eq_v, v)\n\n# print the solution\nfor i in solution_v:\n    print(i)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "What is the hundreds digit of 2797190? Let's write a program.",
    "output": "def find_hundreds_digit(n):\n    return n // 100 % 10\n\nprint(find_hundreds_digit(2797190))",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Let u(l) = -l**2 + 8*l - 4. Let s be u(3). Suppose 3*i + 4*j = -37, 2*i + 7 = 4*j - s. Let z = 0 - i. What is the units digit of z? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nl = sp.symbols('l')\ni = sp.symbols('i')\nj = sp.symbols('j')\n\n# define the function u(l)\nu = -l**2 + 8*l - 4\n\n# calculate s\ns = u.subs(l, 3)\n\n# define the equations\neq1 = sp.Eq(3*i + 4*j, -37)\neq2 = sp.Eq(2*i + 7, 4*j - s)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (i, j))\n\n# calculate z\nz = 0 - solution[i]\n\n# get the units digit of z\nunits_digit = z % 10\n\nprint(units_digit)",
    "correct": true
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "What is the greatest common divisor of 3269 and 21? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 3269\nnum2 = 21\n\n# calculate the greatest common divisor\ngcd = math.gcd(num1, num2)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "8",
    "gt": "8",
    "err": false,
    "question": "What is the tens digit of 937238588? Let's write a program.",
    "output": "tens_digit = 38588 % 10\nprint(tens_digit)",
    "correct": true
  },
  {
    "ans": "36",
    "gt": "36",
    "err": false,
    "question": "What is the greatest common factor of 41436 and 184068? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 41436\nnum2 = 184068\n\n# calculate the greatest common factor\ngcf = math.gcd(num1, num2)\n\n# print the result\nprint(gcf)",
    "correct": true
  },
  {
    "ans": "-5",
    "gt": "3",
    "err": false,
    "question": "Solve -k = 3*f - 4, 2*f + 7*k + 31 = 2 for f. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nk, f = sp.symbols('k f')\n\n# define the equations\neq1 = sp.Eq(-k, 3*f - 4)\neq2 = sp.Eq(2*f + 7*k + 31, 2)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2), (k, f))\n\n# print the result\nfor var, val in solution.items():\n    print(var, '=', val)",
    "correct": false
  },
  {
    "ans": "-360",
    "gt": "-360*f",
    "err": false,
    "question": "Let g(y) = 9*y**4 + 25*y**2 + 6. Let s(d) = 1 - d**4. Let x(t) = -g(t) + 6*s(t). What is the third derivative of x(f) wrt f? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nf = sp.symbols('f')\n\n# define the functions g(y), s(d) and x(t)\ng = 9*f**4 + 25*f**2 + 6\ns = 1 - f**4\nx = -g + 6*s\n\n# calculate the third derivative of x(f) wrt f\nthird_derivative = sp.diff(x, f, 3)\n\n# print the result\nprint(third_derivative)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 16, in run_it\nNameError: name 'f' is not defined\n",
    "gt": "6",
    "err": true,
    "question": "Suppose 7*x + 5*x - 144 = 0. Let f(r) = 6*r**2 - 3*r - 3. Let d be f(-1). What is the greatest common divisor of x and d? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nx, r = sp.symbols('x r')\n\n# define the equations\neq1 = sp.Eq(7*x + 5*x - 144, 0)\neq2 = sp.Eq(6*r**2 - 3*r - 3, 0)\n\n# solve the equations\nsolution_x = sp.solve(eq1, x)[0]\nsolution_r = sp.solve(eq2, r)[0]\n\n# calculate d\nd = f(-1)\n\n# calculate the greatest common divisor of x and d\ngcd_xd = sp.gcd(solution_x, d)\n\nprint(gcd_xd)",
    "correct": false
  },
  {
    "ans": "16",
    "gt": "-1",
    "err": false,
    "question": "Let f be 8/(-40*2/(-32))*(-5)/(-1). Which is the closest to -0.1?  (a) -1  (b) -17/11  (c) f Let's write a program.",
    "output": "import math\n\n# define the variable\nf = 8/(-40*2/(-32))*(-5)/(-1)\n\n# calculate the closest to -0.1\nclosest_to_minus_01 = round(f, 10)\n\n# print the result\nprint(closest_to_minus_01)",
    "correct": false
  },
  {
    "ans": "10",
    "gt": "10",
    "err": false,
    "question": "(-6 + (4 - 1))*-3 + (-8 - -9) Let's write a program.",
    "output": "print((-6 + (4 - 1))*-3 + (-8 - -9))",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "0.0",
    "err": false,
    "question": "Let i = 827 + -824. What is the remainder when (-2)/(-4) - 17/(-2) is divided by i? Let's write a program.",
    "output": "i = 827 + -824\nremainder = (-2)/(-4) - 17/(-2)\nprint(remainder % i)",
    "correct": false
  },
  {
    "ans": "80",
    "gt": "80",
    "err": false,
    "question": "Simplify ((sqrt(3200) + sqrt(3200) + -2*sqrt(3200) + sqrt(3200))/(1*sqrt(10)*2))**2. Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = ((sp.sqrt(3200) + sp.sqrt(3200) + -2*sp.sqrt(3200) + sp.sqrt(3200))/(1*sp.sqrt(10)*2))**2\n\n# simplify the expression\nsimplified_expr = sp.simplify(expr)\n\n# print the result\nprint(simplified_expr)",
    "correct": true
  },
  {
    "ans": "665",
    "gt": "665",
    "err": false,
    "question": "What is 441563 to the power of 1/2, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Calculate the square root of 441563\nsqrt = math.sqrt(441563)\n\n# Round to the nearest integer\nnearest_integer = round(sqrt)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 7:0: print(a)\n",
    "gt": "-3",
    "err": true,
    "question": "Which is the smallest value?  (a) 5  (b) -3  (c) 0  (d) 1 Let's write a program.",
    "output": "a = 5\nb = -3\nc = 0\nd = 1\n\nif a < b:\nprint(a)\nelif a < c:\nprint(a)\nelif a < d:\nprint(a)\nelif b < c:\nprint(b)\nelif b < d:\nprint(b)\nelif c < d:\nprint(c)\nelse:\nprint(d)",
    "correct": false
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "What is 63217 to the power of 1/10, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Calculate the power\nresult = math.pow(63217, 1/10)\n\n# Round to the nearest integer\nnearest_integer = round(result)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "8",
    "gt": "8",
    "err": false,
    "question": "Suppose -3*t + 2*k = -28, 4*t - 4*k + 2*k - 34 = 0. Suppose t*c = 9*c - 84. What is the units digit of c? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nt, k, c = sp.symbols('t k c')\n\n# define the equations\neq1 = sp.Eq(-3*t + 2*k, -28)\neq2 = sp.Eq(4*t - 4*k + 2*k - 34, 0)\neq3 = sp.Eq(t*c, 9*c - 84)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2), (t, k))\n\n# substitute the solutions into the third equation\nc_value = sp.solve(eq3.subs(solution), c)\n\n# get the units digit of c\nunits_digit = c_value[0] % 10\n\nprint(units_digit)",
    "correct": true
  },
  {
    "ans": "43",
    "gt": "43",
    "err": false,
    "question": "What is 1883 to the power of 1/2, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Calculate the square root of 1883\nsqrt_1883 = math.sqrt(1883)\n\n# Round to the nearest integer\nnearest_integer = round(sqrt_1883)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "0.5",
    "gt": "0.5",
    "err": false,
    "question": "Which is greater: -1337 or 1/2? Let's write a program.",
    "output": "print(-1337) if -1337 > 1/2 else print(1/2)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Let j = 0 - -5. Suppose h - 6*h = 3*i - 75, -5*i = j*h - 75. Let x = h - 14. Calculate the greatest common factor of x and 7. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj, h, i = sp.symbols('j h i')\n\n# calculate j\nj = 0 - -5\n\n# calculate h and i\nh = sp.solve(sp.Eq(-5*i, j*h - 75), h)[0]\ni = sp.solve(sp.Eq(h - 6*h, 3*i - 75), i)[0]\n\n# calculate x\nx = h - 14\n\n# calculate the greatest common factor of x and 7\ngcf = sp.gcd(x, 7)\n\nprint(gcf)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "[2, 3]",
    "err": false,
    "question": "Let w(m) = m**3 + m**2 + 1. Let j(p) = 4*p**3 - 3*p**2 - 10*p + 12. Let c(f) = -j(f) + 3*w(f). What are the prime factors of c(7)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nf = sp.symbols('f')\n\n# define the functions w(m), j(p) and c(f)\nw = f**3 + f**2 + 1\nj = 4*f**3 - 3*f**2 - 10*f + 12\nc = -j + 3*w\n\n# substitute f with 7 in the function c(f)\nc_7 = c.subs(f, 7)\n\n# simplify the function c(7)\nc_7_simplified = sp.simplify(c_7)\n\n# find the prime factors of c(7)\nprime_factors = sp.factorint(c_7_simplified)\n\n# print the prime factors\nprint(prime_factors)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 26, in <module>\n  File \"<string>\", line 14, in run_it\nUnboundLocalError: cannot access local variable 'b' where it is not associated with a value\n",
    "gt": "8",
    "err": true,
    "question": "Let i(l) = l**2 + 9*l - 28. Let h be i(-12). Suppose 0 = -4*b + 242 + 366. What is the greatest common factor of h and b? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nl = sp.symbols('l')\n\n# define the function i(l)\ni = l**2 + 9*l - 28\n\n# calculate h\nh = i.subs(l, -12)\n\n# define the equation for b\neq = sp.Eq(-4*b + 242 + 366, 0)\n\n# solve the equation for b\nsolution = sp.solve(eq, b)\n\n# calculate b\nb = solution[0]\n\n# calculate the greatest common factor of h and b\ngcf = sp.gcd(h, b)\n\nprint(gcf)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Let g(c) = c**2 + 12. Let k = 3 - 3. Let y be g(k). What is the remainder when (-1 - -1 - -1) + y is divided by 4? Let's write a program.",
    "output": "def g(c):\n    return c**2 + 12\n\nk = 3 - 3\ny = g(k)\n\nremainder = ((-1 - -1 - -1) + y) % 4\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "1.3125",
    "gt": "84.0",
    "err": false,
    "question": "Evaluate 42*8*32/1024*8. Let's write a program.",
    "output": "print((42*8*32)/(1024*8))",
    "correct": false
  },
  {
    "ans": "28",
    "gt": "28",
    "err": false,
    "question": "Evaluate 27 + -245 + 232 + (0 + -1 - -15). Let's write a program.",
    "output": "print(27 + -245 + 232 + (0 + -1 - -15))",
    "correct": true
  },
  {
    "ans": "-3",
    "gt": "-3",
    "err": false,
    "question": "What is the nearest to -1 in 24.68, 31/3, -3? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 24.68\nnum2 = 31/3\nnum3 = -3\n\n# calculate the nearest to -1\nnearest = min(num1, num2, num3)\n\nprint(nearest)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Solve 7*v = -v + 8 for v. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nv = sp.symbols('v')\n\n# define the equation\nequation = sp.Eq(7*v, -v + 8)\n\n# solve the equation\nsolution = sp.solve(equation, v)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "1",
    "err": false,
    "question": "What is the hundred thousands digit of 57166438? Let's write a program.",
    "output": "hundred_thousands_digit = \"5\"\nprint(hundred_thousands_digit)",
    "correct": false
  },
  {
    "ans": "76",
    "gt": "10.0",
    "err": false,
    "question": "Let v = 32 - 40. Let c(f) = 4 - f. Let k be c(v). Calculate the remainder when 76 is divided by 2/((-2)/3) + (k - -2). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nv = sp.symbols('v')\nc = sp.symbols('c')\nf = sp.symbols('f')\nk = c.subs(v, f).subs(f, -2)\n\n# calculate the remainder\nremainder = sp.rem(76, 2/(sp.Rational(-2, 3)) + (k - sp.Rational(-2)))\n\n# print the result\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "3.16573",
    "gt": "3",
    "err": false,
    "question": "What is the millions digit of 3165730? Let's write a program.",
    "output": "millions_digit = 3165730 / 1000000\nprint(millions_digit)",
    "correct": false
  },
  {
    "ans": "17",
    "gt": "17",
    "err": false,
    "question": "What is 378069438 to the power of 1/7, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# define the number and the power\nnum = 378069438\npower = 1/7\n\n# calculate the power\nresult = math.pow(num, power)\n\n# round to the nearest integer\nresult = round(result)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "58",
    "gt": "58",
    "err": false,
    "question": "Let o(y) = 9*y**2 - 94*y + 3. Determine o(11). Let's write a program.",
    "output": "def o(y):\n    return 9*y**2 - 94*y + 3\n\nprint(o(11))",
    "correct": true
  },
  {
    "ans": "-21",
    "gt": "-21",
    "err": false,
    "question": "Solve 2341*f = 2819*f + 10038 for f. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nf = sp.symbols('f')\n\n# define the equation\nequation = sp.Eq(2341*f, 2819*f + 10038)\n\n# solve the equation\nsolution = sp.solve(equation, f)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-4",
    "gt": "-4",
    "err": false,
    "question": "Let y(j) = 458 - 33*j. What is y(14)? Let's write a program.",
    "output": "def y(j):\n    return 458 - 33*j\n\nprint(y(14))",
    "correct": true
  },
  {
    "ans": "150",
    "gt": "9",
    "err": false,
    "question": "What is the hundreds digit of 150921? Let's write a program.",
    "output": "hundreds_digit = 150921 / 1000\nprint(int(hundreds_digit))",
    "correct": false
  },
  {
    "ans": "-48",
    "gt": "-0.3",
    "err": false,
    "question": "Let w = -38.148 - -38.148. Which is the third smallest value?  (a) -4  (b) w  (c) -0.3  (d) -48 Let's write a program.",
    "output": "w = -38.148 - -38.148\nvalues = [-4, w, -0.3, -48]\n\nthird_smallest = min(values[1:])\nprint(third_smallest)",
    "correct": false
  },
  {
    "ans": "80",
    "gt": "80",
    "err": false,
    "question": "Calculate the remainder when 156453 is divided by 1757. Let's write a program.",
    "output": "remainder = 156453 % 1757\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "74",
    "gt": "74",
    "err": false,
    "question": "Calculate the remainder when 112263 is divided by 16027. Let's write a program.",
    "output": "remainder = 112263 % 16027\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-7",
    "gt": "-7",
    "err": false,
    "question": "Evaluate -6 - -4 - 24 - -19. Let's write a program.",
    "output": "print(-6 - -4 - 24 - -19)",
    "correct": true
  },
  {
    "ans": "0.17647058823529413",
    "gt": "1",
    "err": false,
    "question": "Which is the nearest to 1?  (a) 4  (b) 3/17  (c) 31532  (d) 1 Let's write a program.",
    "output": "a = 4\nb = 3/17\nc = 31532\nd = 1\n\nnearest = min(a, b, c, d)\n\nprint(nearest)",
    "correct": false
  },
  {
    "ans": "6",
    "gt": "6",
    "err": false,
    "question": "Solve 0 = 7*m + b - 39, 5*b = 6*b + 4*b + 15 for m. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nm, b = sp.symbols('m b')\n\n# define the equations\neq1 = sp.Eq(7*m + b - 39, 0)\neq2 = sp.Eq(5*b, 6*b + 4*b + 15)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (m, b))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": true
  },
  {
    "ans": "27",
    "gt": "27",
    "err": false,
    "question": "Calculate the remainder when 335 is divided by 28. Let's write a program.",
    "output": "remainder = 335 % 28\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "20",
    "gt": "20.0",
    "err": false,
    "question": "Divide 125740 by 6287. Let's write a program.",
    "output": "a = 125740\nb = 6287\n\nresult = a / b\n\nprint(result)",
    "correct": false
  },
  {
    "ans": "8",
    "gt": "8",
    "err": false,
    "question": "What is 105082967 to the power of 1/9, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# define the number and the power\nnum = 105082967\npower = 1/9\n\n# calculate the power\nresult = math.pow(num, power)\n\n# round to the nearest integer\nresult = round(result)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "[3]",
    "err": false,
    "question": "Suppose 0 = -0*x - 4*x + 216. Suppose -2*m - s = -0*m - 57, -4*s - 69 = -3*m. Let z = x - m. What are the prime factors of z? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nx, m, s = sp.symbols('x m s')\n\n# define the equations\neq1 = sp.Eq(0, -0*x - 4*x + 216)\neq2 = sp.Eq(-2*m - s, -0*m - 57)\neq3 = sp.Eq(-4*s - 69, -3*m)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2,eq3), (x, m, s))\n\n# calculate z\nz = solution[x] - solution[m]\n\n# print the prime factors of z\nprint(sp.factorint(z))",
    "correct": false
  },
  {
    "ans": "-21",
    "gt": "-21",
    "err": false,
    "question": "5429 + -5413 + (-2 - 35) Let's write a program.",
    "output": "print(5429 + -5413 + (-2 - 35))",
    "correct": true
  },
  {
    "ans": "-8021",
    "gt": "-8021",
    "err": false,
    "question": "Which is greater: -296784/37 or -8021? Let's write a program.",
    "output": "a = -296784/37\nb = -8021\n\nif a > b:\n    print(a)\nelse:\n    print(b)",
    "correct": true
  },
  {
    "ans": "90",
    "gt": "90",
    "err": false,
    "question": "Calculate the remainder when 8563504 is divided by 4281707. Let's write a program.",
    "output": "remainder = 8563504 % 4281707\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-546181231404506962/14373190300118605",
    "gt": "-38.0",
    "err": false,
    "question": "Calculate 9/((-45)/188) + (-3)/10*280/210. Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = sp.Rational(9, (-45)/188) + sp.Rational(-3, 10)*sp.Rational(280, 210)\n\n# calculate the result\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "16",
    "gt": "16",
    "err": false,
    "question": "What is the cube root of 4053 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Calculate cube root\ncube_root = math.pow(4053, 1/3)\n\n# Round to nearest integer\nnearest_integer = round(cube_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "-5",
    "gt": "-5",
    "err": false,
    "question": "Let y(z) = -11*z**2 - 1015*z + 5345. What is y(5)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nz = sp.symbols('z')\n\n# define the function\ny = -11*z**2 - 1015*z + 5345\n\n# calculate the value of y at z=5\ny_at_5 = y.subs(z, 5)\n\nprint(y_at_5)",
    "correct": true
  },
  {
    "ans": "-1",
    "gt": "-1",
    "err": false,
    "question": "(-9 - -7) + 0 + 3 + 35 + -37 Let's write a program.",
    "output": "print((-9 - -7) + 0 + 3 + 35 + -37)",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "Which is bigger: -2/2699 or 0? Let's write a program.",
    "output": "\nprint(-2/2699) if -2/2699 > 0 else print(0)",
    "correct": true
  },
  {
    "ans": "-16",
    "gt": "-16",
    "err": false,
    "question": "What is the value of 7 + -34 + 7 - -14 - 10? Let's write a program.",
    "output": "print(7 + -34 + 7 - -14 - 10)",
    "correct": true
  },
  {
    "ans": "8",
    "gt": "8",
    "err": false,
    "question": "Calculate the highest common factor of 3712 and 10408. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 3712\nnum2 = 10408\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "10149",
    "gt": "3",
    "err": false,
    "question": "What is the thousands digit of 101493549? Let's write a program.",
    "output": "thousands_digit = 101493549 / 10000\nprint(int(thousands_digit))",
    "correct": false
  },
  {
    "ans": "6023",
    "gt": "6023.0",
    "err": false,
    "question": "What is -24092 divided by -4? Let's write a program.",
    "output": "print(-24092 / -4)",
    "correct": false
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "Suppose z - 2*o - 21 = 10, -93 = -3*z - 4*o. Suppose 7 = -3*k + z. What is the remainder when 1*((1 - -1) + 21) is divided by k? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\no, z, k = sp.symbols('o z k')\n\n# define the equations\neq1 = sp.Eq(z - 2*o - 21, 10)\neq2 = sp.Eq(-93, -3*z - 4*o)\neq3 = sp.Eq(7, -3*k + z)\n\n# solve the equations\nsolution = sp.solve((eq1,eq2,eq3), (o, z, k))\n\n# calculate the remainder\nremainder = 1*((1 - -1) + 21) % solution[k]\n\n# print the remainder\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "281.8",
    "gt": "281.8",
    "err": false,
    "question": "Let h be 17 - (-11 - -16)*-53. Which is smaller: h or 1409/5? Let's write a program.",
    "output": "h = 17 - (-11 - -16)*-53\nh = 17 - 27*-53\nh = 17 + 1389\nh = 1566\n\nh_smaller = 1409/5 if h > 1409/5 else h\nprint(h_smaller)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 11, in run_it\nNameError: name 't' is not defined\n",
    "gt": "6",
    "err": true,
    "question": "Suppose -j + n + 9 = 0, 4*j - 2*n = -8 + 34. Let t = j - 1. Suppose t*i - 14 - 25 = 0. What is the remainder when i is divided by 7? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj, n, i = sp.symbols('j n i')\n\n# define the equations\neq1 = sp.Eq(-j + n + 9, 0)\neq2 = sp.Eq(4*j - 2*n, -8 + 34)\neq3 = sp.Eq(j - 1, i)\neq4 = sp.Eq(t*i - 14 - 25, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2,eq3,eq4), (j, n, i, t))\n\n# calculate the remainder when i is divided by 7\nremainder = solution[i] % 7\n\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "37",
    "gt": "37",
    "err": false,
    "question": "Solve 98*r = 4065 - 439 for r. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nr = sp.symbols('r')\n\n# define the equation\neq = sp.Eq(98*r, 4065 - 439)\n\n# solve the equation\nsolution = sp.solve(eq, r)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 17, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "2",
    "err": true,
    "question": "Suppose -4*g + 26 = -6. Suppose -4*p + 4*m + g = 0, 0 = -4*p + 2*m + 5 + 5. Suppose -2*y - 24 = -p*y. What is the tens digit of y? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ng, p, m, y = sp.symbols('g p m y')\n\n# define the equations\neq1 = sp.Eq(-4*g + 26, -6)\neq2 = sp.Eq(-4*p + 4*m + g, 0)\neq3 = sp.Eq(-4*p + 2*m + 5 + 5, 0)\neq4 = sp.Eq(-2*y - 24, -p*y)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2,eq3,eq4), (g, p, m, y))\n\n# calculate the tens digit of y\ntens_digit = solution[y] / 10 % 10\n\nprint(tens_digit)",
    "correct": false
  },
  {
    "ans": "320",
    "gt": "320.0",
    "err": false,
    "question": "Calculate -108160 divided by -338. Let's write a program.",
    "output": "print(-108160 / -338)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 6:0: if r > 1/2:\n",
    "gt": "0.0",
    "err": true,
    "question": "Let i = 0.11 - 0.31. Let j = i + 0.2. Let r = 2279/9 + -253. Which is the third biggest value?  (a) r  (b) j  (c) 1/2 Let's write a program.",
    "output": "i = 0.11 - 0.31\nj = i + 0.2\nr = 2279/9 + -253\n\nif r > j:\nif r > 1/2:\nprint(a)\nelse:\nprint(c)\nelse:\nif r > 1/2:\nprint(a)\nelse:\nprint(c)",
    "correct": false
  },
  {
    "ans": "38",
    "gt": "38",
    "err": false,
    "question": "What is the greatest common divisor of 76 and 15922? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 76\nnum2 = 15922\n\n# calculate the greatest common divisor\ngcd = math.gcd(num1, num2)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "540",
    "gt": "540",
    "err": false,
    "question": "Calculate the remainder when 80904 is divided by 26788. Let's write a program.",
    "output": "remainder = 80904 % 26788\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-6",
    "gt": "-3",
    "err": false,
    "question": "Solve -2*c - 51*i = c + 252 + 63, -5*c - 5*i - 45 = 0 for c. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nc, i = sp.symbols('c i')\n\n# define the equations\neq1 = sp.Eq(-2*c - 51*i, c + 252 + 63)\neq2 = sp.Eq(-5*c - 5*i - 45, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2), (c, i))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 19, in <module>\n  File \"<string>\", line 8, in run_it\nTypeError: unsupported operand type(s) for -: 'str' and 'int'\n",
    "gt": "19",
    "err": true,
    "question": "Suppose 5*m + 5 = h - 80, 2*m - 4 = 0. Calculate the highest common factor of 38 and h. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nm = sp.symbols('m')\n\n# define the equations\neq1 = sp.Eq(5*m + 5, 'h' - 80)\neq2 = sp.Eq(2*m - 4, 0)\n\n# solve the equations\nsolution = sp.solve((eq1,eq2), (m, 'h'))\n\n# calculate the highest common factor of 38 and h\nh_value = solution['h']\nhcf = sp.hcf(38, h_value)\n\nprint(hcf)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "-0.5",
    "err": false,
    "question": "Let q = 0.622 - 1.622. Which is the nearest to 0.1?  (a) -0.5  (b) 3  (c) q  (d) -4 Let's write a program.",
    "output": "q = 0.622 - 1.622\n\nnearest_to_0_point_one = abs(0.1 - q)\n\nif q > 0:\n    print(q)\nelse:\n    print(-q)",
    "correct": false
  },
  {
    "ans": "22",
    "gt": "22",
    "err": false,
    "question": "Calculate the remainder when 613 is divided by 197. Let's write a program.",
    "output": "remainder = 613 % 197\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 14, in <module>\n  File \"<string>\", line 8, in run_it\nAttributeError: 'tuple' object has no attribute 'values'\n",
    "gt": "10",
    "err": true,
    "question": "Suppose -4*i = -3*i - 3. Suppose i*m = 2*c - 63, 0 = -5*c + m - 5*m + 146. Calculate the greatest common factor of c and 20. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ni, m, c = sp.symbols('i m c')\n\n# solve the equations\nsolution = sp.solve((-4*i + 3*i + 3, 0 + 5*c - m - 5*m + 146).values(), (i, m, c))\n\n# calculate the greatest common factor of c and 20\ngcf = sp.gcd(solution[c], 20)\n\nprint(gcf)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 11, in run_it\nAttributeError: module 'math' has no attribute 'argmin'\n",
    "gt": "-0.05",
    "err": true,
    "question": "What is the nearest to -0.02065 in -0.05, 1/44, -0.5, 3/4? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [-0.05, 1/44, -0.5, 3/4]\n\n# calculate the minimum distance to -0.02065\nmin_distance = min(abs(number - -0.02065) for number in numbers)\n\n# print the number that has the minimum distance\nprint(numbers[math.argmin(abs(number - -0.02065) for number in numbers)])",
    "correct": false
  },
  {
    "ans": "3",
    "gt": "[2, 3]",
    "err": false,
    "question": "Let j = 54 - 0. List the prime factors of j. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nj = 54 - 0\n\n# factorize the number\nfactors = sp.factorint(j)\n\n# print the prime factors\nprint(factors.keys())",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 25, in <module>\n  File \"<string>\", line 16, in run_it\nNameError: name 'm' is not defined\n",
    "gt": "[73]",
    "err": true,
    "question": "Let c(b) = -6*b**2 + b + 96. Let p(o) = o**2 - 19. Let a(w) = -2*c(w) - 11*p(w). Let f be a(-16). Suppose f + 206 = 7*m. What are the prime factors of m? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nb, o, w = sp.symbols('b o w')\n\n# define the functions\nc = -6*b**2 + b + 96\np = o**2 - 19\na = -2*c - 11*p\n\n# calculate f\nf = a.subs(o, -16)\n\n# calculate the equation f + 206 = 7*m\nm_eq = sp.Eq(f + 206, 7*m)\n\n# solve the equation for m\nm_sol = sp.solve(m_eq, m)\n\n# print the prime factors of m\nfor sol in m_sol:\n    m_factors = sp.factorint(sol)\n    print(m_factors)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 19, in <module>\n  File \"<string>\", line 18, in run_it\nTypeError: list indices must be integers or slices, not tuple\n",
    "gt": "-2",
    "err": true,
    "question": "Suppose -2*s + 5*s = f + 5, -4 = -4*s + 4*f. Solve 0 = -s*w - l - 9 + 1, 3*l = 4*w - 4 for w. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ns, f, w, l = sp.symbols('s f w l')\n\n# define the equations\neq1 = sp.Eq(-2*s + 5*s, f + 5)\neq2 = sp.Eq(-4, -4*s + 4*f)\neq3 = sp.Eq(0, -s*w - l - 9 + 1)\neq4 = sp.Eq(3*l, 4*w - 4)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2, eq3, eq4), (s, f, w, l))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Solve 83*i - 4*d = 102, 3*d + d + 18 - 59 = i + 21 for i. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ni, d = sp.symbols('i d')\n\n# define the equations\neq1 = sp.Eq(83*i - 4*d, 102)\neq2 = sp.Eq(3*d + d + 18 - 59, i + 21)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (i, d))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Let v(m) = m + 1. Let y be v(6). Let b be 12/y + (-8)/(-28). Suppose 0 = -0*j - b*j. Let x(w) = -w**3 + w**2 - w + 2. Determine x(j). Let's write a program.",
    "output": "def v(m):\n    return m + 1\n\ny = v(6)\n\nb = (12/y) + (-8/(-28))\n\nj = 0\n\nwhile b*j != 0:\n    j += 1\n\nx = -j**3 + j**2 - j + 2\n\nprint(x)",
    "correct": true
  },
  {
    "ans": "-1",
    "gt": "-1.0",
    "err": false,
    "question": "What is -3335553 divided by 3335553? Let's write a program.",
    "output": "num = -3335553\ndivisor = 3335553\n\nresult = num / divisor\nprint(result)",
    "correct": false
  },
  {
    "ans": "28",
    "gt": "28",
    "err": false,
    "question": "Solve -93*h + 593 + 810 = -717 - 484 for h. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nh = sp.symbols('h')\n\n# define the equation\neq = sp.Eq(-93*h + 593 + 810, -717 - 484)\n\n# solve the equation\nsolution = sp.solve(eq, h)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-17",
    "gt": "-17",
    "err": false,
    "question": "What is -8 + (-8 - (-16 - -17))? Let's write a program.",
    "output": "print(-8 + (-8 - (-16 - -17)))",
    "correct": true
  },
  {
    "ans": "-100",
    "gt": "-100",
    "err": false,
    "question": "Solve -284*r + 560*r - 241*r - 176*r = 14100 for r. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nr = sp.symbols('r')\n\n# define the equation\nequation = sp.Eq(-284*r + 560*r - 241*r - 176*r, 14100)\n\n# solve the equation\nsolution = sp.solve(equation, r)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Let d = -6 - 10. What is the units digit of 55 + d - (0 - 4)? Let's write a program.",
    "output": "d = -6 - 10\n# calculate the units digit\nunits_digit = 55 + d - (0 - 4)\nprint(units_digit % 10)",
    "correct": true
  },
  {
    "ans": "40",
    "gt": "40",
    "err": false,
    "question": "What is the highest common divisor of 120 and 12680? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 120\nnum2 = 12680\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "-5",
    "gt": "-5",
    "err": false,
    "question": "Let n = 45269 - 45265. Suppose l - 18 = 3*o + 2*l, 0 = o - 5*l - 10. Which is the smallest value?  (a) o  (b) -0.4  (c) n  (d) 0.4 Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\no, l, n = sp.symbols('o l n')\n\n# define the equations\neq1 = sp.Eq(o - 5*l - 10, 0)\neq2 = sp.Eq(l - 18, 3*o + 2*l)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (o, l))\n\n# calculate n\nn = 45269 - 45265\n\n# find the smallest value\nsmallest_value = min(solution[o], solution[l], n)\n\n# print the result\nprint(smallest_value)",
    "correct": true
  },
  {
    "ans": "-11096",
    "gt": "-11096",
    "err": false,
    "question": "What is 4 times -2774? Let's write a program.",
    "output": "print(4*-2774)",
    "correct": true
  },
  {
    "ans": "161",
    "gt": "161",
    "err": false,
    "question": "Calculate the highest common divisor of 1449 and 3703. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 1449\nnum2 = 3703\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 14, in <module>\n  File \"<string>\", line 2, in run_it\nModuleNotFoundError: No module named 'min'\n",
    "gt": "-0.24",
    "err": true,
    "question": "What is the smallest value in -0.24, 85, 4? Let's write a program.",
    "output": "import min\n\n# define the numbers\nnum1 = -0.24\nnum2 = 85\nnum3 = 4\n\n# find the smallest number\nsmallest_num = min(num1, num2, num3)\n\n# print the smallest number\nprint(smallest_num)",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "5",
    "err": false,
    "question": "Suppose u = -2*w - 5, -5*u = 4*w + 1 - 0. Suppose -7 + 10 = u*r. Let v(z) = 15*z - 19*z + z**2 - r + 1. Calculate v(5). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw, u, r, z = sp.symbols('w u r z')\n\n# given equations\nu_eq = sp.Eq(-2*w - 5, u)\nu_eq_sol = sp.solve(u_eq, u)[0]\n\nother_eq = sp.Eq(4*w + 1, -5*u + 0)\nother_eq_sol = sp.solve(other_eq, w)[0]\n\n# calculate u\nu_sol = u_eq_sol.subs(w, other_eq_sol)\n\n# calculate r\nr_sol = u_sol + 7 - 10\n\n# calculate v(5)\nv_5 = 15*5 - 19*5 + 5**2 - r_sol + 1\nprint(v_5)",
    "correct": false
  },
  {
    "ans": "29",
    "gt": "29",
    "err": false,
    "question": "-2948 - -2956 - ((0 - -4) + -3 + -22) Let's write a program.",
    "output": "print(-2948 - -2956 - ((0 - -4) + -3 + -22))",
    "correct": true
  },
  {
    "ans": "32",
    "gt": "32",
    "err": false,
    "question": "Evaluate (-40 - 0) + 84 - 12. Let's write a program.",
    "output": "print((-40 - 0) + 84 - 12)",
    "correct": true
  },
  {
    "ans": "-0.6666666666666666",
    "gt": "-0.5",
    "err": false,
    "question": "Which is the closest to -2/3?  (a) 0.1  (b) -0.5  (c) 3  (d) -15/11  (e) 20 Let's write a program.",
    "output": "import math\n\n# define the values\nvalues = [-2/3, 0.1, -0.5, 3, -15/11, 20]\n\n# calculate the closest to -2/3\nclosest = min(values, key=lambda x:abs(x-(-2/3)))\n\n# print the result\nprint(closest)",
    "correct": false
  },
  {
    "ans": "4",
    "gt": "12",
    "err": false,
    "question": "Suppose 0 = -2*q - 3*q + 120. Calculate the highest common factor of q and 12. Let's write a program.",
    "output": "import math\n\n# define the equation\n# 0 = -2*q - 3*q + 120\n# 3q = -120\n# q = -40\nq = -40\n\n# calculate the highest common factor of q and 12\nhcf = math.gcd(q, 12)\n\nprint(hcf)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Solve w + 13*m + 25 = 0, -391*w + 2*m = -395*w for w. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw, m = sp.symbols('w m')\n\n# define the equations\neq1 = sp.Eq(w + 13*m + 25, 0)\neq2 = sp.Eq(-391*w + 2*m, -395*w)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (w, m))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": true
  },
  {
    "ans": "-19342",
    "gt": "-19342",
    "err": false,
    "question": "Which is smaller: -19342 or -19243? Let's write a program.",
    "output": "num1 = -19342\nnum2 = -19243\n\nif num1 < num2:\n    print(num1)\nelse:\n    print(num2)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 23, in <module>\n  File \"<string>\", line 20, in run_it\nAttributeError: module 'sympy' has no attribute 'hcf'\n",
    "gt": "11",
    "err": true,
    "question": "Let a(x) = -x**3 - x**2 + 3*x + 2. Let d be (-6)/2*4/6. Let q be a(d). Suppose 3*j - j - 88 = q. Calculate the highest common divisor of 11 and j. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nx = sp.symbols('x')\n\n# define the function a(x)\na = -x**3 - x**2 + 3*x + 2\n\n# calculate d\nd = (-6)/2*4/6\n\n# calculate q\nq = a.subs(x, d)\n\n# calculate j\nj = q + 88/3\n\n# calculate the highest common divisor of 11 and j\nhcf = sp.hcf(11, j)\n\nprint(hcf)",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "2.0",
    "err": false,
    "question": "Let t = 130.0148 + -0.0148. Let f = 132 - t. Which is smaller: f or 182? Let's write a program.",
    "output": "t = 130.0148 - 0.0148\nf = 132 - t\n\nif f < 182:\n    print(f)\nelse:\n    print(182)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 14, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "4",
    "err": true,
    "question": "Suppose 202 = 19*a - 64. Solve 16*q - 8 = a*q for q. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\na, q = sp.symbols('a q')\n\n# define the equation 202 = 19*a - 64\neq1 = sp.Eq(202, 19*a - 64)\n\n# solve eq1 for a\nsolution = sp.solve(eq1, a)\n\n# substitute a in the equation 16*q - 8 = a*q\neq2 = sp.Eq(16*q - 8, solution[a] * q)\n\n# solve eq2 for q\nsolution_q = sp.solve(eq2, q)\n\n# print the solution\nfor i in solution_q:\n    print(i)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "What is the remainder when 10855 is divided by 18? Let's write a program.",
    "output": "remainder = 10855 % 18\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "13",
    "err": false,
    "question": "Let j(q) = -2*q**3 - 205*q**2 - 1068*q - 6. Let s be j(-97). Suppose -2*c - 52 = -6*c. Calculate the highest common divisor of s and c. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nq = sp.symbols('q')\n\n# define the function j(q)\nj = -2*q**3 - 205*q**2 - 1068*q - 6\n\n# calculate s = j(-97)\ns = j.subs(q, -97)\n\n# calculate c = -6*q - 52\nc = -6*q - 52\n\n# find the highest common divisor of s and c\nhcd = sp.gcd(s, c)\n\n# print the result\nprint(hcd)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "1.0",
    "err": false,
    "question": "Calculate ((-16)/48)/(1/(-9)) + -2. Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = ((-16)/48)/(1/(-9)) + -2\n\n# calculate the result\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "-14",
    "gt": "-14.0",
    "err": false,
    "question": "Evaluate ((-30)/(-4))/(360/96)*-7. Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = ((-30)/(-4))/(360/96)*-7\n\n# evaluate the expression\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Let t(v) be the third derivative of -v**4/24 + 3*v**2. Let u(q) = 2*q - 2. Let k(z) = -3*t(z) - u(z). Find the first derivative of k(l) wrt l. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nv = sp.symbols('v')\n\n# define the function t(v)\nt = (-v**4/24 + 3*v**2).diff(v, 3)\n\n# define the function u(q)\nu = 2*v - 2\n\n# define the function k(z)\nk = -3*t - u\n\n# find the first derivative of k(l) wrt l\ndk_dq = k.diff(v)\n\n# print the result\nprint(dk_dq)",
    "correct": true
  },
  {
    "ans": "13",
    "gt": "13.0",
    "err": false,
    "question": "Let l(p) = -p**3 - 4*p**2 - p + 9. Let t be (-2)/((-114)/(-12) - 9). Determine l(t). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\np = sp.symbols('p')\n\n# define the function l(p)\nl = -p**3 - 4*p**2 - p + 9\n\n# calculate t\nt = (-2)/((-114)/(-12) - 9)\n\n# substitute t into l(p)\nresult = l.subs(p, t)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Let p be (-198)/12 - 1/(-2). Let z be 2/p*-2 + 2025/12. Suppose 13*d = -0*d + z. What is the units digit of d? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\np = (-198)/12 - 1/(-2)\nz = 2/p*-2 + 2025/12\nd = sp.symbols('d')\n\n# equation 13*d = -0*d + z\nequation = sp.Eq(13*d, -0*d + z)\n\n# solve the equation for d\nsolution = sp.solve(equation, d)\n\n# get the units digit of d\nunits_digit = solution[0] % 10\n\nprint(units_digit)",
    "correct": true
  },
  {
    "ans": "34",
    "gt": "34",
    "err": false,
    "question": "What is the remainder when 954 is divided by 460? Let's write a program.",
    "output": "remainder = 954 % 460\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-0.1",
    "gt": "-0.1",
    "err": false,
    "question": "Let x = -0.048 + -0.052. Which is the closest to x?  (a) -0.1  (b) 5  (c) 1.4 Let's write a program.",
    "output": "x = -0.048 - 0.052\n\nif x < -0.1:\n    print(-0.1)\nelif x > 1.4:\n    print(1.4)\nelse:\n    print(x)",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Let h(f) = 2*f**2 + 20*f + 35. What is h(-8)? Let's write a program.",
    "output": "def h(f):\n    return 2*f**2 + 20*f + 35\n\nprint(h(-8))",
    "correct": true
  },
  {
    "ans": "-3",
    "gt": "-3",
    "err": false,
    "question": "Which is the third biggest value?  (a) 1.7  (b) 149  (c) -3  (d) -18 Let's write a program.",
    "output": "a = 1.7\nb = 149\nc = -3\nd = -18\n\nthird_biggest = max(c, d)\n\nprint(third_biggest)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1.0",
    "err": false,
    "question": "Let q(c) = c + 7. Let f be (-68)/11 + 6 + (-64)/11. Determine q(f). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nc = sp.symbols('c')\n\n# define the function q(c)\nq = c + 7\n\n# calculate f\nf = (-68)/11 + 6 + (-64)/11\n\n# substitute f into q\nresult = q.subs(c, f)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "-4218",
    "gt": "-4218",
    "err": false,
    "question": "Which is bigger: -4223 or -4218? Let's write a program.",
    "output": "a = -4223\nb = -4218\n\nif a > b:\n    print(a)\nelse:\n    print(b)",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "What is the value of -3 - (-1 + (-6 - -1 - -5))? Let's write a program.",
    "output": "print(-3 - (-1 + (-6 - -1 - -5)))",
    "correct": true
  },
  {
    "ans": "0.6",
    "gt": "0.5",
    "err": false,
    "question": "What is the nearest to -0.1 in 654, 751, 1/2? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 654\nnum2 = 751\nnum3 = 1/2\n\n# calculate the nearest to -0.1\nnearest = min(abs(num1 - -0.1), abs(num2 - -0.1), abs(num3 - -0.1))\n\nprint(nearest)",
    "correct": false
  },
  {
    "ans": "30",
    "gt": "30.0",
    "err": false,
    "question": "Calculate 127161660 divided by 4238722. Let's write a program.",
    "output": "a = 127161660\nb = 4238722\n\nresult = a / b\n\nprint(result)",
    "correct": false
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "What is the hundreds digit of 13451? Let's write a program.",
    "output": "hundreds_digit = 13451 / 100 % 10\nprint(int(hundreds_digit))",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "3",
    "err": false,
    "question": "What is the hundreds digit of 2352? Let's write a program.",
    "output": "hundreds_digit = 2\nprint(hundreds_digit)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 9, in run_it\nTypeError: 'float' object cannot be interpreted as an integer\n",
    "gt": "17",
    "err": true,
    "question": "Suppose -8*j = -619 + 483. Let c = -95 - -146. Calculate the highest common factor of c and j. Let's write a program.",
    "output": "import math\n\n# define the variables\nj = (-619 + 483) / -8\nc = -95 - -146\n\n# calculate the highest common factor of c and j\nhcf = math.gcd(c, j)\n\nprint(hcf)",
    "correct": false
  },
  {
    "ans": "-13",
    "gt": "-13.0",
    "err": false,
    "question": "Evaluate (4 + -5)*8 + (-4)/(16/20). Let's write a program.",
    "output": "print((4 + -5)*8 + (-4)/(16/20))",
    "correct": false
  },
  {
    "ans": "17",
    "gt": "17",
    "err": false,
    "question": "Let i(o) = -13*o**2 + o - 4. Let c(d) = 13*d**2 - d + 5. Let h(s) = -3*c(s) - 4*i(s). Let m be h(2). What is the greatest common divisor of m and 17? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\no = sp.symbols('o')\n\n# define the functions\ni = -13*o**2 + o - 4\nc = 13*o**2 - o + 5\nh = -3*c - 4*i\n\n# calculate h(2)\nm = h.subs(o, 2)\n\n# calculate the greatest common divisor of m and 17\ngcd = sp.gcd(m, 17)\n\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "-4",
    "gt": "-4",
    "err": false,
    "question": "Let g = 79 + -83. Suppose 15 = -0*j - 3*j + 5*s, 0 = -3*s. Which is the closest to j?  (a) 5  (b) g  (c) -1/3 Let's write a program.",
    "output": "g = 79 + -83\ns = 15/3\nj = -s\n\nprint(min(5, g, -1/3))",
    "correct": true
  },
  {
    "ans": "8",
    "gt": "8",
    "err": false,
    "question": "Solve -3 - 21 = -3*q for q. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nq = sp.symbols('q')\n\n# define the equation\nequation = sp.Eq(-3 - 21, -3*q)\n\n# solve the equation\nsolution = sp.solve(equation, q)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "47",
    "gt": "47",
    "err": false,
    "question": "What is 4 minus -43? Let's write a program.",
    "output": "print(4 - -43)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "-2",
    "err": false,
    "question": "Solve 0 = -h - 4*q + 6, 30*h - 18 = 33*h - 6*q for h. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nh, q = sp.symbols('h q')\n\n# define the equations\neq1 = sp.Eq(0, -h - 4*q + 6)\neq2 = sp.Eq(30*h - 18, 33*h - 6*q)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (h, q))\n\n# print the solution\nfor var in solution:\n    print(var, solution[var])",
    "correct": false
  },
  {
    "ans": "-0.5714285714285714",
    "gt": "0.3",
    "err": false,
    "question": "Which is the closest to 0.652859?  (a) -4/7  (b) 0.3  (c) 5 Let's write a program.",
    "output": "a = -4/7\nb = 0.3\nc = 5\n\nclosest = min(a, b, c)\nprint(closest)",
    "correct": false
  },
  {
    "ans": "-288",
    "gt": "-288",
    "err": false,
    "question": "Let z(w) = -4*w**2 + 64*w + 13856. Give z(-52). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nw = sp.symbols('w')\n\n# define the function\nz = -4*w**2 + 64*w + 13856\n\n# substitute w with -52\nz_value = z.subs(w, -52)\n\nprint(z_value)",
    "correct": true
  },
  {
    "ans": "-4",
    "gt": "-4",
    "err": false,
    "question": "Solve 5*k + 8 = -2, 0 = -q - k - 6 for q. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nk = sp.symbols('k')\nq = sp.symbols('q')\n\n# define the equations\neq1 = sp.Eq(5*k + 8, -2)\neq2 = sp.Eq(0, -q - k - 6)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (k, q))\n\n# print the result\nfor variable in solution:\n    print(variable, '=', solution[variable])",
    "correct": true
  },
  {
    "ans": "29",
    "gt": "29",
    "err": false,
    "question": "What is the remainder when 27805 is divided by 31? Let's write a program.",
    "output": "remainder = 27805 % 31\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-5",
    "gt": "2",
    "err": false,
    "question": "Solve 2*c - 25 = 5*v + 4, -4*v - 10 = 5*c for c. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nc, v = sp.symbols('c v')\n\n# define the equations\neq1 = sp.Eq(2*c - 25, 5*v + 4)\neq2 = sp.Eq(-4*v - 10, 5*c)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (c, v))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": false
  },
  {
    "ans": "16",
    "gt": "16",
    "err": false,
    "question": "Solve 84205 - 81789 = 151*j for j. Let's write a program.",
    "output": "def find_j(a, b):\n    # subtract the numbers\n    difference = a - b\n    # calculate j\n    j = difference / 151\n    return j\n\nprint(find_j(84205, 81789))",
    "correct": true
  },
  {
    "ans": "",
    "gt": "-2",
    "err": true,
    "question": "Solve 6*n - 10*n - z - 12 = 0, 3*n + 3*z + 18 = 0 for n. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nn, z = sp.symbols('n z')\n\n# define the equations\neq1 = sp.Eq(6*n - 10*n - z - 12, 0)\neq2 = sp.Eq(3*n + 3*z + 18, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (n, z))\n\n# print the result\nfor i in solution:\n    print(i)",
    "correct": false
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "Let y = 1216 - 1209. What is the greatest common divisor of 553 and y? Let's write a program.",
    "output": "import math\n\n# define the numbers\ny = 1216 - 1209\nnum1 = 553\n\n# calculate the greatest common divisor\ngcd = math.gcd(num1, y)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "4",
    "err": false,
    "question": "Suppose -4*m + 0*m = 0. Suppose m = -6*n + 2*n + 32. Let d(y) = 12 - y. Let j be d(n). Solve 2*b = -4*x + j*b + 20, 0 = b + 2 for x. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nm, n, x, b = sp.symbols('m n x b')\n\n# define the equations\neq1 = sp.Eq(-4*m + 0*m, 0)\neq2 = sp.Eq(m, -6*n + 2*n + 32)\neq3 = sp.Eq(2*b, -4*x + (12 - n)*b + 20)\neq4 = sp.Eq(b, -2)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2, eq3, eq4), (m, n, x, b))\n\n# print the result\nfor i in solution:\n    print(i)",
    "correct": false
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "What is the units digit of 22084? Let's write a program.",
    "output": "def find_unit_digit(number):\n    return number % 10\n\nprint(find_unit_digit(22084))",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "What is the seventh root of 722 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Calculate the seventh root of 722\nresult = math.pow(722, 1/7)\n\n# Round to the nearest integer\nnearest_integer = round(result)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "-74",
    "gt": "-74.0",
    "err": false,
    "question": "What is (-2157840)/72900*5*(-1)/(-2)? Let's write a program.",
    "output": "print((-2157840)/72900*5*(-1)/(-2))",
    "correct": false
  },
  {
    "ans": "44",
    "gt": "12",
    "err": false,
    "question": "Let y = -7 - -23. Let c(w) = w**2 + w + 2. Let v = 1 - -5. Calculate the remainder when c(v) is divided by y. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ny = sp.symbols('y')\nw = sp.symbols('w')\nv = sp.symbols('v')\n\n# define the functions\nc = w**2 + w + 2\nv_val = 1 - -5\n\n# calculate the remainder\nremainder = c.subs(w, v_val) % y\n\n# print the remainder\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "11",
    "gt": "11",
    "err": false,
    "question": "Solve 0 = 28473*n - 28519*n + 506 for n. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nn = sp.symbols('n')\n\n# define the equation\nequation = sp.Eq(28473*n - 28519*n + 506, 0)\n\n# solve the equation\nsolution = sp.solve(equation, n)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "What is 87256 to the power of 1/9, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# define the number and the power\nnum = 87256\npower = 1/9\n\n# calculate the result\nresult = math.pow(num, power)\n\n# round to the nearest integer\nresult = round(result)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Solve -386*t = -385*t - 2 for t. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nt = sp.symbols('t')\n\n# define the equation\neq = sp.Eq(-386*t, -385*t - 2)\n\n# solve the equation\nsolution = sp.solve(eq, t)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "Calculate -3 + 3 + 5 - (-2 - -2). Let's write a program.",
    "output": "print(-3 + 3 + 5 - (-2 - -2))",
    "correct": true
  },
  {
    "ans": "103",
    "gt": "[103]",
    "err": false,
    "question": "Suppose -2*k + 3*b + 11 = 2, -3*k = 2*b - 20. Suppose 207 + 411 = k*a. What are the prime factors of a? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nk, b, a = sp.symbols('k b a')\n\n# define the equations\neq1 = sp.Eq(-2*k + 3*b + 11, 2)\neq2 = sp.Eq(-3*k, 2*b - 20)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (k, b))\n\n# calculate a\na = 207 + 411\n\n# factorize a\nfactors = sp.factorint(a)\n\n# print the prime factors of a\nprint(factors.keys())",
    "correct": false
  },
  {
    "ans": "-5",
    "gt": "-5",
    "err": false,
    "question": "Solve -25*j + 3*i = -20*j + 31, -5*i - 15 = 5*j for j. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ni, j = sp.symbols('i j')\n\n# define the equations\neq1 = sp.Eq(-25*j + 3*i, -20*j + 31)\neq2 = sp.Eq(-5*i - 15, 5*j)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (j, i))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": true
  },
  {
    "ans": "83",
    "gt": "-0.5",
    "err": false,
    "question": "What is the third biggest value in -2, 83, -133, 0, -0.5? Let's write a program.",
    "output": "values = [-2, 83, -133, 0, -0.5]\nthird_biggest = max(values[1:])\nprint(third_biggest)",
    "correct": false
  },
  {
    "ans": "1132",
    "gt": "1132",
    "err": false,
    "question": "What is the greatest common divisor of 1132 and 243346040? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 1132\nnum2 = 243346040\n\n# calculate the greatest common divisor\ngcd = math.gcd(num1, num2)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "What is the nearest to 3 in -274, 0.4, 31/3, 1? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [-274, 0.4, 31/3, 1]\n\n# find the nearest to 3\nnearest_to_3 = min(numbers, key=lambda x:abs(x-3))\n\nprint(nearest_to_3)",
    "correct": true
  },
  {
    "ans": "0.5",
    "gt": "0",
    "err": false,
    "question": "What is the third biggest value in 0.06, -12, 0, -2/13789, 0.5? Let's write a program.",
    "output": "big = 0.06\nbiggest = -12\nzero = 0\nsmall = -2/13789\nthird_biggest = 0.5\n\nprint(third_biggest)",
    "correct": false
  },
  {
    "ans": "442",
    "gt": "442",
    "err": false,
    "question": "Let k(w) = 12*w**2 - 973*w - 460. What is k(82)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nw = sp.symbols('w')\n\n# define the function\nk = 12*w**2 - 973*w - 460\n\n# calculate the value of k at w=82\nk_at_82 = k.subs(w, 82)\n\n# print the result\nprint(k_at_82)",
    "correct": true
  },
  {
    "ans": "-9.58",
    "gt": "-9.58",
    "err": false,
    "question": "Subtract 9.4 from -0.18. Let's write a program.",
    "output": "print(-0.18 - 9.4)",
    "correct": true
  },
  {
    "ans": "10",
    "gt": "10",
    "err": false,
    "question": "What is the remainder when 86 is divided by 19? Let's write a program.",
    "output": "remainder = 86 % 19\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "65",
    "gt": "-0.4",
    "err": false,
    "question": "What is the fourth biggest value in -0.4, 4, 65, -0.05? Let's write a program.",
    "output": "import numpy as np\n\n# define the values\nvalues = [-0.4, 4, 65, -0.05]\n\n# sort the values\nsorted_values = np.sort(values)\n\n# print the fourth biggest value\nprint(sorted_values[3])",
    "correct": false
  },
  {
    "ans": "0.2",
    "gt": "0.2",
    "err": false,
    "question": "What is the fourth smallest value in -5, 0.2, 93/5, 3, 2/7, -17, -0.07? Let's write a program.",
    "output": "import numpy as np\n\n# define the list of values\nvalues = [-5, 0.2, 93/5, 3, 2/7, -17, -0.07]\n\n# sort the list\nvalues.sort()\n\n# print the fourth smallest value\nprint(values[3])",
    "correct": true
  },
  {
    "ans": "111",
    "gt": "54.0",
    "err": false,
    "question": "Let y = -17765 - -17822. Calculate the remainder when (-1)/2 - (-223)/2 is divided by y. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ny = sp.symbols('y')\n\n# calculate the remainder\nremainder = sp.rem(sp.Rational(-1, 2) - sp.Rational(-223, 2), y)\n\n# print the result\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "8",
    "gt": "8",
    "err": false,
    "question": "Let w = 37 - 13. What is the greatest common divisor of w and 16? Let's write a program.",
    "output": "import math\n\n# define the variables\nw = 37 - 13\nnum2 = 16\n\n# calculate the greatest common divisor\ngcd = math.gcd(w, num2)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "74",
    "gt": "74",
    "err": false,
    "question": "Which is the biggest value?  (a) -3  (b) 0.5  (c) 74  (d) -4/7 Let's write a program.",
    "output": "a = -3\nb = 0.5\nc = 74\nd = -4/7\n\nbiggest_value = max(a, b, c, d)\nprint(biggest_value)",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "5",
    "err": false,
    "question": "What is the tens digit of 1350? Let's write a program.",
    "output": "number = 1350\ntens_digit = number % 10\nprint(tens_digit)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 24, in <module>\n  File \"<string>\", line 21, in run_it\nTypeError: 'Float' object is not iterable\n",
    "gt": "[7]",
    "err": true,
    "question": "Let s be 3/2*12/(-9). Let h = s + 6. Suppose 5*y - 50 = -5*k, h*k - y = y + 22. What are the prime factors of k? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ns, h, y, k = sp.symbols('s h y k')\n\n# define the equation for s\ns = 3/2 * 12/(-9)\n\n# define the equation for h\nh = s + 6\n\n# define the equations for y and k\neq1 = sp.Eq(5*y - 50, -5*k)\neq2 = sp.Eq(h*k - y, y + 22)\n\n# solve the system of equations for y and k\nsolution = sp.solve((eq1,eq2), (y, k))\n\n# print the prime factors of k\nfor k_val in solution[k]:\n    k_factors = sp.factorint(k_val)\n    print(k_factors)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "[13]",
    "err": false,
    "question": "Let a = -21 - -44. Suppose -a = -3*k + 2*b, -k = -b - 2*b - 3. Suppose -4*w + 56 = 4*u, -k = 3*w - u - 47. What are the prime factors of w? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\na, b, k, w, u = sp.symbols('a b k w u')\n\n# define the equations\neq1 = sp.Eq(a, -21 - -44)\neq2 = sp.Eq(-k, -b - 2*b - 3)\neq3 = sp.Eq(-a, -3*k + 2*b)\neq4 = sp.Eq(-4*w + 56, 4*u)\neq5 = sp.Eq(-k, 3*w - u - 47)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2, eq3, eq4, eq5), (a, b, k, w, u))\n\n# print the prime factors of w\nw_value = solution[w]\nprime_factors = sp.factorint(w_value)\nprint(prime_factors)",
    "correct": false
  },
  {
    "ans": "-3.5",
    "gt": "-3.5",
    "err": false,
    "question": "What is (18/(-108))/(4/84)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpression = (18/(-108))/(4/84)\n\n# simplify the expression\nsimplified_expression = sp.simplify(expression)\n\nprint(simplified_expression)",
    "correct": true
  },
  {
    "ans": "10434",
    "gt": "10434",
    "err": false,
    "question": "What is the square root of 108859292 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the square root of 108859292\nsqrt = math.sqrt(108859292)\n\n# round to the nearest integer\nnearest_integer = round(sqrt)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "7.5",
    "gt": "7.5",
    "err": false,
    "question": "What is the value of (3 - -2) + ((-6)/(-16))/(39/260)? Let's write a program.",
    "output": "print((3 - -2) + ((-6)/(-16))/(39/260))",
    "correct": true
  },
  {
    "ans": "9",
    "gt": "9",
    "err": false,
    "question": "Evaluate (-15 - 0) + 32 + -8. Let's write a program.",
    "output": "print((-15 - 0) + 32 + -8)",
    "correct": true
  },
  {
    "ans": "-10",
    "gt": "-10",
    "err": false,
    "question": "Evaluate 11 - ((38 - 28) + 20 + -9). Let's write a program.",
    "output": "print(11 - ((38 - 28) + 20 + -9))",
    "correct": true
  },
  {
    "ans": "-7",
    "gt": "-7",
    "err": false,
    "question": "Solve 154*i + 582 - 257 + 753 = 0 for i. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ni = sp.symbols('i')\n\n# define the equation\nequation = sp.Eq(154*i + 582 - 257 + 753, 0)\n\n# solve the equation\nsolution = sp.solve(equation, i)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "0.25",
    "gt": "0.25",
    "err": false,
    "question": "Let s be 207*-3*(-1)/12. Let j = 52 - s. Which is bigger: -1 or j? Let's write a program.",
    "output": "s = (207*-3*(-1)/12)\nj = 52 - s\n\nif j > -1:\n  print(j)\nelse:\n  print(-1)",
    "correct": true
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "What is the hundreds digit of 11723? Let's write a program.",
    "output": "hundreds_digit = 11723 / 100 % 10\nprint(int(hundreds_digit))",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "-5",
    "err": false,
    "question": "Let n = 1.8903 + -4.8903. What is the fifth biggest value in -5, -0.044, 5, 2, n? Let's write a program.",
    "output": "n = 1.8903 - 4.8903\n\nvalues = [-5, -0.044, 5, 2, n]\n\nfifth_biggest = max(values)\n\nprint(fifth_biggest)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 6, in <module>\n  File \"<string>\", line 5, in run_it\n  File \"<string>\", line 3, in find_digit\nIndexError: string index out of range\n",
    "gt": "1",
    "err": true,
    "question": "What is the ten thousands digit of 14015354? Let's write a program.",
    "output": "def find_digit(number, position):\n    return int(str(number)[-position])\n\nprint(find_digit(14015354, 10000))",
    "correct": false
  },
  {
    "ans": "-72",
    "gt": "-72",
    "err": false,
    "question": "Let s = -183 - -116. Let p = s - -508. Find the third derivative of -441*i + p*i - 12*i**3 - 6*i**2 wrt i. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ni = sp.symbols('i')\n\n# define s and p\ns = -183 - -116\np = s - -508\n\n# define the function\nf = -441*i + p*i - 12*i**3 - 6*i**2\n\n# find the third derivative\nthird_derivative = sp.diff(f, i, 3)\n\n# print the result\nprint(third_derivative)",
    "correct": true
  },
  {
    "ans": "122",
    "gt": "122",
    "err": false,
    "question": "Calculate the greatest common divisor of 344984768 and 854. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 344984768\nnum2 = 854\n\n# calculate the greatest common divisor\ngcd = math.gcd(num1, num2)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "54",
    "gt": "1",
    "err": false,
    "question": "Let s = -35 - -89. Let j = s + -29. Solve i - 2*i + 21 = -4*m, 5*i - j = 4*m for i. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ns, j, m, i = sp.symbols('s j m i')\n\n# define the equations\neq1 = sp.Eq(s, -35 + 89)\neq2 = sp.Eq(j, s + 29)\neq3 = sp.Eq(i, 2*m + 21)\neq4 = sp.Eq(5*i, 4*m + j)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2,eq3,eq4), (s, j, m, i))\n\n# print the result\nfor key, value in solution.items():\n    print(key, '=', value)",
    "correct": false
  },
  {
    "ans": "-6",
    "gt": "-6",
    "err": false,
    "question": "(8 + 1 - 13) + -2 Let's write a program.",
    "output": "print((8 + 1 - 13) + -2)",
    "correct": true
  },
  {
    "ans": "-13",
    "gt": "-13.0",
    "err": false,
    "question": "What is the value of 2 + -14 + 40/(13 + -5) + (-8 - -2)? Let's write a program.",
    "output": "print(2 + -14 + 40/(13 + -5) + (-8 - -2))",
    "correct": false
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "What is the units digit of 118324? Let's write a program.",
    "output": "def find_unit_digit(number):\n    return number % 10\n\nprint(find_unit_digit(118324))",
    "correct": true
  },
  {
    "ans": "0.75",
    "gt": "0.75",
    "err": false,
    "question": "Evaluate (-6)/(-5)*(-210)/(-336). Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (-6)/(-5) * (-210)/(-336)\n\n# simplify and evaluate the expression\nresult = sp.simplify(expr)\n\nprint(result)",
    "correct": true
  },
  {
    "ans": "4/3",
    "gt": "-4",
    "err": false,
    "question": "Let c(w) = w + 2. Let q be c(1). Suppose o - 9 = -q*l, -2*o = -3*l + l - 10. Let f be (-2 + 1)/(o/(-18)). Solve f*b - j + 4 = 3*j, 2*j + 12 = -2*b for b. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw, l, o, b, j = sp.symbols('w l o b j')\n\n# define the functions\nc = lambda w: w + 2\nq = c(1)\n\n# define the equations\neq1 = sp.Eq(-2*o, -3*l + l - 10)\neq2 = sp.Eq(o - 9, -q*l)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (o, l))\n\n# calculate f\nf = (-2 + 1) / (solution[o] / -18)\n\n# solve for b\nsolution_b = sp.solve(f*b - j + 4 - 3*j, b)\n\n# print the result\nprint(solution_b[0])",
    "correct": false
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "Solve -80 = y - 5*i - 60, 7*y = 2*i + 25 for y. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ny, i = sp.symbols('y i')\n\n# define the equations\neq1 = sp.Eq(-80, y - 5*i - 60)\neq2 = sp.Eq(7*y, 2*i + 25)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (y, i))\n\n# print the result\nprint(solution[y])",
    "correct": true
  },
  {
    "ans": "-0.6666666666666666",
    "gt": "-30",
    "err": false,
    "question": "What is the fourth biggest value in -2/3, -30, -8/7, -10.26? Let's write a program.",
    "output": "import numpy as np\n\n# define the values\nvalues = [-2/3, -30, -8/7, -10.26]\n\n# sort the values\nsorted_values = sorted(values)\n\n# get the fourth biggest value\nfourth_biggest = sorted_values[3]\n\nprint(fourth_biggest)",
    "correct": false
  },
  {
    "ans": "16",
    "gt": "16",
    "err": false,
    "question": "What is the cube root of 4328 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate cube root\ncube_root = math.pow(4328, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(cube_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "Let s(z) = 2*z**3 - 45*z**2 + 29*z - 154. Determine s(22). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nz = sp.symbols('z')\n\n# define the function\ns = 2*z**3 - 45*z**2 + 29*z - 154\n\n# calculate the value of s at z=22\nresult = s.subs(z, 22)\n\nprint(result)",
    "correct": true
  },
  {
    "ans": "1.02",
    "gt": "1.02",
    "err": false,
    "question": "Which is the biggest value?  (a) -1/432  (b) 1.02  (c) 1  (d) -32/69 Let's write a program.",
    "output": "a = -1/432\nb = 1.02\nc = 1\nd = -32/69\n\nbiggest_value = max(a, b, c, d)\nprint(biggest_value)",
    "correct": true
  },
  {
    "ans": "-53",
    "gt": "-53",
    "err": false,
    "question": "Solve 35017 - 111549 = 1444*y for y. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ny = sp.symbols('y')\n\n# define the equation\nequation = sp.Eq(35017 - 111549, 1444*y)\n\n# solve the equation\nsolution = sp.solve(equation, y)\n\n# print the result\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "Which is the closest to -15/4?  (a) -0.1  (b) 0.2  (c) 0.3  (d) -2  (e) -1/7 Let's write a program.",
    "output": "import math\n\n# define the values\nvalues = [-0.1, 0.2, 0.3, -2, -1/7]\n\n# find the closest to -15/4\nclosest = min(values, key=lambda x:abs(x+15/4))\n\n# print the result\nprint(closest)",
    "correct": true
  },
  {
    "ans": "-34",
    "gt": "-34",
    "err": false,
    "question": "What is 10 + (-4 + 6 - (-3 - -6) - 43)? Let's write a program.",
    "output": "print(10 + (-4 + 6 - (-3 - -6) - 43))",
    "correct": true
  },
  {
    "ans": "-0.4",
    "gt": "-0.4",
    "err": false,
    "question": "Let j = -863 + 954. Let k be (-7 - j/(-14))*136. What is the closest to k in 4, -0.4, 0.1? Let's write a program.",
    "output": "j = -863 + 954\nk = (-7 - j/(-14))*136\n\nvalues = [4, -0.4, 0.1]\n\nclosest = min(values, key=lambda x:abs(x-k))\n\nprint(closest)",
    "correct": true
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "Let t(n) = n**2 - 2*n - 11. What is the remainder when t(-6) is divided by 10? Let's write a program.",
    "output": "import sympy as sp\n\n# define the function\nn = sp.symbols('n')\nt = n**2 - 2*n - 11\n\n# calculate the remainder\nremainder = t.subs(n, -6) % 10\n\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "0",
    "err": false,
    "question": "What is the tens digit of 136292805? Let's write a program.",
    "output": "tens_digit = 136292805 % 10\nprint(tens_digit)",
    "correct": false
  },
  {
    "ans": "53",
    "gt": "53",
    "err": false,
    "question": "Solve 0 = -733*a - 9666 + 48515 for a. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\na = sp.symbols('a')\n\n# define the equation\neq = sp.Eq(0, -733*a - 9666 + 48515)\n\n# solve the equation\nsolution = sp.solve(eq, a)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Let w = 889 + -596. What is the hundreds digit of w? Let's write a program.",
    "output": "w = 889 + -596\nhundreds_digit = w // 100 % 10\nprint(hundreds_digit)",
    "correct": true
  },
  {
    "ans": "-3",
    "gt": "1",
    "err": false,
    "question": "Let c = 6554 + -2439. Suppose -3963 = -7*w + c. What is the thousands digit of w? Let's write a program.",
    "output": "c = 6554 - 2439\nd = -3963\nw = (d + 7*c) / -7\nw = w / 1000\nthousands_digit = int(w)\nprint(thousands_digit)",
    "correct": false
  },
  {
    "ans": "-4",
    "gt": "-4",
    "err": false,
    "question": "Solve -236 = 5*k + k - 15*f + 54*f + 61, 1 = -2*k + f for k. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nk, f = sp.symbols('k f')\n\n# define the equations\neq1 = sp.Eq(-236, 5*k + k - 15*f + 54*f + 61)\neq2 = sp.Eq(1, -2*k + f)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2), (k, f))\n\n# print the result\nprint(solution[k])",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "What is the ten thousands digit of (16 - 3680/16)/(1/(-47))? Let's write a program.",
    "output": "import math\n\n# define the expression\nexpression = (16 - 3680/16) / (1/(-47))\n\n# calculate the ten thousands digit\nten_thousands_digit = math.floor(expression / 10000)\n\n# print the result\nprint(ten_thousands_digit)",
    "correct": true
  },
  {
    "ans": "-6",
    "gt": "-6",
    "err": false,
    "question": "Solve -v - 21 = -5*r, v + 4*r + 5258 = 5264 for v. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nr, v = sp.symbols('r v')\n\n# define the equations\neq1 = sp.Eq(-v - 21, -5*r)\neq2 = sp.Eq(v + 4*r + 5258, 5264)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2), (r, v))\n\n# print the result\nfor variable, value in solution.items():\n    print(f'{variable} = {value}')",
    "correct": true
  },
  {
    "ans": "11",
    "gt": "11",
    "err": false,
    "question": "What is 9 - (9 + -5 - 0) - -6? Let's write a program.",
    "output": "print(9 - (9 + -5 - 0) - -6)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 9:0: if a > c:\n",
    "gt": "31",
    "err": true,
    "question": "Which is the biggest value?  (a) -5  (b) -2/35  (c) -0.04  (d) 5  (e) 4  (f) 31 Let's write a program.",
    "output": "a = -5\nb = -2/35\nc = -0.04\nd = 5\ne = 4\nf = 31\n\nif a > b:\nif a > c:\nif a > d:\nif a > e:\nif a > f:\nprint(a)\nelse:\nprint(b)\nelse:\nprint(c)\nelse:\nprint(d)\nelse:\nprint(e)\nelse:\nprint(f)",
    "correct": false
  },
  {
    "ans": "5",
    "gt": "-2 3 5",
    "err": false,
    "question": "Let i = -37 - -40. Put 5, i, -2 in increasing order. Let's write a program.",
    "output": "import numpy as np\n\n# define the variable\ni = -37 - -40\n\n# create a list of the numbers\nnumbers = [5, i, -2]\n\n# sort the list\nnumbers.sort()\n\n# print the result\nprint(numbers)",
    "correct": false
  },
  {
    "ans": "-25",
    "gt": "-25",
    "err": false,
    "question": "Let f(g) = g**2 + 25*g + 111. Determine f(-8). Let's write a program.",
    "output": "def f(g):\n    return g**2 + 25*g + 111\n\nprint(f(-8))",
    "correct": true
  },
  {
    "ans": "38",
    "gt": "38",
    "err": false,
    "question": "What is 56724 to the power of 1/3, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the cube root of 56724\ncube_root = math.pow(56724, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(cube_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "Solve 2*x = 28*l - 23*l - 9, l - 9 = 4*x for x. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nx, l = sp.symbols('x l')\n\n# define the equations\neq1 = sp.Eq(2*x, 28*l - 23*l - 9)\neq2 = sp.Eq(l - 9, 4*x)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (x, l))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "Let n(j) = -1 - 22*j**3 + 6*j**2 + 21*j**3 - 4*j - j. Let z be n(5). What is the units digit of 2 - 0 - (-4 - z)? Let's write a program.",
    "output": "def n(j):\n    return -1 - 22*j**3 + 6*j**2 + 21*j**3 - 4*j - j\n\nz = n(5)\nunits_digit = 2 - 0 - (-4 - z)\nprint(units_digit)",
    "correct": true
  },
  {
    "ans": "-3",
    "gt": "-3",
    "err": false,
    "question": "Let o = -127/188 + 5/564. Let u be (4 - 3)*(1 + -1). Suppose 2*j = -u*j. Which is the closest to -6?  (a) -3  (b) o  (c) j Let's write a program.",
    "output": "import math\n\n# define o\no = -127/188 + 5/564\n\n# define u\nu = (4 - 3) * (1 + -1)\n\n# define j\nj = u * o\n\n# calculate the closest to -6\nclosest = min(-3, o, j)\n\nprint(closest)",
    "correct": true
  },
  {
    "ans": "-0.25",
    "gt": "-0.25",
    "err": false,
    "question": "What is the value of (128/256)/(((-4)/5)/(30/75))? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (128/256)/(((-4)/5)/(30/75))\n\n# calculate the value\nvalue = sp.simplify(expr)\n\n# print the result\nprint(value)",
    "correct": true
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "What is the biggest value in 0.2069, -0.1, 4? Let's write a program.",
    "output": "biggest_value = max(0.2069, -0.1, 4)\nprint(biggest_value)",
    "correct": true
  },
  {
    "ans": "42",
    "gt": "42",
    "err": false,
    "question": "Suppose -3*j + 134 = -2*r, 0 = 4*j - 0*r + 3*r - 156. What is the highest common divisor of 168 and j? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj, r = sp.symbols('j r')\n\n# define the equations\neq1 = sp.Eq(-3*j + 134, -2*r)\neq2 = sp.Eq(4*j - 0*r + 3*r - 156, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (j, r))\n\n# calculate the highest common divisor of 168 and j\nhcd = sp.gcd(168, solution[j])\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "-39",
    "gt": "-39.0",
    "err": false,
    "question": "What is 8/20*31/((-248)/780)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = 8/20 * 31/((-248)/780)\n\n# calculate the result\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "3",
    "err": false,
    "question": "What is the tens digit of ((-6606)/15)/(14/(-1225))? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = ((-6606)/15)/(14/(-1225))\n\n# simplify the expression\nsimplified_expr = sp.simplify(expr)\n\n# convert the simplified expression to string\nstr_expr = str(simplified_expr)\n\n# get the tens digit\ntens_digit = str_expr[-2]\n\nprint(tens_digit)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 23, in <module>\n  File \"<string>\", line 14, in run_it\nNameError: name 'y' is not defined\n",
    "gt": "10",
    "err": true,
    "question": "Let k(w) = -2*w**3 + 3*w**2 - 4*w + 22. Let p be k(3). Let u(y) = y**3 + 15*y**2 - 40*y - 72. Let o be u(p). What is the greatest common divisor of 190 and o? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nw = sp.symbols('w')\n\n# define the function k(w)\nk = -2*w**3 + 3*w**2 - 4*w + 22\n\n# calculate p\np = k.subs(w, 3)\n\n# define the function u(y)\nu = y**3 + 15*y**2 - 40*y - 72\n\n# calculate o\no = u.subs(y, p)\n\n# calculate the greatest common divisor of 190 and o\ngcd = sp.gcd(190, o)\n\nprint(gcd)",
    "correct": false
  },
  {
    "ans": "-150",
    "gt": "-150*y",
    "err": false,
    "question": "Let i(x) be the third derivative of -5*x**6/24 + 35*x**4/24 + 8*x**2. What is the second derivative of i(y) wrt y? Let's write a program.",
    "output": "import sympy as sp\n\n# Define the variable\nx = sp.symbols('x')\n\n# Define the function\ni = -5*x**6/24 + 35*x**4/24 + 8*x**2\n\n# Find the third derivative\nthird_derivative = sp.diff(i, x, 3)\n\n# Simplify the third derivative\nsimplified_third_derivative = sp.simplify(third_derivative)\n\n# Define the variable for the second derivative\ny = sp.symbols('y')\n\n# Substitute x with y in the simplified third derivative\nsecond_derivative = sp.diff(simplified_third_derivative.subs(x, y), y, 2)\n\n# Simplify the second derivative\nsimplified_second_derivative = sp.simplify(second_derivative)\n\n# Print the simplified second derivative\nprint(simplified_second_derivative)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 6, in <module>\n  File \"<string>\", line 5, in run_it\n  File \"<string>\", line 3, in find_digit\nIndexError: string index out of range\n",
    "gt": "6",
    "err": true,
    "question": "What is the ten thousands digit of 2465212? Let's write a program.",
    "output": "def find_digit(number, position):\n    return int(str(number)[-position])\n\nprint(find_digit(2465212, 10000))",
    "correct": false
  },
  {
    "ans": "23",
    "gt": "23",
    "err": false,
    "question": "What is the greatest common divisor of 736 and 391? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 736\nnum2 = 391\n\n# calculate the greatest common divisor\ngcd = math.gcd(num1, num2)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 18, in <module>\n  File \"<string>\", line 14, in run_it\nUnboundLocalError: cannot access local variable 't' where it is not associated with a value\n",
    "gt": "5",
    "err": true,
    "question": "Let q(b) = -b**3 + 2*b**2 + 7*b - 2. Let h be q(3). Solve -t + 3*t = h for t. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nb = sp.symbols('b')\n\n# define the function q(b)\nq = -b**3 + 2*b**2 + 7*b - 2\n\n# calculate h\nh = q.subs(b, 3)\n\n# solve the equation -t + 3*t = h for t\nt = sp.solve(-t + 3*t - h, t)\n\n# print the result\nprint(t)",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "7",
    "err": false,
    "question": "Let s = 15552 + -8381. What is the thousands digit of s? Let's write a program.",
    "output": "s = 15552 - 8381\nthousands_digit = s / 10000\nprint(int(thousands_digit))",
    "correct": false
  },
  {
    "ans": "7",
    "gt": "0",
    "err": false,
    "question": "Which is the fourth biggest value?  (a) -2  (b) 5/7  (c) 1  (d) 7  (e) 0 Let's write a program.",
    "output": "value_list = [-2, 5/7, 1, 7, 0]\r\n\r\nfourth_biggest_value = max(value_list[1:])\r\n\r\nprint(fourth_biggest_value)",
    "correct": false
  },
  {
    "ans": "85",
    "gt": "1",
    "err": false,
    "question": "Let v be 344/10 - (-2)/(-5). Suppose 0*u - v = -5*u + 4*l, 3*u + l = 17. Let c(m) = 6 - m. Let i be c(u). Solve 0 = 5*w - 5 - i for w. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nu, l, v, w = sp.symbols('u l v w')\n\n# define the equations\neq1 = sp.Eq(0*u - v, -5*u + 4*l)\neq2 = sp.Eq(3*u + l, 17)\n\n# solve the system of equations for u and l\nsolution = sp.solve((eq1,eq2), (u, l))\n\n# calculate v\nv_value = 344/10 - (-2)/(-5)\n\n# calculate i\ni_value = 6 - solution[u]\n\n# solve for w\nw_value = sp.solve(sp.Eq(5*w - 5 - i_value, 0), w)[0]\n\n# print the result\nprint(w_value)",
    "correct": false
  },
  {
    "ans": "88",
    "gt": "88",
    "err": false,
    "question": "Solve 0 = -55*k + 4022 - 1809 + 2627 for k. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nk = sp.symbols('k')\n\n# define the equation\nequation = sp.Eq(0, -55*k + 4022 - 1809 + 2627)\n\n# solve the equation\nsolution = sp.solve(equation, k)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "11",
    "gt": "11.0",
    "err": false,
    "question": "What is the value of -11*((-3)/12)/((84/(-16))/(-21))? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = -11*((-3)/12)/((84/(-16))/(-21))\n\n# calculate the value\nvalue = sp.simplify(expr)\n\n# print the result\nprint(value)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/utilities/misc.py\", line 555, in as_int\n    return operator.index(n)\n           ^^^^^^^^^^^^^^^^^\nTypeError: 'float' object cannot be interpreted as an integer\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 13, in <module>\n  File \"<string>\", line 9, in run_it\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/ntheory/factor_.py\", line 1235, in factorint\n    n = as_int(n)\n        ^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/utilities/misc.py\", line 557, in as_int\n    raise ValueError('%s is not an integer' % (n,))\nValueError: 8.0 is not an integer\n",
    "gt": "[2]",
    "err": true,
    "question": "Let k be ((-6)/(-9))/((-4)/6). Let t = 7 - k. What are the prime factors of t? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nk = ((-6)/(-9))/((-4)/6)\nt = 7 - k\n\n# calculate the prime factors of t\nprime_factors = sp.factorint(t)\n\n# print the result\nprint(prime_factors)",
    "correct": false
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "What is the nearest to 1/5 in 1, -1, 21? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [1, -1, 21]\n\n# calculate the distance from 1/5 to each number\ndistances = [math.fabs(1/5 - number) for number in numbers]\n\n# find the minimum distance\nmin_distance = min(distances)\n\n# print the number that is closest to 1/5\nprint(numbers[distances.index(min_distance)])",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "6 4 0",
    "err": false,
    "question": "Let h = 20 - 16. Put 0, 6, h in decreasing order. Let's write a program.",
    "output": "h = 20 - 16\nnumbers = [0, 6, h]\nnumbers.sort(reverse=True)\nprint(numbers)",
    "correct": false
  },
  {
    "ans": "54",
    "gt": "12",
    "err": false,
    "question": "Let k(u) = -3*u - 10. Let y(n) = 4*n**2 - 7*n + 3. Calculate the remainder when y(5) is divided by k(-8). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nu, n = sp.symbols('u n')\n\n# define the functions k(u) and y(n)\nk = -3*u - 10\ny = 4*n**2 - 7*n + 3\n\n# calculate y(5)\ny_5 = y.subs(n, 5)\n\n# calculate k(-8)\nk_minus_8 = k.subs(u, -8)\n\n# calculate the remainder\nremainder = y_5 - k_minus_8\n\n# print the remainder\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "",
    "gt": "1148",
    "err": true,
    "question": "Which is the fifth smallest value?  (a) 24  (b) -5  (c) -1  (d) 1148  (e) 9 Let's write a program.",
    "output": "values = [24, -5, -1, 1148, 9]\r\n# values.sort()\r\n# print(values[4])",
    "correct": false
  },
  {
    "ans": "0.2",
    "gt": "0.3",
    "err": false,
    "question": "Which is the closest to 1?  (a) -0.3  (b) -2738/9  (c) 1/5  (d) 3/10 Let's write a program.",
    "output": "import math\n\n# define the values\na = -0.3\nb = -2738/9\nc = 1/5\nd = 3/10\n\n# calculate the closest to 1\nclosest_to_1 = min(math.fabs(a), math.fabs(b), math.fabs(c), math.fabs(d))\n\nprint(closest_to_1)",
    "correct": false
  },
  {
    "ans": "114",
    "gt": "114",
    "err": false,
    "question": "Calculate the highest common divisor of 572964 and 1710. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 572964\nnum2 = 1710\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "53",
    "gt": "[53]",
    "err": false,
    "question": "Let n(w) be the first derivative of 15/2*w**2 - 1/3*w**3 + 6 - w. What are the prime factors of n(6)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nw = sp.symbols('w')\n\n# define the function\nn = 15/2*w**2 - 1/3*w**3 + 6 - w\n\n# calculate the derivative of the function\nn_prime = sp.diff(n, w)\n\n# substitute w = 6 into the derivative\nn_prime_at_6 = n_prime.subs(w, 6)\n\n# factorize the result\nfactors = sp.factor(n_prime_at_6)\n\n# print the prime factors\nprint(factors.as_ordered_factors())",
    "correct": false
  },
  {
    "ans": "600",
    "gt": "600",
    "err": false,
    "question": "What is the remainder when 177585 is divided by 621? Let's write a program.",
    "output": "remainder = 177585 % 621\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-24",
    "err": false,
    "question": "Solve -3*h = 2*f + 54, -f - 126 = 137*h + 26 + 146 for f. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nh, f = sp.symbols('h f')\n\n# define the equations\neq1 = sp.Eq(-3*h, 2*f + 54)\neq2 = sp.Eq(-f - 126, 137*h + 26 + 146)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (h, f))\n\n# print the result\nfor var, value in solution.items():\n    print(var, '=', value)",
    "correct": false
  },
  {
    "ans": "6.2045",
    "gt": "6.2045",
    "err": false,
    "question": "Calculate -12.409*-0.5. Let's write a program.",
    "output": "print(-12.409*-0.5)",
    "correct": true
  },
  {
    "ans": "6",
    "gt": "6",
    "err": false,
    "question": "Solve -27*t = 28*t + 11*t + 151 - 547 for t. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nt = sp.symbols('t')\n\n# define the equation\nequation = sp.Eq(-27*t, 28*t + 11*t + 151 - 547)\n\n# solve the equation\nsolution = sp.solve(equation, t)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "397",
    "gt": "397",
    "err": false,
    "question": "What is 62751540 to the power of 1/3, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# define the number\nnum = 62751540\n\n# calculate the cube root\ncube_root = math.pow(num, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(cube_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 6, in <module>\n  File \"<string>\", line 3, in run_it\nZeroDivisionError: division by zero\n",
    "gt": "1",
    "err": true,
    "question": "Let c = 36 - 36. Suppose 2*i = -c*i + 1954. Suppose 6*y + 323 = i. What is the hundreds digit of y? Let's write a program.",
    "output": "c = 36 - 36\ni = 1954 / -c + 1\ny = (i - 323) / 6\nprint(y)",
    "correct": false
  },
  {
    "ans": "7",
    "gt": "3",
    "err": false,
    "question": "What is the tens digit of 637? Let's write a program.",
    "output": "tens_digit = 637 % 10\nprint(tens_digit)",
    "correct": false
  },
  {
    "ans": "-30",
    "gt": "-30",
    "err": false,
    "question": "Evaluate -4 + 9 + -30 + 4 + 11 + -20. Let's write a program.",
    "output": "print(-4 + 9 + -30 + 4 + 11 + -20)",
    "correct": true
  },
  {
    "ans": "23",
    "gt": "23",
    "err": false,
    "question": "Let h(y) = 91*y**2 - 2*y - 1. Let u be h(-1). Calculate the highest common divisor of 253 and u. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ny = sp.symbols('y')\n\n# define the function h(y)\nh = 91*y**2 - 2*y - 1\n\n# calculate u = h(-1)\nu = h.subs(y, -1)\n\n# calculate the highest common divisor of 253 and u\nresult = sp.gcd(253, u)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "Let b(z) = 122*z - 6947. Determine b(57). Let's write a program.",
    "output": "def b(z):\n    return 122*z - 6947\n\nprint(b(57))",
    "correct": true
  },
  {
    "ans": "0.3",
    "gt": "0.3",
    "err": false,
    "question": "What is the closest to -1/4 in 3, -1, -6, 0.3? Let's write a program.",
    "output": "import numpy as np\n\n# define the numbers\nnumbers = [3, -1, -6, 0.3]\n\n# calculate the closest to -1/4\nclosest = min(numbers, key=lambda x: abs(x-(-1/4)))\n\n# print the result\nprint(closest)",
    "correct": true
  },
  {
    "ans": "-8",
    "gt": "-8.0",
    "err": false,
    "question": "What is 4/((-8)/(-6))*((-5312)/24)/83? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = 4/((-8)/(-6))*((-5312)/24)/83\n\n# calculate the result\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "4",
    "gt": "4.0",
    "err": false,
    "question": "Divide 12948 by 3237. Let's write a program.",
    "output": "divided = 12948 / 3237\nprint(divided)",
    "correct": false
  },
  {
    "ans": "9",
    "gt": "9",
    "err": false,
    "question": "Solve 8*b = -8650 + 8722 for b. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nb = sp.symbols('b')\n\n# define the equation\neq = sp.Eq(8*b, -8650 + 8722)\n\n# solve the equation\nsolution = sp.solve(eq, b)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 18, in run_it\nAttributeError: 'list' object has no attribute 'items'\n",
    "gt": "-5",
    "err": true,
    "question": "Let j = -17 - -20. Suppose -j*u + 4 = f + 1, 0 = 2*u + 4*f - 12. Suppose u = -0*h - 5*h + 75. Solve c + h = -2*c for c. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj, u, f, h, c = sp.symbols('j u f h c')\n\n# define the equations\neq1 = sp.Eq(j, -17 - -20)\neq2 = sp.Eq(-j*u + 4, f + 1)\neq3 = sp.Eq(2*u + 4*f - 12, 0)\neq4 = sp.Eq(u, -0*h - 5*h + 75)\neq5 = sp.Eq(c + h, -2*c)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2, eq3, eq4, eq5), (j, u, f, h, c))\n\n# print the result\nfor key, value in solution.items():\n    print(key, value)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 17, in run_it\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/core/basic.py\", line 991, in subs\n    sequence = [(sympify_old(s1), sympify_new(s2)) for s1, s2 in sequence]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/core/basic.py\", line 991, in <listcomp>\n    sequence = [(sympify_old(s1), sympify_new(s2)) for s1, s2 in sequence]\n                                                       ^^^^^^\nValueError: too many values to unpack (expected 2)\n",
    "gt": "-7",
    "err": true,
    "question": "Let n = -96 - -100. Suppose -t - n*y = -3*y + 56, 3*y - 210 = 4*t. Let g be t/(-4)*11/((-99)/(-6)). What is the smallest value in -5, g, -7? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nn, t, y, g = sp.symbols('n t y g')\n\n# define the equations\neq1 = sp.Eq(n, -96 - -100)\neq2 = sp.Eq(-t - n*y, -3*y + 56)\neq3 = sp.Eq(3*y - 210, 4*t)\n\n# solve the equations\nsolution = sp.solve((eq1,eq2,eq3), (n, t, y))\n\n# calculate g\ng = t/(-4) * 11/((-99)/(-6))\ng = g.subs(solution)\n\n# find the smallest number in -5, g, -7\nsmallest_number = min(-5, g, -7)\nprint(smallest_number)",
    "correct": false
  },
  {
    "ans": "70",
    "gt": "0.2",
    "err": false,
    "question": "Which is the fourth biggest value?  (a) 0.2  (b) 70  (c) 4  (d) 0  (e) 4/9 Let's write a program.",
    "output": "a = 0.2\nb = 70\nc = 4\nd = 0\ne = 4/9\n\nfourth_biggest = max(d, e, c, a, b)\n\nprint(fourth_biggest)",
    "correct": false
  },
  {
    "ans": "6",
    "gt": "6",
    "err": false,
    "question": "Calculate the remainder when 246 is divided by 12. Let's write a program.",
    "output": "remainder = 246 % 12\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "40",
    "gt": "40",
    "err": false,
    "question": "Calculate the remainder when 267196 is divided by 41. Let's write a program.",
    "output": "remainder = 267196 % 41\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "117",
    "gt": "117",
    "err": false,
    "question": "Calculate the highest common factor of 56511 and 144846. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 56511\nnum2 = 144846\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "Let p = -16 - -32. What is the units digit of (p*-3)/(-3) - 1? Let's write a program.",
    "output": "def find_units_digit():\n    p = -16 - -32\n    result = (p*-3)/(-3) - 1\n    return result % 10\n\nprint(find_units_digit())",
    "correct": true
  },
  {
    "ans": "14",
    "gt": "13.0",
    "err": false,
    "question": "Let w be (-1)/(((-3)/9)/(-1)). What is the remainder when 28 - (0/w)/1 is divided by 15? Let's write a program.",
    "output": "remainder = 28 - (0/(-1)/((-3)/9)/-1)\nremainder = 28 - (0/1/((-3)/9)/-1)\nremainder = 28 - (0/1/((-3)/9))\nremainder = 28 - (0/3)\nremainder = 28 - 0\nremainder = 28\nremainder = 28 / 15\nremainder = 14\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "1.8",
    "gt": "1.8",
    "err": false,
    "question": "Which is the nearest to -0.046?  (a) 9/5  (b) 75  (c) 2 Let's write a program.",
    "output": "a = 9/5\nb = 75\nc = 2\n\nabs_a = abs(a)\nabs_b = abs(b)\nabs_c = abs(c)\n\nnearest = min(abs_a, abs_b, abs_c)\n\nprint(nearest)",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "0",
    "err": false,
    "question": "Suppose 0 = 2*x - 3 + 1. Calculate the remainder when x is divided by 1. Let's write a program.",
    "output": "x = 0\nremainder = 2*x - 3 + 1\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "35",
    "gt": "35",
    "err": false,
    "question": "Let t(r) = -2*r**2 - 52*r - 301. Calculate t(-14). Let's write a program.",
    "output": "def t(r):\n    return -2*r**2 - 52*r - 301\n\nprint(t(-14))",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "Let l = 0.4 + 0.1. Let r be 1/(2/(-4))*1. What is the closest to r in -2, 3, l? Let's write a program.",
    "output": "l = 0.4 + 0.1\nr = 1/(2/(-4))*1\nvalues = [-2, 3, l]\n\nclosest = min(values)\nprint(closest)",
    "correct": true
  },
  {
    "ans": "-3",
    "gt": "-3",
    "err": false,
    "question": "Let i = -7630 - -7635. Solve 5*v = 2*h - i, v + 26 = -3*h + 8 for v. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nh, v = sp.symbols('h v')\n\n# define the equations\neq1 = sp.Eq(5*v, 2*h - (-7630 - -7635))\neq2 = sp.Eq(v + 26, -3*h + 8)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (v, h))\n\n# print the result\nprint(solution[v])",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 25, in <module>\n  File \"<string>\", line 14, in run_it\nNameError: name 'd' is not defined\n",
    "gt": "5 3 -2",
    "err": true,
    "question": "Let f(y) = y**3 - 9*y**2 - 9*y - 9. Let v be f(10). Let h(d) = 4*d**2 + 1. Let c be h(v). Put 3, c, -2 in decreasing order. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ny = sp.symbols('y')\n\n# define the function f(y)\nf = y**3 - 9*y**2 - 9*y - 9\n\n# calculate v\nv = f.subs(y, 10)\n\n# define the function h(d)\nh = 4*d**2 + 1\n\n# calculate c\nc = h.subs(d, v)\n\n# sort 3, c, -2 in decreasing order\nnumbers = [3, c, -2]\nnumbers.sort(reverse=True)\n\n# print the result\nprint(numbers)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 18, in <module>\n  File \"<string>\", line 14, in run_it\nIndexError: list index out of range\n",
    "gt": "23",
    "err": true,
    "question": "Let p = -6589 - -6620. Calculate the remainder when 364 is divided by p. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\np = sp.symbols('p')\n\n# define the expression for p\np_expr = sp.Eq(-6589, -6620)\n\n# solve the expression for p\np_sol = sp.solve(p_expr, p)\n\n# calculate the remainder when 364 is divided by p\nremainder = sp.rem(364, p_sol[0])\n\n# print the remainder\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "69",
    "gt": "69",
    "err": false,
    "question": "Calculate the highest common divisor of 138 and 8211. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 138\nnum2 = 8211\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "10",
    "gt": "10",
    "err": false,
    "question": "Let h = 1817 - 427. What is the highest common factor of 60 and h? Let's write a program.",
    "output": "import math\n\n# calculate h\nh = 1817 - 427\n\n# calculate the highest common factor of 60 and h\nhighest_common_factor = math.gcd(60, h)\n\nprint(highest_common_factor)",
    "correct": true
  },
  {
    "ans": "142",
    "gt": "6",
    "err": false,
    "question": "Suppose 0 = 2*a + 2*a + 32. Let s(b) = 26*b - 26. Let f(l) = 17 - 17*l. Let g(o) = a*f(o) - 5*s(o). What is the first derivative of g(c) wrt c? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\na, c = sp.symbols('a c')\n\n# define the functions\ns = 26*c - 26\nf = 17 - 17*c\ng = a*f - 5*s\n\n# solve the equation for a\nsolution = sp.solve(0*a + 2*a + 32, a)\n\n# substitute the solution for a in g\ng = g.subs(a, solution[0])\n\n# calculate the first derivative of g wrt c\ndg_dc = sp.diff(g, c)\n\n# print the result\nprint(dg_dc)",
    "correct": false
  },
  {
    "ans": "6",
    "gt": "6",
    "err": false,
    "question": "Let x(k) be the first derivative of -k**4/4 + 10*k**3/3 + 25*k**2/2 + 7*k - 3. What is the tens digit of x(11)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nk = sp.symbols('k')\n\n# define the function\nx = -k**4/4 + 10*k**3/3 + 25*k**2/2 + 7*k - 3\n\n# calculate the derivative\nx_prime = sp.diff(x, k)\n\n# substitute k = 11\nx_prime_at_11 = x_prime.subs(k, 11)\n\n# convert the result to string\nx_prime_at_11_str = str(x_prime_at_11)\n\n# get the tens digit\ntens_digit = x_prime_at_11_str[-2]\n\n# print the tens digit\nprint(tens_digit)",
    "correct": true
  },
  {
    "ans": "-1",
    "gt": "1",
    "err": false,
    "question": "Let y be ((-3)/1)/(3/(-494)). Suppose y = -2*f - 11*f. What is the hundreds digit of (-6 + 2)*(f - -3)? Let's write a program.",
    "output": "import sympy as sp\n\n# Define the variable\nf = sp.symbols('f')\n\n# Suppose y = -2*f - 11*f\ny = -2*f - 11*f\n\n# ((-3)/1)/(3/(-494)) can be written as (-3)*(-494)/(1*3) = 1482/3\n# Let's substitute y = 1482/3 in the equation\nf_value = sp.solve(y + 1482/3, f)\n\n# Calculate the hundreds digit of (-6 + 2)*(f - -3)\nhundreds_digit = (-6 + 2)*(f_value[0] - -3)\n\n# Print the hundreds digit\nprint(int(hundreds_digit/100))",
    "correct": false
  },
  {
    "ans": "5",
    "gt": "5.0",
    "err": false,
    "question": "What is the remainder when 85/3 - (-16)/24 is divided by 8? Let's write a program.",
    "output": "remainder = (85/3 - (-16)/24) % 8\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "-1.25",
    "gt": "-1.25",
    "err": false,
    "question": "What is the value of ((-30)/32*-1)/((-330)/440)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpression = ((-30)/32*-1)/((-330)/440)\n\n# calculate the value\nvalue = sp.simplify(expression)\n\n# print the result\nprint(value)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 28, in <module>\n  File \"<string>\", line 21, in run_it\nAttributeError: 'float' object has no attribute 'evalf'\n",
    "gt": "4",
    "err": true,
    "question": "Let l be 1/(-12)*3 + (-21)/(-4). Suppose -5*c + 36 = 4*j, c + 3*c - 4*j = 0. Which is smaller: l or c? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nl, c, j = sp.symbols('l c j')\n\n# define the equation for l\nl = (1/(-12))*3 + (-21)/(-4)\n\n# define the equations for c and j\neq1 = sp.Eq(-5*c + 36, 4*j)\neq2 = sp.Eq(c + 3*c - 4*j, 0)\n\n# solve the system of equations for c and j\nsolution = sp.solve((eq1,eq2), (c, j))\n\n# get the value of c\nc_value = solution[c]\n\n# get the value of l\nl_value = l.evalf()\n\n# check which is smaller, l or c\nif l_value < c_value:\n    print(l)\nelse:\n    print(c)",
    "correct": false
  },
  {
    "ans": "-6",
    "gt": "-6",
    "err": false,
    "question": "Suppose -10*o + 20 = -5*o. Let q be o*-1*(-30)/(-20). Which is bigger: -7 or q? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\no = sp.symbols('o')\n\n# define the equation\neq = sp.Eq(-10*o + 20, -5*o)\n\n# solve the equation for o\nsolution = sp.solve(eq, o)\n\n# calculate q\nq = solution[0]*-1*(-30)/(-20)\n\n# compare -7 and q\nif q > -7:\n    print(q)\nelse:\n    print(-7)",
    "correct": true
  },
  {
    "ans": "40",
    "gt": "40.0",
    "err": false,
    "question": "What is the value of (-31500)/225*(-6)/(-63)*-1*(-18)/(-6)? Let's write a program.",
    "output": "print((-31500)/225*(-6)/(-63)*-1*(-18)/(-6))",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "3",
    "err": false,
    "question": "Let j = 56 + -112. Let f = j - -56. Suppose 2*n + 15 = -3*b + 2*b, f = 4*n - 4*b. Let m(d) = -d - 2. Give m(n). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj = 56 + -112\nf = j - -56\nn, b = sp.symbols('n b')\n\n# solve the system of equations\nsp.solve([2*n + 15 - 3*b + 2*b, f - 4*n + 4*b], (n, b))\n\n# calculate m(n)\nm_n = -n - 2\nprint(m_n)",
    "correct": false
  },
  {
    "ans": "88",
    "gt": "88",
    "err": false,
    "question": "Let m(w) = 5*w**2 - 72264*w - 289048. Calculate m(-4). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nw = sp.symbols('w')\n\n# define the function\nm = 5*w**2 - 72264*w - 289048\n\n# substitute w with -4\nresult = m.subs(w, -4)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "14",
    "gt": "14",
    "err": false,
    "question": "Let v(u) = -27*u**3 + 16*u**2 + 27*u - 2. Let f be v(-2). What is the greatest common divisor of 14 and f? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nu = sp.symbols('u')\n\n# define the function v(u)\nv = -27*u**3 + 16*u**2 + 27*u - 2\n\n# calculate f\nf = v.subs(u, -2)\n\n# calculate the greatest common divisor of 14 and f\ngcd = sp.gcd(14, f)\n\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "-7",
    "gt": "-7",
    "err": false,
    "question": "Let q(m) be the second derivative of m**5/20 - m**4/4 - m**3/3 + m**2/2 + 23*m + 1. Suppose 6*d - 2*d = 8. Give q(d). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nm = sp.symbols('m')\n\n# define the function q(m)\nq = sp.diff(m**5/20 - m**4/4 - m**3/3 + m**2/2 + 23*m + 1, m, 2)\n\n# substitute d for m in the function\nq_d = q.subs(m, 2)\n\n# print the result\nprint(q_d)",
    "correct": true
  },
  {
    "ans": "",
    "gt": "-5",
    "err": true,
    "question": "Let z(j) = j**3 - 2*j**2 - 20*j - 21. Let b be z(6). Solve b*l = -p - 18, 4*l + 11 = -4*p - 21 for l. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj, l, p = sp.symbols('j l p')\n\n# define the function z(j)\nz = j**3 - 2*j**2 - 20*j - 21\n\n# calculate b\nb = z.subs(j, 6)\n\n# define the equations\neq1 = sp.Eq(b*l, -p - 18)\neq2 = sp.Eq(4*l + 11, -4*p - 21)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (l, p))\n\n# print the result\nfor i in solution:\n    print(i)",
    "correct": false
  },
  {
    "ans": "36",
    "gt": "36",
    "err": false,
    "question": "Calculate 11 + (10 - (-8 - (-3 - (3 - 7 - 6)))). Let's write a program.",
    "output": "print(11 + (10 - (-8 - (-3 - (3 - 7 - 6)))))",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Solve 0 = 8*w + 4*u - 176, -16*u + 12*u + 168 = 73*w - 69*w for w. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw, u = sp.symbols('w u')\n\n# define the equations\neq1 = sp.Eq(0, 8*w + 4*u - 176)\neq2 = sp.Eq(-16*u + 12*u + 168, 73*w - 69*w)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (w, u))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": true
  },
  {
    "ans": "52",
    "gt": "52",
    "err": false,
    "question": "Solve 133*b - 6904 + 1135 = 1147 for b. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nb = sp.symbols('b')\n\n# define the equation\neq = sp.Eq(133*b - 6904 + 1135, 1147)\n\n# solve the equation\nsolution = sp.solve(eq, b)\n\n# print the result\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "315",
    "gt": "315",
    "err": false,
    "question": "What is the remainder when 1292157 is divided by 423? Let's write a program.",
    "output": "remainder = 1292157 % 423\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "49",
    "gt": "49",
    "err": false,
    "question": "What is the remainder when 8158 is divided by 51? Let's write a program.",
    "output": "remainder = 8158 % 51\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "38",
    "gt": "38",
    "err": false,
    "question": "Let w(c) = 4*c**2 - c + 7. What is the remainder when 238 is divided by w(3)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the function\nc = sp.symbols('c')\nw = 4*c**2 - c + 7\n\n# calculate w(3)\nw_3 = w.subs(c, 3)\n\n# calculate the remainder\nremainder = 238 % w_3\n\n# print the result\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "17",
    "gt": "17",
    "err": false,
    "question": "Let a(i) = 7*i**2 + 4*i + 2. What is the remainder when a(-3) is divided by 18? Let's write a program.",
    "output": "def a(i):\n    return 7*i**2 + 4*i + 2\n\nremainder = a(-3) % 18\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "-4 1 2",
    "err": false,
    "question": "Let w = 3 - 1. Let z = -106 - -102. Sort 1, z, w in increasing order. Let's write a program.",
    "output": "w = 3 - 1\r\nz = -106 - -102\r\nnumbers = [1, z, w]\r\nnumbers.sort()\r\nprint(numbers)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 5:0: if r > 4:\n",
    "gt": "4 3 -1",
    "err": true,
    "question": "Let r = -5 - -4. Let l = 3 + 0. Sort r, 4, l in decreasing order. Let's write a program.",
    "output": "r = -5 - -4\nl = 3 + 0\n\nif r > l:\nif r > 4:\nprint(r)\nelse:\nprint(4)\nelse:\nif l > 4:\nprint(l)\nelse:\nprint(4)",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Suppose 3*n + 3*y - 2*y = 512, 2*n - 4*y = 332. Let p = n + -165. Calculate the remainder when 47 is divided by p. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nn, y = sp.symbols('n y')\n\n# define the equations\neq1 = sp.Eq(3*n + 3*y - 2*y, 512)\neq2 = sp.Eq(2*n - 4*y, 332)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (n, y))\n\n# calculate p\np = solution[n] - 165\n\n# calculate the remainder when 47 is divided by p\nremainder = 47 % p\n\n# print the remainder\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "1",
    "err": false,
    "question": "Let v = 158 + -54. Let m = v + -58. Suppose -32 = -2*i - 4*h, 0*i - 4*i + m = -h. What is the tens digit of i? Let's write a program.",
    "output": "v = 158 - 54\nm = v - 58\n\n# solve the equations\nh = (32 + 4*m) / 2\ni = (m + h) / 4\n\n# get the tens digit of i\ntens_digit = i // 10 % 10\n\nprint(tens_digit)",
    "correct": false
  },
  {
    "ans": "143",
    "gt": "143",
    "err": false,
    "question": "Calculate the highest common factor of 715 and 2653079. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 715\nnum2 = 2653079\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/utilities/misc.py\", line 555, in as_int\n    return operator.index(n)\n           ^^^^^^^^^^^^^^^^^\nTypeError: 'Float' object cannot be interpreted as an integer\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 27, in <module>\n  File \"<string>\", line 23, in run_it\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/ntheory/factor_.py\", line 1235, in factorint\n    n = as_int(n)\n        ^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/utilities/misc.py\", line 557, in as_int\n    raise ValueError('%s is not an integer' % (n,))\nValueError: 16.0000000000000 is not an integer\n",
    "gt": "[2]",
    "err": true,
    "question": "Let r(u) = -u**2 - 6*u - 4. Let j be (-4)/6*(-18)/(-4). Let z be r(j). List the prime factors of ((-30)/z)/((-3)/8). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nu = sp.symbols('u')\n\n# define the function r(u)\nr = -u**2 - 6*u - 4\n\n# calculate j\nj = (-4)/6 * (-18)/(-4)\n\n# calculate z\nz = r.subs(u, j)\n\n# calculate the expression ((-30)/z)/((-3)/8)\nexpr = ((-30)/z)/((-3)/8)\n\n# simplify the expression\nsimplified_expr = sp.simplify(expr)\n\n# get the prime factors of the simplified expression\nprime_factors = sp.factorint(simplified_expr)\n\n# print the prime factors\nprint(prime_factors)",
    "correct": false
  },
  {
    "ans": "1158",
    "gt": "1158.0",
    "err": false,
    "question": "Calculate -38214 divided by -33. Let's write a program.",
    "output": "print(-38214 / -33)",
    "correct": false
  },
  {
    "ans": "-30",
    "gt": "-30",
    "err": false,
    "question": "Let j(v) = -2*v**2 - 2735*v + 162363. Give j(57). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nv = sp.symbols('v')\n\n# define the function\nj = -2*v**2 - 2735*v + 162363\n\n# calculate the value of j(57)\nresult = j.subs(v, 57)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "76",
    "gt": "76",
    "err": false,
    "question": "What is the greatest common divisor of 61864 and 684? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 61864\nnum2 = 684\n\n# calculate the greatest common divisor\ngcd = math.gcd(num1, num2)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "-284",
    "gt": "-284",
    "err": false,
    "question": "Let d(z) = -2*z**3 + 54*z**2 + 44*z + 52. Calculate d(28). Let's write a program.",
    "output": "def d(z):\n    return -2*z**3 + 54*z**2 + 44*z + 52\n\nprint(d(28))",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Let l = -2411 + 2419. Solve l*f + 56 = 80 for f. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nl, f = sp.symbols('l f')\n\n# define l\nl = -2411 + 2419\n\n# define the equation\neq = sp.Eq(l*f + 56, 80)\n\n# solve the equation for f\nsolution = sp.solve(eq, f)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-0.5",
    "gt": "-0.5",
    "err": false,
    "question": "Let u(n) = -n**3 + 7*n**2 - 7*n + 4. Let k be u(6). Let t be -2*k*2/28. Which is the closest to t?  (a) -3/4  (b) -1/2  (c) -1 Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nn = sp.symbols('n')\n\n# define the function u(n)\nu = -n**3 + 7*n**2 - 7*n + 4\n\n# calculate k\nk = u.subs(n, 6)\n\n# calculate t\nt = (-2*k*2)/28\n\n# define the options\noptions = [-3/4, -1/2, -1]\n\n# find the closest to t\nclosest = min(options, key=lambda x:abs(x-t))\n\n# print the result\nprint(closest)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "-0.4",
    "err": false,
    "question": "Which is the third biggest value?  (a) -2/5  (b) 21584/11  (c) 2 Let's write a program.",
    "output": "values = [-2/5, 21584/11, 2]\n# To sort the values in ascending order\nvalues.sort()\n# The third biggest value is the second element in the sorted list\nthird_biggest = values[1]\nprint(third_biggest)",
    "correct": false
  },
  {
    "ans": "22",
    "gt": "22.0",
    "err": false,
    "question": "Calculate the remainder when 100 is divided by 2 - (4 + 1) - (-435)/15. Let's write a program.",
    "output": "remainder = 100 % (2 - (4 + 1) - (-435)/15)\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "Calculate -67 + 67 - (-3 - (0 + -5)). Let's write a program.",
    "output": "print(-67 + 67 - (-3 - (0 + -5)))",
    "correct": true
  },
  {
    "ans": "451",
    "gt": "451",
    "err": false,
    "question": "What is the remainder when 2701487 is divided by 1636? Let's write a program.",
    "output": "remainder = 2701487 % 1636\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "16",
    "gt": "16",
    "err": false,
    "question": "Solve -21014*n + 21057*n - 688 = 0 for n. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nn = sp.symbols('n')\n\n# define the equation\nequation = sp.Eq(-21014*n + 21057*n - 688, 0)\n\n# solve the equation\nsolution = sp.solve(equation, n)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-8",
    "gt": "-8",
    "err": false,
    "question": "What is the value of -16 - (-15 - (6 + -7 - 6))? Let's write a program.",
    "output": "print(-16 - (-15 - (6 + -7 - 6)))",
    "correct": true
  },
  {
    "ans": "-13/2",
    "gt": "-6",
    "err": false,
    "question": "Suppose -24*d - 4*q = -25*d + 57, d = -5*q + 3. Solve -d*s = -46*s - 78 for s. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nd, q, s = sp.symbols('d q s')\n\n# define the equations\neq1 = sp.Eq(-24*d - 4*q, -25*d + 57)\neq2 = sp.Eq(d, -5*q + 3)\n\n# solve the system of equations for d and q\nsolution = sp.solve((eq1,eq2), (d, q))\n\n# substitute the solutions of d and q into the equation for s\ns_eq = sp.Eq(s, -d*s + 46*s + 78)\ns_solution = sp.solve(s_eq.subs(solution), s)\n\n# print the solution for s\nprint(s_solution)",
    "correct": false
  },
  {
    "ans": "-6",
    "gt": "-6",
    "err": false,
    "question": "-5 + -7 + (-1 - -7) Let's write a program.",
    "output": "print(-5 + -7 + (-1 - -7))",
    "correct": true
  },
  {
    "ans": "-4",
    "gt": "-4",
    "err": false,
    "question": "Let c(b) = -16457*b - 164574. What is c(-10)? Let's write a program.",
    "output": "def c(b):\n    return -16457*b - 164574\n\nprint(c(-10))",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Suppose 4*o + 178 = 2*i, 0*o = -3*i - 5*o + 223. Calculate the highest common factor of 6 and i. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\no, i = sp.symbols('o i')\n\n# define the equations\neq1 = sp.Eq(4*o + 178, 2*i)\neq2 = sp.Eq(0*o, -3*i - 5*o + 223)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (o, i))\n\n# calculate the highest common factor of 6 and i\nhcf = sp.gcd(6, solution[i])\n\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "-0.4",
    "gt": "0",
    "err": false,
    "question": "What is the third smallest value in -1/6, 0, 13.1, -0.4, 752? Let's write a program.",
    "output": "values = [-1/6, 0, 13.1, -0.4, 752]\nthird_smallest = min(values[2:])\nprint(third_smallest)",
    "correct": false
  },
  {
    "ans": "0.2857142857142857",
    "gt": "-3.0",
    "err": false,
    "question": "Let o = 0.0001999 - 3.0001999. Suppose 3*h - 7*h = 4*z, 0 = 3*z - 4*h + 28. Let w be (0 - -3)/((-6)/z). What is the fourth biggest value in 0, w, 2/7, o? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\no = 0.0001999 - 3.0001999\nh, z = sp.symbols('h z')\n\n# solve the system of equations\nsolution = sp.solve((3*h - 7*h - 4*z, 3*z - 4*h - 28), (h, z))\n\n# calculate w\nw = (0 - -3) / ((-6) / solution[z])\n\n# calculate the fourth biggest value\nvalues = [0, w, 2/7, o]\nfourth_biggest = max(values[1:])\n\nprint(fourth_biggest)",
    "correct": false
  },
  {
    "ans": "-3.8",
    "gt": "0.28",
    "err": false,
    "question": "Which is the closest to 0.14?  (a) 0.28  (b) -3.8  (c) -2  (d) -3  (e) 7 Let's write a program.",
    "output": "a = 0.28\nb = -3.8\nc = -2\nd = -3\ne = 7\n\nclosest = 0.14\n\nif a < closest:\n    print(0.28)\nelif b < closest:\n    print(-3.8)\nelif c < closest:\n    print(-2)\nelif d < closest:\n    print(-3)\nelse:\n    print(7)",
    "correct": false
  },
  {
    "ans": "7",
    "gt": "7.0",
    "err": false,
    "question": "Let f = -2 - -20. Let u be (-4)/10*(-3 + f). What is the remainder when (u - -5)/((-2)/50) is divided by 9? Let's write a program.",
    "output": "f = -2 - -20\nu = (-4)/10*(-3 + f)\nremainder = (u - -5)/((-2)/50) % 9\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "Suppose 4*j = -q - 12, 43 - 34 = q - 3*j. Solve 9*o + o = q for o. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj, q, o = sp.symbols('j q o')\n\n# define the equations\neq1 = sp.Eq(4*j, -q - 12)\neq2 = sp.Eq(43 - 34, q - 3*j)\n\n# solve the system of equations for j and q\nsolution = sp.solve((eq1,eq2), (j, q))\n\n# substitute the solution back into the equation for o\no_solution = sp.solve(9*o + o, o)\n\n# print the result\nprint(o_solution)",
    "correct": true
  },
  {
    "ans": "206",
    "gt": "206",
    "err": false,
    "question": "What is the remainder when 836 is divided by 210? Let's write a program.",
    "output": "remainder = 836 % 210\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-8",
    "gt": "1",
    "err": false,
    "question": "Which is the nearest to 19?  (a) -2  (b) 1  (c) 53  (d) 1/3  (e) -8 Let's write a program.",
    "output": "a = -2\nb = 1\nc = 53\nd = 1/3\ne = -8\n\nnearest = min(a, b, c, d, e)\n\nprint(nearest)",
    "correct": false
  },
  {
    "ans": "339",
    "gt": "339",
    "err": false,
    "question": "What is 115046 to the power of 1/2, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Calculate the square root of 115046\nsqrt = math.sqrt(115046)\n\n# Round to the nearest integer\nnearest_integer = round(sqrt)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "239",
    "gt": "239",
    "err": false,
    "question": "Calculate the highest common factor of 19120 and 1673. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 19120\nnum2 = 1673\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Solve -6 + 1 = -5*f for f. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nf = sp.symbols('f')\n\n# define the equation\nequation = sp.Eq(-6 + 1, -5*f)\n\n# solve the equation\nsolution = sp.solve(equation, f)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-14",
    "gt": "-1",
    "err": false,
    "question": "Let i = 22 + -14. Let p = i + -13. Let h = p + 9. Solve 2 = 2*z + h for z. Let's write a program.",
    "output": "i = 22 - 14\np = i + 13\nh = p + 9\nz = (2 - h) / 2\nprint(z)",
    "correct": false
  },
  {
    "ans": "7719",
    "gt": "8",
    "err": false,
    "question": "What is the ten thousands digit of 771982370? Let's write a program.",
    "output": "def ten_thousands_digit(n):\n    return n // 100000\n\nprint(ten_thousands_digit(771982370))",
    "correct": false
  },
  {
    "ans": "-61",
    "gt": "-61",
    "err": false,
    "question": "Let s(t) = t**2 - 30*t + 83. Calculate s(6). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nt = sp.symbols('t')\n\n# define the function\ns = t**2 - 30*t + 83\n\n# calculate the value of s at t=6\ns_6 = s.subs(t, 6)\n\nprint(s_6)",
    "correct": true
  },
  {
    "ans": "47",
    "gt": "47",
    "err": false,
    "question": "Calculate the greatest common factor of 1029958 and 15839. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 1029958\nnum2 = 15839\n\n# calculate the greatest common factor\ngcf = math.gcd(num1, num2)\n\n# print the result\nprint(gcf)",
    "correct": true
  },
  {
    "ans": "-1",
    "gt": "-2",
    "err": false,
    "question": "Let x = 2.3 + -3. Let q = 0.2 + x. Let c(m) = -m**2 - 2*m - 1. Let k be c(-2). What is the third biggest value in q, -2, k? Let's write a program.",
    "output": "x = 2.3 - 3\nq = 0.2 + x\nc = lambda m: -m**2 - 2*m - 1\nk = c(-2)\n\nvalues = [q, -2, k]\nthird_biggest = max(values[1:])\n\nprint(third_biggest)",
    "correct": false
  },
  {
    "ans": "",
    "gt": "3",
    "err": true,
    "question": "Let j(l) = 29*l - 1. Let i be j(1). Suppose -i - 8 = -2*p. Solve -3*k + 6 = 2*k + 3*t, -4*t = -2*k + p for k. Let's write a program.",
    "output": "def j(l):\n    return 29*l - 1\n\ni = j(1)\n\np = -i - 8\n\ndef solve(k, t):\n    return -3*k + 6 == 2*k + 3*t and -4*t == -2*k + p\n\nfor k in range(100):\n    for t in range(100):\n        if solve(k, t):\n            print(k)\n            break\n    if solve(k, t):\n        break",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "-1",
    "err": false,
    "question": "Suppose 3*l = -h - 8, 5*h + 2*l = 1 - 2. Let x be 1 + -11 - ((-416)/26 - -6). Solve x = -m + 2*m + h for m. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nl, h = sp.symbols('l h')\n\n# define the equations\neq1 = sp.Eq(3*l, -h - 8)\neq2 = sp.Eq(5*h + 2*l, 1 - 2)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (l, h))\n\n# calculate x\nx = 1 + -11 - ((-416)/26 - -6)\n\n# solve x = -m + 2*m + h for m\nm = sp.solve(x + h - 2*h, h)\n\n# print the result\nprint(m[0])",
    "correct": false
  },
  {
    "ans": "6",
    "gt": "-6",
    "err": false,
    "question": "Let s(u) = -u**3 + u**2 - 6. Suppose -7 = -21*b + 20*b. Suppose -4*g - 2*h = -10, 3*g - b*g = -3*h + 15. Give s(g). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nu, b, g, h = sp.symbols('u b g h')\n\n# define the function s(u)\ns = -u**3 + u**2 - 6\n\n# define the equation for b\neq_b = sp.Eq(-21*b + 20*b, -7)\n\n# define the equations for g and h\neq_g = sp.Eq(-4*g - 2*h, -10)\neq_h = sp.Eq(3*g - b*g, -3*h + 15)\n\n# solve the equation for b\nsol_b = sp.solve(eq_b, b)[0]\n\n# substitute sol_b into the equations for g and h\neq_g_sub = eq_g.subs(b, sol_b)\neq_h_sub = eq_h.subs({b: sol_b, g: eq_g_sub.lhs})\n\n# solve the equations for g and h\nsol_g = sp.solve(eq_g_sub, g)[0]\nsol_h = sp.solve(eq_h_sub, h)[0]\n\n# substitute sol_g and sol_h into s(g)\ns_val = s.subs({g: sol_g, h: sol_h})\n\nprint(s_val)",
    "correct": false
  },
  {
    "ans": "7987",
    "gt": "7987",
    "err": false,
    "question": "What is 63785106 to the power of 1/2, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Given number\nnum = 63785106\n\n# Calculate the square root\nsqrt_num = math.sqrt(num)\n\n# Round to the nearest integer\nnearest_int = round(sqrt_num)\n\nprint(nearest_int)",
    "correct": true
  },
  {
    "ans": "",
    "gt": "14",
    "err": true,
    "question": "Suppose 14293 = 96*c - 41483. What is the remainder when c is divided by 189? Let's write a program.",
    "output": "def find_c():\n    for c in range(189):\n        if (96*c - 41483) % 14293 == 0:\n            return c\n\nprint(find_c())",
    "correct": false
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "What is the units digit of 888360365? Let's write a program.",
    "output": "def find_unit_digit(number):\n    return number % 10\n\nunit_digit = find_unit_digit(888360365)\nprint(unit_digit)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "What is the highest common divisor of 1 and 53? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 1\nnum2 = 53\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "23",
    "gt": "23",
    "err": false,
    "question": "Let c(i) be the second derivative of 2*i**3/3 - i**2/2 + 2*i. Let d be c(6). Let o be (0 - -1 - 0)*115. Calculate the greatest common divisor of o and d. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ni = sp.symbols('i')\n\n# define the function\nc = 2*i**3/3 - i**2/2 + 2*i\n\n# calculate the second derivative\nc_prime = sp.diff(c, i, 2)\n\n# calculate the value of the function at i=6\nd = c_prime.subs(i, 6)\n\n# calculate the value of o\no = (0 - -1 - 0)*115\n\n# calculate the greatest common divisor of o and d\ngcd = sp.gcd(o, d)\n\n# print the result\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 19, in <module>\n  File \"<string>\", line 16, in run_it\nTypeError: 'Integer' object is not iterable\n",
    "gt": "[3]",
    "err": true,
    "question": "Let s = -10 + 14. Suppose c + s = -3*c. Let h = 4 + c. What are the prime factors of h? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ns, c, h = sp.symbols('s c h')\n\n# define the equations\neq1 = sp.Eq(s, -10 + 14)\neq2 = sp.Eq(c + s, -3*c)\neq3 = sp.Eq(h, 4 + c)\n\n# solve the equations\nsolution = sp.solve((eq1,eq2,eq3), (s, c, h))\n\n# print the prime factors of h\nfor i in solution[h]:\n    if sp.isprime(i):\n        print(i)",
    "correct": false
  },
  {
    "ans": "54",
    "gt": "4",
    "err": false,
    "question": "What is the thousands digit of 54643? Let's write a program.",
    "output": "thousands_digit = 54643 / 1000\nprint(int(thousands_digit))",
    "correct": false
  },
  {
    "ans": "-11",
    "gt": "-11",
    "err": false,
    "question": "Solve -227363*n - 5346 = -226877*n for n. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nn = sp.symbols('n')\n\n# define the equation\neq = sp.Eq(-227363*n - 5346, -226877*n)\n\n# solve the equation\nsolution = sp.solve(eq, n)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Solve 37 = -5*a + 52 for a. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\na = sp.symbols('a')\n\n# define the equation\nequation = sp.Eq(37, -5*a + 52)\n\n# solve the equation\nsolution = sp.solve(equation, a)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "859",
    "gt": "859",
    "err": false,
    "question": "Which is bigger: 859 or -1.437? Let's write a program.",
    "output": "a = 859\nb = -1.437\n\nif a > b:\n    print(859)\nelse:\n    print(-1.437)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "What is the hundred thousands digit of 113368? Let's write a program.",
    "output": "def find_hundred_thousands_digit(n):\n    return n // 100000\n\nprint(find_hundred_thousands_digit(113368))",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 24, in <module>\n  File \"<string>\", line 12, in run_it\nTypeError: 'Add' object is not callable\n",
    "gt": "25",
    "err": true,
    "question": "Let n(q) = 0 - 5 + 5*q + 0. Let k be n(6). Suppose -2458 = -273*f + 4367. What is the highest common factor of f and k? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nq = sp.symbols('q')\nf = sp.symbols('f')\n\n# define the function n(q)\nn = 0 - 5 + 5*q + 0\n\n# calculate k\nk = n(6)\n\n# define the equation\nequation = sp.Eq(-2458, -273*f + 4367)\n\n# solve the equation for f\nsolution = sp.solve(equation, f)\n\n# calculate the highest common factor of f and k\nhcf = sp.gcd(k, solution[0])\n\nprint(hcf)",
    "correct": false
  },
  {
    "ans": "151",
    "gt": "151",
    "err": false,
    "question": "What is the fourth root of 522094552 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the fourth root of 522094552\nresult = math.pow(522094552, 1/4)\n\n# round to the nearest integer\nnearest_integer = round(result)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "25",
    "gt": "25",
    "err": false,
    "question": "What is the highest common divisor of 175 and 475? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 175\nnum2 = 475\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 17, in run_it\nNameError: name 'r' is not defined\n",
    "gt": "792*r",
    "err": true,
    "question": "Let l(x) be the second derivative of 11*x**6/10 - 9*x**4/4 + 41*x. Find the third derivative of l(r) wrt r. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nx = sp.symbols('x')\n\n# define the function\nl = 11*x**6/10 - 9*x**4/4 + 41*x\n\n# calculate the second derivative\nl_2nd = sp.diff(l, x, 2)\n\n# calculate the third derivative\nl_3rd = sp.diff(l_2nd, x, 3)\n\n# substitute x with r in the third derivative\nl_3rd_r = l_3rd.subs(x, r)\n\n# print the result\nprint(l_3rd_r)",
    "correct": false
  },
  {
    "ans": "58",
    "gt": "58",
    "err": false,
    "question": "Solve -4165 + 47402 = 648*m + 402*m - 17663 for m. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nm = sp.symbols('m')\n\n# define the equation\nequation = sp.Eq(-4165 + 47402, 648*m + 402*m - 17663)\n\n# solve the equation\nsolution = sp.solve(equation, m)\n\n# print the result\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "Solve -13752*b + 13753*b - 10 = -2*h, 3*h - 2*b = 29 for h. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nb, h = sp.symbols('b h')\n\n# define the equations\neq1 = sp.Eq(-13752*b + 13753*b - 10, -2*h)\neq2 = sp.Eq(3*h - 2*b, 29)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (b, h))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": true
  },
  {
    "ans": "-1",
    "gt": "-1",
    "err": false,
    "question": "What is the closest to -1 in -17, -26, 2/11, -12, -1? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [-17, -26, 2/11, -12, -1]\n\n# calculate the closest to -1\nclosest_to_minus_1 = min(numbers, key=lambda x:abs(x+1))\n\n# print the result\nprint(closest_to_minus_1)",
    "correct": true
  },
  {
    "ans": "-3",
    "gt": "0",
    "err": false,
    "question": "Let m = 478 + -478. Let u be (-4)/20 - (-2)/5. Which is the second smallest value?  (a) -3  (b) 4  (c) m  (d) u Let's write a program.",
    "output": "m = 478 + -478\nu = (-4)/20 - (-2)/5\n\nvalues = [4, -3, m, u]\n\nprint(min(values[1:]))",
    "correct": false
  },
  {
    "ans": "457",
    "gt": "457",
    "err": false,
    "question": "Let z(c) = 3*c**2 - 1715*c + 25507. Calculate z(15). Let's write a program.",
    "output": "def z(c):\n    return 3*c**2 - 1715*c + 25507\n\nprint(z(15))",
    "correct": true
  },
  {
    "ans": "-3/2",
    "gt": "-1",
    "err": false,
    "question": "Let y = 73 + -64. Suppose 22 = -4*u + y*u + 2*r, 0 = -2*r + 2. Solve -u = 4*h - 0 for h. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ny = 73 + -64\nr, u, h = sp.symbols('r u h')\n\n# define the equations\neq1 = sp.Eq(-4*u + y*u + 2*r, 22)\neq2 = sp.Eq(-2*r + 2, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (u, r))\n\n# calculate h\nh = (4*solution[u] - 22) / 4\n\n# print the result\nprint(h)",
    "correct": false
  },
  {
    "ans": "15",
    "gt": "15",
    "err": false,
    "question": "Let u(v) = -v**3 + 10*v**2 - 7*v - 3. Let x be u(9). Calculate the highest common factor of x and 165. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nv = sp.symbols('v')\n\n# define the function u(v)\nu = -v**3 + 10*v**2 - 7*v - 3\n\n# calculate x = u(9)\nx = u.subs(v, 9)\n\n# calculate the highest common factor of x and 165\nhcf = sp.gcd(x, 165)\n\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "-0.14",
    "gt": "1.3",
    "err": false,
    "question": "What is the third smallest value in 1, 1.3, -0.14? Let's write a program.",
    "output": "values = [1, 1.3, -0.14]\nthird_smallest = min(values)\nprint(third_smallest)",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "2.0",
    "err": false,
    "question": "What is the value of (183/(-427))/((-12)/56)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpression = (183/(-427))/((-12)/56)\n\n# calculate the value\nvalue = sp.simplify(expression)\n\n# print the result\nprint(value)",
    "correct": false
  },
  {
    "ans": "245",
    "gt": "245",
    "err": false,
    "question": "Calculate the highest common factor of 1225 and 14455. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 1225\nnum2 = 14455\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "1.875",
    "gt": "1",
    "err": false,
    "question": "Which is the second biggest value?  (a) 15/8  (b) 1  (c) 0 Let's write a program.",
    "output": "a = 15/8\nb = 1\nc = 0\n\nif a > b and a > c:\n  print(a)\nelif b > c:\n  print(b)\nelse:\n  print(c)",
    "correct": false
  },
  {
    "ans": "-66",
    "gt": "-66",
    "err": false,
    "question": "Let s(r) = 2*r**3 + 5*r**2 + 2*r - 10. Calculate s(-4). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nr = sp.symbols('r')\n\n# define the function\ns = 2*r**3 + 5*r**2 + 2*r - 10\n\n# calculate the value of s at r = -4\nresult = s.subs(r, -4)\n\nprint(result)",
    "correct": true
  },
  {
    "ans": "23",
    "gt": "23",
    "err": false,
    "question": "What is the cube root of 11635 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate cube root\ncube_root = math.pow(11635, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(cube_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Solve 161 - 162 = -z for z. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nz = sp.symbols('z')\n\n# define the equation\nequation = sp.Eq(161 - 162, -z)\n\n# solve the equation\nsolution = sp.solve(equation, z)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 15, in run_it\nTypeError: cannot unpack non-iterable Symbol object\n",
    "gt": "-4",
    "err": true,
    "question": "Solve 5*z = -3*f - 47, -10*f + 14*f = 3*z + 5 for f. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nz, f = sp.symbols('z f')\n\n# define the equations\neq1 = sp.Eq(5*z, -3*f - 47)\neq2 = sp.Eq(-10*f + 14*f, 3*z + 5)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (z, f))\n\n# print the result\nfor variable, value in solution:\n    print(variable, '=', value)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 15, in run_it\nTypeError: cannot unpack non-iterable Symbol object\n",
    "gt": "-2",
    "err": true,
    "question": "Solve 3*r - 7*u + 11*u = -14, r - 2*u - 2 = 0 for r. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nr, u = sp.symbols('r u')\n\n# define the equations\neq1 = sp.Eq(3*r - 7*u + 11*u, -14)\neq2 = sp.Eq(r - 2*u - 2, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2), (r, u))\n\n# print the result\nfor variable, value in solution:\n    print(variable, '=', value)",
    "correct": false
  },
  {
    "ans": "0.6",
    "gt": "0.6",
    "err": false,
    "question": "Calculate 1*16/(1200/45). Let's write a program.",
    "output": "print(1*16/(1200/45))",
    "correct": true
  },
  {
    "ans": "-3",
    "gt": "-3.0",
    "err": false,
    "question": "-156 divided by 52 Let's write a program.",
    "output": "print(-156 / 52)",
    "correct": false
  },
  {
    "ans": "",
    "gt": "2",
    "err": true,
    "question": "Suppose -228*x + 4128 = -220*x. Let q = x - 512. Solve 0 = 3*k - g - 9, -q*k + 3*g + 17 = -0*k for k. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nx, g, k = sp.symbols('x g k')\n\n# define the equation\neq = sp.Eq(-228*x + 4128, -220*x)\n\n# solve the equation for x\nsolution = sp.solve(eq, x)\n\n# calculate q\nq = solution[0] - 512\n\n# define the system of equations\neq1 = sp.Eq(0, 3*k - g - 9)\neq2 = sp.Eq(-q*k + 3*g + 17, 0)\n\n# solve the system of equations for k\nsolution = sp.solve((eq1,eq2), (k, g))\n\n# print the result\nfor i in solution:\n    print(i)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 11, in <module>\n  File \"<string>\", line 9, in run_it\nTypeError: unsupported operand type(s) for ** or pow(): 'NoneType' and 'int'\n",
    "gt": "1",
    "err": true,
    "question": "Let x(l) = -l**3 + 5*l**2 + 5*l + 7. Suppose -5*p + 7 = 4*o - 3, -3*o = 2*p + 3. What is the units digit of x(p)? Let's write a program.",
    "output": "def find_p():\n    for p in range(1, 100):\n        for o in range(1, 100):\n            if -5*p + 7 == 4*o - 3 and -3*o == 2*p + 3:\n                return p\n\np = find_p()\nx = -p**3 + 5*p**2 + 5*p + 7\nprint(x % 10)",
    "correct": false
  },
  {
    "ans": "-0.3",
    "gt": "-0.3",
    "err": false,
    "question": "Let v(a) = -39*a - 1170. Let h be v(-30). Let f = -4 + 3.75. Let n = -0.05 + f. What is the closest to -2/5 in h, n, 3/2? Let's write a program.",
    "output": "import math\n\n# define the function v\ndef v(a):\n    return -39*a - 1170\n\n# calculate h\nh = v(-30)\n\n# define f and n\nf = -4 + 3.75\nn = -0.05 + f\n\n# calculate the closest to -2/5 in h, n, 3/2\nclosest = min(h, n, 3/2, key=lambda x:math.fabs(x+2/5))\n\nprint(closest)",
    "correct": true
  },
  {
    "ans": "-4",
    "gt": "-0.1",
    "err": false,
    "question": "Which is the nearest to 0?  (a) -1/10  (b) -4  (c) -3 Let's write a program.",
    "output": "a = -1/10\nb = -4\nc = -3\n\nnearest = min(a, b, c)\n\nprint(nearest)",
    "correct": false
  },
  {
    "ans": "11",
    "gt": "11",
    "err": false,
    "question": "Let u(w) be the third derivative of w**6/120 + 11*w**5/30 + 19*w**4/24 - 10*w**3/3 + 21*w**2. Let i be u(-21). What is the highest common factor of 11 and i? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nw = sp.symbols('w')\n\n# define the function u(w)\nu = w**6/120 + 11*w**5/30 + 19*w**4/24 - 10*w**3/3 + 21*w**2\n\n# calculate the third derivative of u\nthird_derivative = u.diff(w, 3)\n\n# substitute w = -21 into the third derivative\ni = third_derivative.subs(w, -21)\n\n# calculate the highest common factor of 11 and i\nhcf = sp.gcd(11, i)\n\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "-16",
    "gt": "-16.0",
    "err": false,
    "question": "What is the value of 24/12*((-160)/(-10))/(-2)? Let's write a program.",
    "output": "print((24/12)*((-160)/(-10))/(-2))",
    "correct": false
  },
  {
    "ans": "-390.6",
    "gt": "-390.6",
    "err": false,
    "question": "What is 3906 divided by -10? Let's write a program.",
    "output": "print(3906 / -10)",
    "correct": true
  },
  {
    "ans": "-15",
    "gt": "-15",
    "err": false,
    "question": "Solve 171*t + 5375 = -170*t + 260 for t. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nt = sp.symbols('t')\n\n# define the equation\nequation = sp.Eq(171*t + 5375, -170*t + 260)\n\n# solve the equation\nsolution = sp.solve(equation, t)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Solve -18*q + 14*q = -8 for q. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nq = sp.symbols('q')\n\n# define the equation\nequation = sp.Eq(-18*q + 14*q, -8)\n\n# solve the equation\nsolution = sp.solve(equation, q)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "1689",
    "gt": "1689",
    "err": false,
    "question": "Calculate the greatest common factor of 62227827 and 3378. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 62227827\nnum2 = 3378\n\n# calculate the greatest common factor\ngcf = math.gcd(num1, num2)\n\n# print the result\nprint(gcf)",
    "correct": true
  },
  {
    "ans": "39",
    "gt": "39",
    "err": false,
    "question": "What is the greatest common factor of 191217 and 897? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 191217\nnum2 = 897\n\n# calculate the greatest common factor\ngcf = math.gcd(num1, num2)\n\n# print the result\nprint(gcf)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 13, in run_it\nAttributeError: 'Integer' object has no attribute 'as_prime_factors'\n",
    "gt": "[3, 5]",
    "err": true,
    "question": "Let u = 553 + -178. Suppose 23*a = 18*a + u. List the prime factors of a. Let's write a program.",
    "output": "from sympy import symbols, solve\n\na = symbols('a')\n\n# equation from problem\nequation = 23*a - 18*a + 553 + -178\n\n# solve equation\nsolution = solve(equation, a)[0]\n\n# prime factors of solution\nprime_factors = set(solution.as_prime_factors())\n\nprint(prime_factors)",
    "correct": false
  },
  {
    "ans": "-0.4",
    "gt": "-5",
    "err": false,
    "question": "Let f = 32.7 + -34.7. What is the third biggest value in -5, -0.4, -16, f? Let's write a program.",
    "output": "f = 32.7 - 34.7\n\nvalues = [-5, -0.4, -16, f]\nthird_biggest = max(values)\nprint(third_biggest)",
    "correct": false
  },
  {
    "ans": "-15",
    "gt": "0.2",
    "err": false,
    "question": "Which is the closest to 3?  (a) -4  (b) -15  (c) 0.2  (d) 300  (e) -2 Let's write a program.",
    "output": "a = -4\nb = -15\nc = 0.2\nd = 300\ne = -2\n\nclosest = min(a, b, c, d, e)\n\nprint(closest)",
    "correct": false
  },
  {
    "ans": "1467",
    "gt": "1467",
    "err": false,
    "question": "What is the remainder when 30398127 is divided by 1470? Let's write a program.",
    "output": "remainder = 30398127 % 1470\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "29",
    "gt": "29.0",
    "err": false,
    "question": "(5/40)/((-1)/((-7888)/34)) Let's write a program.",
    "output": "import sympy as sp\n\n# Define the expression\nexpression = (5/40) / ((-1) / ((-7888)/34))\n\n# Print the result\nprint(expression)",
    "correct": false
  },
  {
    "ans": "-5",
    "gt": "-5",
    "err": false,
    "question": "Let j be (-1)/1*94/(-2). Let d = j + 13. Let f be 5*8/d - 4/6. Solve f = -0*m + 3*m + 15 for m. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj, d, f, m = sp.symbols('j d f m')\n\n# define the equations\nj = (-1)/1*94/(-2)\nd = j + 13\nf = 5*8/d - 4/6\n\n# solve the equation f = -0*m + 3*m + 15 for m\nm = sp.solve(f + 0*m - 3*m - 15, m)\n\n# print the result\nfor sol in m:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 11, in run_it\nNameError: name 'p' is not defined\n",
    "gt": "-2",
    "err": true,
    "question": "Let k(r) = -7 - 5*r + 2*r**2 - r - 3*r**2. Let v(p) = -p**3 - 5*p**2 - 3*p - 1. Let c be v(-4). Calculate k(c). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nr = sp.symbols('r')\n\n# define the function k(r)\nk = -7 - 5*r + 2*r**2 - r - 3*r**2\n\n# define the function v(p)\nv = -p**3 - 5*p**2 - 3*p - 1\n\n# calculate c = v(-4)\nc = v.subs(p, -4)\n\n# calculate k(c)\nresult = k.subs(r, c)\n\nprint(result)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 13, in <module>\n  File \"<string>\", line 10, in run_it\nAttributeError: module 'math' has no attribute 'nanmin'\n",
    "gt": "-0.3",
    "err": true,
    "question": "Let f = -1 + 1. Let p be 2*(-3)/((-6)/(-8)). Let u be 10/p*(10 - 6). Which is the nearest to f?  (a) -0.3  (b) 3  (c) u Let's write a program.",
    "output": "import math\n\n# define the variables\nf = -1 + 1\np = 2*(-3)/((-6)/(-8))\nu = 10/p*(10 - 6)\n\n# calculate the nearest to f\nnearest_to_f = math.nanmin([-0.3, 3, u])\n\nprint(nearest_to_f)",
    "correct": false
  },
  {
    "ans": "6048",
    "gt": "6048.0",
    "err": false,
    "question": "What is -18706464 divided by -3093? Let's write a program.",
    "output": "result = -18706464 / -3093\nprint(result)",
    "correct": false
  },
  {
    "ans": "-0.6666666666666666",
    "gt": "-4.0",
    "err": false,
    "question": "-5 - (-3)/(8 + -5) Let's write a program.",
    "output": "print((-5 - (-3))/(8 + -5))",
    "correct": false
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "Solve o + 4*s - 1022 = -1014, -26 = -6*o - 2*s for o. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\no, s = sp.symbols('o s')\n\n# define the equations\neq1 = sp.Eq(o + 4*s - 1022, -1014)\neq2 = sp.Eq(-26, -6*o - 2*s)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2), (o, s))\n\n# print the result\nprint(solution[o])",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 19, in run_it\nAttributeError: module 'sympy' has no attribute 'hcf'\n",
    "gt": "10",
    "err": true,
    "question": "Let p(k) = k + 11. Let i be p(9). Suppose -556*f + 559*f - 90 = 0. Calculate the highest common divisor of i and f. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nk = sp.symbols('k')\nf = sp.symbols('f')\n\n# define the functions\np = k + 11\ni = p.subs(k, 9)\n\n# define the equation\neq = sp.Eq(-556*f + 559*f - 90, 0)\n\n# solve the equation\nsolution = sp.solve(eq, f)\n\n# calculate the highest common divisor of i and the solution\nhcf = sp.hcf(i, solution[0])\n\nprint(hcf)",
    "correct": false
  },
  {
    "ans": "19",
    "gt": "4",
    "err": false,
    "question": "Suppose 5*p + 3*p - 16 = 0. Solve 2*z + 8 = -5*w + 1, -3*z + p*w = -18 for z. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\np, w, z = sp.symbols('p w z')\n\n# define the equations\neq1 = sp.Eq(5*p + 3*p - 16, 0)\neq2 = sp.Eq(2*z + 8, -5*w + 1)\neq3 = sp.Eq(-3*z + p*w, -18)\n\n# solve the first equation for p\nsolution_p = sp.solve(eq1, p)\n\n# substitute the solution of p in the other equations\neq2_sub = eq2.subs(p, solution_p[0])\neq3_sub = eq3.subs({p:solution_p[0], z:0})\n\n# solve the system of equations for z\nsolution_z = sp.solve((eq2_sub,eq3_sub), (w, z))\n\n# print the solution for z\nprint(solution_z[z])",
    "correct": false
  },
  {
    "ans": "-21",
    "gt": "-21.0",
    "err": false,
    "question": "What is (9*(-5)/(-10))/((-282)/1316)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (9*(-5)/(-10))/((-282)/1316)\n\n# calculate the result\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "-72",
    "gt": "-72",
    "err": false,
    "question": "Let i(u) = -411 + 4*u + 339 + u - u. Determine i(0). Let's write a program.",
    "output": "def i(u):\n    return -411 + 4*u + 339 + u - u\n\nprint(i(0))",
    "correct": true
  },
  {
    "ans": "-11",
    "gt": "-11",
    "err": false,
    "question": "Solve 0 = 107*o + 338*o + 4895 for o. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\no = sp.symbols('o')\n\n# define the equation\neq = sp.Eq(0, 107*o + 338*o + 4895)\n\n# solve the equation\nsolution = sp.solve(eq, o)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "4",
    "err": false,
    "question": "Suppose 10 = -5*t + 55. Calculate the remainder when 76 is divided by t. Let's write a program.",
    "output": "t = 5\nremainder = 76 % t\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "100",
    "gt": "100",
    "err": false,
    "question": "Calculate -3 - ((-156 + 15 - -20) + -4 + 22). Let's write a program.",
    "output": "print(-3 - ((-156 + 15 - -20) + -4 + 22))",
    "correct": true
  },
  {
    "ans": "243",
    "gt": "243",
    "err": false,
    "question": "Calculate the highest common divisor of 972 and 11421. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 972\nnum2 = 11421\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "-10",
    "gt": "-10",
    "err": false,
    "question": "Let y(k) be the second derivative of k**5/20 - 5*k**4/12 - 7*k**3/3 - 5*k**2 + 3*k + 63. Determine y(7). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nk = sp.symbols('k')\n\n# define the function\ny = k**5/20 - 5*k**4/12 - 7*k**3/3 - 5*k**2 + 3*k + 63\n\n# calculate the second derivative\ny_prime = sp.diff(y, k, 2)\n\n# substitute k = 7\ny_prime_at_7 = y_prime.subs(k, 7)\n\n# print the result\nprint(y_prime_at_7)",
    "correct": true
  },
  {
    "ans": "37",
    "gt": "[37]",
    "err": false,
    "question": "Let l = -10 + -5. Let a = 52 + l. List the prime factors of a. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nl = -10 + -5\na = 52 + l\n\n# calculate the prime factors of a\nprime_factors = sp.primefactors(a)\n\n# print the result\nprint(prime_factors)",
    "correct": false
  },
  {
    "ans": "35",
    "gt": "0.75",
    "err": false,
    "question": "Let z = -1284 - -1318. Which is the closest to -1?  (a) 3/4  (b) z  (c) 5/2 Let's write a program.",
    "output": "z = -1284 - -1318\n\n# define the variable\nvariable = z\n\n# calculate the absolute value of the variable\nabs_variable = abs(variable)\n\n# define the closest to -1\nclosest_to_minus_1 = -1\n\n# calculate the distance between the variable and -1\ndistance = abs_variable - closest_to_minus_1\n\n# print the result\nprint(distance)",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "4",
    "err": false,
    "question": "Let b be (20/8)/((-2)/(-4)). Suppose 0 = 4*r - 11 - b. What is the units digit of r? Let's write a program.",
    "output": "b = (20/8)/((-2)/(-4))\nr = (11 + b)/4\nunits_digit_of_r = r % 1\nprint(units_digit_of_r)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 2, in run_it\nModuleNotFoundError: No module named 'max'\n",
    "gt": "0.11",
    "err": true,
    "question": "What is the second biggest value in -1/5, 0.11, 6, -10, -3? Let's write a program.",
    "output": "import max\n\n# define the values\nvalues = [-1/5, 0.11, 6, -10, -3]\n\n# find the second biggest value\nsecond_biggest = max(values)\n\n# print the result\nprint(second_biggest)",
    "correct": false
  },
  {
    "ans": "-4",
    "gt": "4",
    "err": false,
    "question": "Let f(g) = 3376 - 281*g. Let d be f(12). Solve d*h = -5*p - 4, -h = 3*p - 0*p + 8 for h. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ng, h, p = sp.symbols('g h p')\n\n# define the function f(g)\nf = 3376 - 281*g\n\n# calculate d = f(12)\nd = f.subs(g, 12)\n\n# define the equations\neq1 = sp.Eq(d*h, -5*p - 4)\neq2 = sp.Eq(-h, 3*p - 0*p + 8)\n\n# solve the system of equations for h\nsolution = sp.solve((eq1,eq2), (h, p))\n\n# print the result\nfor key in solution:\n    print(key, solution[key])",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 15, in run_it\nKeyError: s\n",
    "gt": "4",
    "err": true,
    "question": "Suppose 2*g + 2*t - 8 = 0, 4*g + 5*t - 2 - 13 = 0. Suppose 0 = g*s - 0*s. Solve s = 5*z - 11 - 9 for z. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ng, t, s, z = sp.symbols('g t s z')\n\n# define the equations\neq1 = sp.Eq(2*g + 2*t - 8, 0)\neq2 = sp.Eq(4*g + 5*t - 2 - 13, 0)\n\n# solve the system of equations for g and t\nsolution = sp.solve((eq1,eq2), (g, t))\n\n# calculate s\ns = solution[g] * solution[s]\n\n# solve s for z\nz = sp.solve(sp.Eq(s, 5*z - 11 - 9), z)[0]\n\n# print the result\nprint(z)",
    "correct": false
  },
  {
    "ans": "2.5",
    "gt": "0.5",
    "err": false,
    "question": "Which is the nearest to 5/2?  (a) 2/7  (b) 1779  (c) 0  (d) 0.5  (e) -24 Let's write a program.",
    "output": "a = 2/7\nb = 5/2\nc = 1779\nd = 0.5\ne = -24\n\nnearest = b\n\nprint(nearest)",
    "correct": false
  },
  {
    "ans": "-1",
    "gt": "-1",
    "err": false,
    "question": "Let x(a) = -a**2 + 783*a + 783. What is x(-1)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\na = sp.symbols('a')\n\n# define the function\nx = -a**2 + 783*a + 783\n\n# substitute a = -1 into the function\nresult = x.subs(a, -1)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "157",
    "gt": "157",
    "err": false,
    "question": "Calculate the greatest common factor of 314 and 22554463. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 314\nnum2 = 22554463\n\n# calculate the greatest common factor\ngcf = math.gcd(num1, num2)\n\n# print the result\nprint(gcf)",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "0.0",
    "err": false,
    "question": "Divide 0 by 22809164. Let's write a program.",
    "output": "print(0/22809164)",
    "correct": false
  },
  {
    "ans": "369",
    "gt": "369",
    "err": false,
    "question": "Calculate the remainder when 55249 is divided by 560. Let's write a program.",
    "output": "remainder = 55249 % 560\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "What is the units digit of 54? Let's write a program.",
    "output": "def find_unit_digit(number):\n    return number % 10\n\nprint(find_unit_digit(54))",
    "correct": true
  },
  {
    "ans": "8",
    "gt": "-3",
    "err": false,
    "question": "Let f(j) = -j**3 + 10*j**2 + 2*j - 15. Let g be f(10). Suppose -g*y + 2*z + 62 - 6 = 0, y = 4*z + 4. Solve 5*w + 3 = -y for w. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj = sp.symbols('j')\ny = sp.symbols('y')\nz = sp.symbols('z')\nw = sp.symbols('w')\n\n# define the function f(j)\nf = -j**3 + 10*j**2 + 2*j - 15\n\n# calculate g\ng = f.subs(j, 10)\n\n# define the equations\neq1 = sp.Eq(-g*y + 2*z + 62 - 6, 0)\neq2 = sp.Eq(y, 4*z + 4)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (y, z))\n\n# calculate w\nw = solution[y] - 4\n\n# print the result\nprint(w)",
    "correct": false
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "Solve 5*s + i = 25, 4*s - 3*i = -5*i + 26 for s. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ns, i = sp.symbols('s i')\n\n# define the equations\neq1 = sp.Eq(5*s + i, 25)\neq2 = sp.Eq(4*s - 3*i, -5*i + 26)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (s, i))\n\n# print the result\nprint(solution[s])",
    "correct": true
  },
  {
    "ans": "-7",
    "gt": "-7",
    "err": false,
    "question": "Calculate (18 + -12 - 14) + -11 + 12. Let's write a program.",
    "output": "print((18 + -12 - 14) + -11 + 12)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 36, in <module>\n  File \"<string>\", line 15, in run_it\nNameError: name 's' is not defined\n",
    "gt": "8",
    "err": true,
    "question": "Let l(q) = 3*q**2 + 4*q + 5. Let r(w) = 4*w - 2*w**2 + w**2 - 1 - 5*w. Suppose -5*c + s - 23 = 0, -c = -3*c - 4*s + 4. Let o(b) = c*r(b) - l(b). Calculate o(3). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nq, w, b = sp.symbols('q w b')\n\n# define the functions l(q) and r(w)\nl = 3*q**2 + 4*q + 5\nr = 4*w - 2*w**2 + w**2 - 1 - 5*w\n\n# define the variables c and s\nc = sp.symbols('c s')\n\n# define the equations\neq1 = sp.Eq(-5*c + s - 23, 0)\neq2 = sp.Eq(-c, -3*c - 4*s + 4)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (c, s))\n\n# calculate c and s\nc_val = solution[c]\ns_val = solution[s]\n\n# substitute c and s in r(w) and l(q)\nr_val = r.subs({c:c_val, s:s_val})\nl_val = l.subs(q, b)\n\n# calculate o(b)\no_val = c_val*r_val - l_val\n\n# substitute b = 3 in o(b)\no_val = o_val.subs(b, 3)\n\nprint(o_val)",
    "correct": false
  },
  {
    "ans": "21",
    "gt": "21",
    "err": false,
    "question": "What is the cube root of 8719 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Calculate cube root\ncube_root = math.pow(8719, 1/3)\n\n# Round to nearest integer\nnearest_integer = round(cube_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 24, in <module>\n  File \"<string>\", line 17, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "3",
    "err": true,
    "question": "Suppose 0 = -4*k - k + 15. Differentiate -1 + 0*z + k*z + 0 - 1 wrt z. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nk = sp.symbols('k')\n\n# define the equation\nequation = sp.Eq(0, -4*k - k + 15)\n\n# solve the equation for k\nsolution = sp.solve(equation, k)\n\n# define z\nz = sp.symbols('z')\n\n# define the function\nf = -1 + 0*z + solution[k]*z + 0 - 1\n\n# differentiate the function wrt z\ndf_dz = sp.diff(f, z)\n\n# print the result\nprint(df_dz)",
    "correct": false
  },
  {
    "ans": "-6",
    "gt": "-6",
    "err": false,
    "question": "(-2 - (0 + 8 - (14 + -4))) + -6 Let's write a program.",
    "output": "print((-2 - (0 + 8 - (14 + -4))) + -6)",
    "correct": true
  },
  {
    "ans": "-1812",
    "gt": "-1812",
    "err": false,
    "question": "Which is the smallest value?  (a) 0.2  (b) -1812  (c) -2/3 Let's write a program.",
    "output": "a = 0.2\nb = -1812\nc = -2/3\n\nsmallest = min(a, b, c)\nprint(smallest)",
    "correct": true
  },
  {
    "ans": "18",
    "gt": "18",
    "err": false,
    "question": "-6 + (25 + -7 - -6) Let's write a program.",
    "output": "print(-6 + (25 + -7 - -6))",
    "correct": true
  },
  {
    "ans": "32",
    "gt": "32",
    "err": false,
    "question": "Calculate the remainder when 10496 is divided by 327. Let's write a program.",
    "output": "remainder = 10496 % 327\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-0.75",
    "gt": "-0.75",
    "err": false,
    "question": "What is the closest to -1 in -3/4, -164/19, -3, -1/5, 5? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [-3/4, -164/19, -3, -1/5, 5]\n\n# find the closest to -1\nclosest = min(numbers, key=lambda x:abs(x+1))\n\nprint(closest)",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "Calculate -3 - 2 - (-6 + 3). Let's write a program.",
    "output": "print(-3 - 2 - (-6 + 3))",
    "correct": true
  },
  {
    "ans": "-14",
    "gt": "-14",
    "err": false,
    "question": "What is the value of 0 - -5 - (133 - 114)? Let's write a program.",
    "output": "print(0 - -5 - (133 - 114))",
    "correct": true
  },
  {
    "ans": "2748/13",
    "gt": "-4",
    "err": false,
    "question": "Solve 260 = -10*w + 15*w + 4*l, -5*l + 340 = -3*w - 22 for w. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw, l = sp.symbols('w l')\n\n# define the equations\neq1 = sp.Eq(260, -10*w + 15*w + 4*l)\neq2 = sp.Eq(-5*l, 340 + 3*w + 22)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (w, l))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": false
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "What is the remainder when 716837 is divided by 7467? Let's write a program.",
    "output": "remainder = 716837 % 7467\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "46",
    "gt": "46",
    "err": false,
    "question": "Suppose 0 = 4*v - 0*a + 2*a + 812, -16 = 4*a. Let g = 29 - v. Let j(k) = 3*k**2 - 15*k + 92. Let c be j(5). What is the highest common divisor of c and g? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nv, a = sp.symbols('v a')\n\n# define the equations\neq1 = sp.Eq(4*v - 0*a + 2*a + 812, 0)\neq2 = sp.Eq(4*a, -16)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (v, a))\n\n# calculate g and j(5)\ng = 29 - solution[v]\nj_5 = 3*5**2 - 15*5 + 92\n\n# calculate c\nc = j_5\n\n# find the highest common divisor of c and g\nhcd = sp.gcd(c, g)\n\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "-53",
    "gt": "-53",
    "err": false,
    "question": "Let x(c) = -6*c**3 - 2*c**2 - c + 5. Determine x(2). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nc = sp.symbols('c')\n\n# define the function\nx = -6*c**3 - 2*c**2 - c + 5\n\n# calculate x(2)\nresult = x.subs(c, 2)\n\nprint(result)",
    "correct": true
  },
  {
    "ans": "-5",
    "gt": "-5",
    "err": false,
    "question": "What is the second smallest value in -5, 0.1981, -11? Let's write a program.",
    "output": "values = [-5, 0.1981, -11]\n# sort the values\nvalues.sort()\n# print the second smallest value\nprint(values[1])",
    "correct": true
  },
  {
    "ans": "20",
    "gt": "20",
    "err": false,
    "question": "What is the remainder when 4706 is divided by 781? Let's write a program.",
    "output": "remainder = 4706 % 781\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 15, in <module>\n  File \"<string>\", line 6, in run_it\nUnboundLocalError: cannot access local variable 'g' where it is not associated with a value\n",
    "gt": "0.25",
    "err": true,
    "question": "Let a = 16 - 15. Suppose g = -0*g + a. Let n(r) = -r**3 + 2*r**2 - r - 3. Let d be n(2). What is the nearest to g in 1/4, -0.4, d? Let's write a program.",
    "output": "import math\n\n# define the variables\na = 16 - 15\ng = -0*g + a\nn = -r**3 + 2*r**2 - r - 3\nd = n(2)\n\n# calculate the nearest to g\nnearest_to_g = [1/4, -0.4, d]\nnearest_g = min(nearest_to_g)\n\nprint(nearest_g)",
    "correct": false
  },
  {
    "ans": "1.5",
    "gt": "1.5",
    "err": false,
    "question": "Evaluate (10/15)/((-76)/(-2394)*14). Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (10/15)/((-76)/(-2394)*14)\n\n# evaluate the expression\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Let n be (0 + 1)*(-2 - -1)*-7. Let f = 2 + n. Solve 1 = 5*g - f for g. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nn, f, g = sp.symbols('n f g')\n\n# define the equation\neq = sp.Eq(1, 5*g - (2 + n))\n\n# substitute n = (0 + 1)*(-2 - -1)*-7\nn_val = (0 + 1)*(-2 - -1)*-7\neq_sub = eq.subs(n, n_val)\n\n# solve the equation for g\ng_val = sp.solve(eq_sub, g)[0]\n\n# print the result\nprint(g_val)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "-4",
    "err": false,
    "question": "Solve -f - 277 + 267 = d + 4*d + 2*f + 2*f, 5*d + f + 18 = 0 for d. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nf, d = sp.symbols('f d')\n\n# define the equations\neq1 = sp.Eq(-f - 277 + 267, d + 4*d + 2*f + 2*f)\neq2 = sp.Eq(5*d + f + 18, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2), (f, d))\n\n# print the result\nfor variable, value in solution.items():\n    print(variable, value)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 18, in <module>\n  File \"<string>\", line 16, in run_it\nTypeError: cannot unpack non-iterable Symbol object\n",
    "gt": "3",
    "err": true,
    "question": "Solve -5*r = -x - 16, r = 23*x - 16*x - 6*x + 4 for r. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nx = sp.symbols('x')\nr = sp.symbols('r')\n\n# define the equations\neq1 = sp.Eq(-5*r, -x - 16)\neq2 = sp.Eq(r, 23*x - 16*x - 6*x + 4)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (r, x))\n\n# print the result\nfor variable, value in solution:\n    print(variable, '=', value)",
    "correct": false
  },
  {
    "ans": "13",
    "gt": "13",
    "err": false,
    "question": "Suppose 2*b - 5*d = -b + 33, -3*d - 23 = -2*b. What is the remainder when 45 is divided by b? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nb, d = sp.symbols('b d')\n\n# define the equations\neq1 = sp.Eq(2*b - 5*d, -b + 33)\neq2 = sp.Eq(-3*d - 23, -2*b)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (b, d))\n\n# calculate the remainder when 45 is divided by b\nremainder = 45 % solution[b]\n\n# print the result\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-3.8",
    "gt": "-3.8",
    "err": false,
    "question": "What is the nearest to -4 in -3.8, -0.05, 40? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [-3.8, -0.05, 40]\n\n# find the nearest to -4\nnearest = min(numbers, key=lambda x:abs(x-(-4)))\n\nprint(nearest)",
    "correct": true
  },
  {
    "ans": "-395",
    "gt": "-395",
    "err": false,
    "question": "Which is smaller: -395 or 7394? Let's write a program.",
    "output": "print(-395) if -395 < 7394 else print(7394)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Let z(n) = -n**2 - 39*n - 268. Let i be z(-9). Solve 4*v = i*r - 6, v - r = -4*v for v. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nn = sp.symbols('n')\ni = sp.symbols('i')\nv = sp.symbols('v')\nr = sp.symbols('r')\n\n# define the function z(n)\nz = -n**2 - 39*n - 268\n\n# calculate i\ni = z.subs(n, -9)\n\n# solve the system of equations\nsolution = sp.solve((4*v - i*r + 6, v - r + 4*v), (v, r))\n\n# print the result\nprint(solution[v])",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "3",
    "err": false,
    "question": "Let b(h) = h**3 - 3*h**2 - 44*h - 49. What is the tens digit of b(11)? Let's write a program.",
    "output": "def b(h):\n    return h**3 - 3*h**2 - 44*h - 49\n\nh = 11\nb_value = b(h)\ntens_digit = b_value % 10\nprint(tens_digit)",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Solve 368*q = 360*q + 16 for q. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nq = sp.symbols('q')\n\n# define the equation\neq = sp.Eq(368*q, 360*q + 16)\n\n# solve the equation\nsolution = sp.solve(eq, q)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "10",
    "gt": "10",
    "err": false,
    "question": "What is the remainder when 133702 is divided by 52? Let's write a program.",
    "output": "remainder = 133702 % 52\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "13",
    "err": false,
    "question": "Let p(j) = 2*j + 5. Suppose -7*h + 12 = -6*h + 5*r, -5*h + 12 = r. Suppose -4*u + 3*i + h*i = -215, -5*i - 265 = -5*u. Let z = -46 + u. Give p(z). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj, h, r, u, i, z = sp.symbols('j h r u i z')\n\n# define the functions\np = 2*j + 5\n\n# solve the equations\neq1 = sp.Eq(-7*h + 12, -6*h + 5*r)\neq2 = sp.Eq(-5*h + 12, r)\nsol = sp.solve((eq1, eq2), (h, r))\n\neq3 = sp.Eq(-4*u + 3*i + h*i, -215)\neq4 = sp.Eq(-5*i - 265, -5*u)\nsol2 = sp.solve((eq3, eq4), (i, u))\n\n# calculate z\nz = -46 + sol2[u]\n\n# calculate p(z)\npz = p.subs(j, z)\nprint(pz)",
    "correct": false
  },
  {
    "ans": "-272",
    "gt": "-5",
    "err": false,
    "question": "What is the closest to 0 in -12, -5, -272? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [-12, -5, -272]\n\n# find the closest to 0\nclosest_to_zero = min(numbers)\n\n# print the result\nprint(closest_to_zero)",
    "correct": false
  },
  {
    "ans": "20",
    "gt": "20",
    "err": false,
    "question": "Calculate the remainder when 3297 is divided by 29. Let's write a program.",
    "output": "remainder = 3297 % 29\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 19, in <module>\n  File \"<string>\", line 17, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "-5",
    "err": true,
    "question": "Suppose -2*r + 2*c + 16 = -0*r, 2*c = -r - 1. Solve -4*u + 3*x - r*x - 24 = 0, -5*u + 3*x - 19 = 0 for u. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nr, c, u, x = sp.symbols('r c u x')\n\n# define the equations\neq1 = sp.Eq(-2*r + 2*c + 16, -0*r)\neq2 = sp.Eq(2*c, -r - 1)\neq3 = sp.Eq(-4*u + 3*x - r*x - 24, 0)\neq4 = sp.Eq(-5*u + 3*x - 19, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2, eq3, eq4), (r, c, u, x))\n\n# calculate u\nu_value = solution[u]\nprint(u_value)",
    "correct": false
  },
  {
    "ans": "334",
    "gt": "334",
    "err": false,
    "question": "Calculate the remainder when 22622 is divided by 796. Let's write a program.",
    "output": "remainder = 22622 % 796\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "Solve -5 = -42649*v + 42650*v - 4*n + 3, 4*n - 24 = -3*v for v. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nv, n = sp.symbols('v n')\n\n# define the equations\neq1 = sp.Eq(-5, -42649*v + 42650*v - 4*n + 3)\neq2 = sp.Eq(4*n - 24, -3*v)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (v, n))\n\n# print the result\nfor variable in solution:\n    print(variable, solution[variable])",
    "correct": true
  },
  {
    "ans": "35",
    "gt": "35",
    "err": false,
    "question": "Calculate the remainder when 160 is divided by 125. Let's write a program.",
    "output": "remainder = 160 % 125\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Which is the biggest value?  (a) -0.3  (b) 1  (c) -1919/16  (d) -1 Let's write a program.",
    "output": "a = -0.3\nb = 1\nc = -1919/16\nd = -1\n\nif a > b:\n    print(a)\nelif a < b:\n    print(b)\nelif a > c:\n    print(a)\nelif a < c:\n    print(c)\nelif a > d:\n    print(a)\nelif a < d:\n    print(d)",
    "correct": true
  },
  {
    "ans": "13",
    "gt": "13",
    "err": false,
    "question": "Calculate the highest common divisor of 117 and 676. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 117\nnum2 = 676\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 16, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "10",
    "err": true,
    "question": "Suppose -v + 2*t = -2*t - 3, -4*v + 5*t + 12 = 0. Suppose -v*a = -4*a + 13. What is the remainder when 36 is divided by a? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nv, t, a = sp.symbols('v t a')\n\n# define the equations\neq1 = sp.Eq(-v + 2*t, -2*t - 3)\neq2 = sp.Eq(-4*v + 5*t + 12, 0)\neq3 = sp.Eq(-v*a, -4*a + 13)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2, eq3), (v, t, a))\n\n# calculate the remainder\nremainder = 36 % solution[a]\n\n# print the remainder\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "What is 453 to the power of 1/4, to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Calculate the value\nvalue = math.pow(453, 1/4)\n\n# Round to the nearest integer\nnearest_integer = round(value)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "-25",
    "gt": "-25",
    "err": false,
    "question": "Let x(q) = -q**3 - 7*q**2 + 24*q + 143. Determine x(-7). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nq = sp.symbols('q')\n\n# define the function\nx = -q**3 - 7*q**2 + 24*q + 143\n\n# substitute q with -7\nx_at_minus_7 = x.subs(q, -7)\n\n# print the result\nprint(x_at_minus_7)",
    "correct": true
  },
  {
    "ans": "-0.4444444444444444",
    "gt": "0.0",
    "err": false,
    "question": "Let k = 0.2 + 0.8. Let l = k - 1. Let b = 0.042 + -0.042. What is the nearest to b in l, -5, -4/9? Let's write a program.",
    "output": "k = 0.2 + 0.8\nl = k - 1\nb = 0.042 + -0.042\n\nnearest_to_b = l if l < -5 else -4/9\nprint(nearest_to_b)",
    "correct": false
  },
  {
    "ans": "",
    "gt": "-1",
    "err": true,
    "question": "Let f(l) = 5*l**3 + 54*l**2 - 27*l - 139. Let n be f(-11). Solve s + 5 = -3*k, n*k - 39*k - 5*s - 12 = 0 for k. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nl = sp.symbols('l')\ns = sp.symbols('s')\nk = sp.symbols('k')\n\n# define the function f(l)\nf = 5*l**3 + 54*l**2 - 27*l - 139\n\n# calculate n, the value of f(-11)\nn = f.subs(l, -11)\n\n# define the equations\neq1 = sp.Eq(s + 5, -3*k)\neq2 = sp.Eq(n*k - 39*k - 5*s - 12, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (k, s))\n\n# print the result\nfor i in solution:\n    print(i)",
    "correct": false
  },
  {
    "ans": "12",
    "gt": "12",
    "err": false,
    "question": "Suppose 57 + 8 = 5*c. What is the remainder when 38 is divided by c? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nc = sp.symbols('c')\n\n# define the equation\neq = sp.Eq(57 + 8, 5*c)\n\n# solve the equation for c\nsolution = sp.solve(eq, c)\n\n# calculate the remainder when 38 is divided by c\nremainder = 38 % solution[0]\n\n# print the result\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-9",
    "gt": "-9.0",
    "err": false,
    "question": "(-1)/2 - 1 - (-15)/(-2) Let's write a program.",
    "output": "print((-1)/2 - 1 - (-15)/(-2))",
    "correct": false
  },
  {
    "ans": "19",
    "gt": "19",
    "err": false,
    "question": "Calculate the highest common divisor of 57 and 1444. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 57\nnum2 = 1444\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "What is the units digit of 6737? Let's write a program.",
    "output": "def find_unit_digit(number):\n    return number % 10\n\nprint(find_unit_digit(6737))",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 17, in run_it\nAttributeError: module 'sympy' has no attribute 'hcf'\n",
    "gt": "6",
    "err": true,
    "question": "Suppose -2*t = 5*k - 62, 5*k + 2*t = -t + 63. Suppose -4*j + 3 = -3*j. Suppose -24 = -j*y - 6. Calculate the highest common factor of y and k. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nt, k, j, y = sp.symbols('t k j y')\n\n# define the equations\neq1 = sp.Eq(-2*t, 5*k - 62)\neq2 = sp.Eq(5*k + 2*t, -t + 63)\neq3 = sp.Eq(-4*j + 3, -3*j)\neq4 = sp.Eq(-24, -j*y - 6)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2,eq3,eq4), (t, k, j, y))\n\n# calculate the highest common factor of y and k\nhcf_yk = sp.hcf(solution[y], solution[k])\n\nprint(hcf_yk)",
    "correct": false
  },
  {
    "ans": "21",
    "gt": "21",
    "err": false,
    "question": "Let l(x) = 19*x**2 + 724*x - 722. Give l(1). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nx = sp.symbols('x')\n\n# define the function\nl = 19*x**2 + 724*x - 722\n\n# calculate the value of the function at x=1\nvalue = l.subs(x, 1)\n\nprint(value)",
    "correct": true
  },
  {
    "ans": "-3",
    "gt": "0",
    "err": false,
    "question": "Let w = 0.11 - 0.04. Let j = 0.47 - w. Let p = -3932 + 3929. Which is the nearest to -0.3?  (a) p  (b) 0  (c) j Let's write a program.",
    "output": "w = 0.11 - 0.04\nj = 0.47 - w\np = -3932 + 3929\n\n# Which is the nearest to -0.3?\nnearest_to_minus_0_3 = min(p, j, 0)\n\nprint(nearest_to_minus_0_3)",
    "correct": false
  },
  {
    "ans": "-1/4",
    "gt": "-0.25",
    "err": false,
    "question": "961/124 - 328/41 Let's write a program.",
    "output": "from fractions import Fraction\n\n# Define the fractions\nfrac1 = Fraction(961, 124)\nfrac2 = Fraction(328, 41)\n\n# Subtract the fractions\nresult = frac1 - frac2\n\n# Print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "7",
    "gt": "7",
    "err": false,
    "question": "Suppose -96 = -4*j - 3*l, -3*j + j + 48 = -3*l. What is the remainder when j is divided by 17? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nj, l = sp.symbols('j l')\n\n# define the equations\neq1 = sp.Eq(-4*j - 3*l, -96)\neq2 = sp.Eq(-3*j + j + 48, -3*l)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (j, l))\n\n# calculate the remainder of j when divided by 17\nremainder = solution[j] % 17\n\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "4",
    "gt": "4",
    "err": false,
    "question": "Solve 20 = -25*g + 30*g for g. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ng = sp.symbols('g')\n\n# define the equation\nequation = sp.Eq(20, -25*g + 30*g)\n\n# solve the equation\nsolution = sp.solve(equation, g)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-9826",
    "gt": "-9826",
    "err": false,
    "question": "Find the first derivative of 8951 - 9826*d wrt d. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nd = sp.symbols('d')\n\n# define the function\nf = 8951 - 9826*d\n\n# find the derivative\nfirst_derivative = sp.diff(f, d)\n\n# print the result\nprint(first_derivative)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 18, in <module>\n  File \"<string>\", line 8, in run_it\nNameError: name 'n' is not defined\n",
    "gt": "4",
    "err": true,
    "question": "Suppose -n + 2*l = -34218, 2*l - 396 = -404. What is the thousands digit of n? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nl = sp.symbols('l')\n\n# define the equations\neq1 = sp.Eq(-n + 2*l, -34218)\neq2 = sp.Eq(2*l - 396, -404)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (n, l))\n\n# calculate the thousands digit of n\nthousands_digit_n = solution[n] / 1000 % 1\n\nprint(thousands_digit_n)",
    "correct": false
  },
  {
    "ans": "108",
    "gt": "108",
    "err": false,
    "question": "Let o(z) = -z**3 + 2*z**2 - z - 1. Let h(i) = 19*i**3 - 3*i**2 + i - 32. Let u(y) = h(y) + o(y). What is the third derivative of u(x) wrt x? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nx = sp.symbols('x')\n\n# define the functions o(z), h(i) and u(y)\no = -x**3 + 2*x**2 - x - 1\nh = 19*x**3 - 3*x**2 + x - 32\nu = h + o\n\n# calculate the third derivative of u(x)\nthird_derivative = u.diff(x, 3)\n\n# print the result\nprint(third_derivative)",
    "correct": true
  },
  {
    "ans": "1069",
    "gt": "1069",
    "err": false,
    "question": "Calculate the remainder when 24365 is divided by 5824. Let's write a program.",
    "output": "remainder = 24365 % 5824\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-1",
    "gt": "-0.1",
    "err": false,
    "question": "Which is the nearest to 0?  (a) 1/3  (b) -1  (c) -0.1 Let's write a program.",
    "output": "a = 1/3\nb = -1\nc = -0.1\n\nnearest = min(a, b, c)\n\nprint(nearest)",
    "correct": false
  },
  {
    "ans": "21",
    "gt": "21",
    "err": false,
    "question": "(-2 - 6 - -1) + 28 Let's write a program.",
    "output": "print((-2 - 6 - -1) + 28)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 8, in run_it\nNameError: name 'j' is not defined\n",
    "gt": "5",
    "err": true,
    "question": "Let j = -409 + 409. Solve j = 2*l - 2*y - 16, -4*l - 3*y = -4*y - 23 for l. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nl, y = sp.symbols('l y')\n\n# define the equations\neq1 = sp.Eq(j, 2*l - 2*y - 16)\neq2 = sp.Eq(-4*l - 3*y, -4*y - 23)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (l, y))\n\n# print the result\nprint(solution[l])",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "What is the remainder when 600 is divided by 300? Let's write a program.",
    "output": "remainder = 600 % 300\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-3",
    "gt": "-3",
    "err": false,
    "question": "What is the value of -4 - 0 - (-4 + -1 + 4)? Let's write a program.",
    "output": "print(-4 - 0 - (-4 + -1 + 4))",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Solve -1129*k - 27 = -1138*k for k. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nk = sp.symbols('k')\n\n# define the equation\nequation = sp.Eq(-1129*k - 27, -1138*k)\n\n# solve the equation\nsolution = sp.solve(equation, k)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "9",
    "gt": "3",
    "err": false,
    "question": "Solve -2*v + 28 = 14*p - 32, -5*p = -20*v - 23*v + 38*v + 30 for p. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nv, p = sp.symbols('v p')\n\n# define the equations\neq1 = sp.Eq(-2*v + 28, 14*p - 32)\neq2 = sp.Eq(-5*p, -20*v - 23*v + 38*v + 30)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (v, p))\n\n# print the result\nfor variable, value in solution.items():\n    print(variable, '=', value)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 9, in run_it\nAttributeError: 'Add' object has no attribute 'rem'\n",
    "gt": "9.0",
    "err": true,
    "question": "Let n(d) = -d**2 - 972*d + 10826. What is the remainder when (-2 + -460)*(-8)/12 is divided by n(11)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the function n(d)\nd = sp.symbols('d')\nn = -d**2 - 972*d + 10826\n\n# calculate the remainder\nremainder = n.rem(d, 11)\n\n# calculate the expression\nexpression = (sp.Rational(-2, 1) - sp.Rational(460, 1))*sp.Rational(-8, 1)\n\n# substitute d with 11 in the remainder\nremainder_value = remainder.subs(d, 11)\n\n# calculate the remainder of the expression\nfinal_remainder = expression.rem(remainder_value)\n\nprint(final_remainder)",
    "correct": false
  },
  {
    "ans": "6",
    "gt": "6",
    "err": false,
    "question": "Solve 6*s - 66456 = -66420 for s. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ns = sp.symbols('s')\n\n# define the equation\neq = sp.Eq(6*s - 66456, -66420)\n\n# solve the equation\nsolution = sp.solve(eq, s)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "0.2857142857142857",
    "gt": "0.1875",
    "err": false,
    "question": "Let r be -4 + ((-201)/(-16))/3. Which is the closest to 2/7?  (a) -3/8  (b) 0.4  (c) r Let's write a program.",
    "output": "import math\n\n# calculate r\nr = -4 + ((-201)/(-16))/3\n\n# calculate the distance between r and 2/7\ndistance = abs(r - 2/7)\n\n# find the closest to 2/7\nif distance < abs(-3/8 - 2/7):\n    closest = 2/7\nelif distance < abs(0.4 - 2/7):\n    closest = 0.4\nelse:\n    closest = -3/8\n\nprint(closest)",
    "correct": false
  },
  {
    "ans": "-9",
    "gt": "-9",
    "err": false,
    "question": "Let x(v) be the second derivative of -v**4/3 + 5*v**3/6 - 3*v**2/2 - 118*v + 2. Give x(2). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nv = sp.symbols('v')\n\n# define the function\nx = -v**4/3 + 5*v**3/6 - 3*v**2/2 - 118*v + 2\n\n# calculate the second derivative\nx_2 = sp.diff(x, v, 2)\n\n# substitute v = 2\nx_2_at_2 = x_2.subs(v, 2)\n\n# print the result\nprint(x_2_at_2)",
    "correct": true
  },
  {
    "ans": "-77",
    "gt": "-77",
    "err": false,
    "question": "What is -42 + -93 + -11 + 69? Let's write a program.",
    "output": "print(-42 - 93 - 11 + 69)",
    "correct": true
  },
  {
    "ans": "0.2",
    "gt": "0.2",
    "err": false,
    "question": "What is the fifth smallest value in 0.07, 0.2, -0.3, -61, 0.1? Let's write a program.",
    "output": "values = [0.07, 0.2, -0.3, -61, 0.1]\n# convert all values to string to sort\nvalues_str = [str(value) for value in values]\n\n# sort the values\nvalues_str.sort()\n\n# print the fifth smallest value\nprint(values_str[4])",
    "correct": true
  },
  {
    "ans": "-8",
    "gt": "-8",
    "err": false,
    "question": "Suppose 4*m - 5*h + 29 = 0, -3*m = -0*m - 4*h + 23. Let v be ((-1)/m)/(3/(-21)). Which is smaller: -8 or v? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nm, h = sp.symbols('m h')\n\n# define the equations\neq1 = sp.Eq(4*m - 5*h + 29, 0)\neq2 = sp.Eq(-3*m, -0*m - 4*h + 23)\n\n# solve the equations\nsolution = sp.solve((eq1,eq2), (m, h))\n\n# calculate v\nv = ((-1)/solution[m])/(3/(-21))\n\n# compare v and -8\nif v < -8:\n    print('v')\nelse:\n    print(-8)",
    "correct": true
  },
  {
    "ans": "81",
    "gt": "81.0",
    "err": false,
    "question": "42120 divided by 520 Let's write a program.",
    "output": "a = 42120\nb = 520\n\nresult = a / b\n\nprint(result)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 2, in run_it\nModuleNotFoundError: No module named 'min'\n",
    "gt": "88",
    "err": true,
    "question": "What is the fourth smallest value in 88, 2/17, -3, 1/8? Let's write a program.",
    "output": "import min\n\n# define the values\nvalues = [88, 2/17, -3, 1/8]\n\n# find the fourth smallest value\nfourth_smallest = min(values)\n\n# print the result\nprint(fourth_smallest)",
    "correct": false
  },
  {
    "ans": "14",
    "gt": "14",
    "err": false,
    "question": "Suppose -67 - 7 = -5*u + w, -u + 5*w = -10. Suppose a - 2*a + 3*l = -26, 2*l = -5*a + 147. What is the remainder when a is divided by u? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nu, w, a, l = sp.symbols('u w a l')\n\n# define the equations\neq1 = sp.Eq(-67 - 7, -5*u + w)\neq2 = sp.Eq(-u + 5*w, -10)\neq3 = sp.Eq(a - 2*a + 3*l, -26)\neq4 = sp.Eq(2*l, -5*a + 147)\n\n# solve the system of equations\nsolution = sp.solve((eq1, eq2, eq3, eq4), (u, w, a, l))\n\n# calculate the remainder when a is divided by u\nremainder = solution[a] % solution[u]\n\n# print the result\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-47",
    "gt": "-47",
    "err": false,
    "question": "Solve -4762*f + 288 + 41 = -4769*f for f. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nf = sp.symbols('f')\n\n# define the equation\nequation = sp.Eq(-4762*f + 288 + 41, -4769*f)\n\n# solve the equation\nsolution = sp.solve(equation, f)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-2",
    "gt": "-2",
    "err": false,
    "question": "What is 2 + -7 + (2 + 2 - 1)? Let's write a program.",
    "output": "print(2 + -7 + (2 + 2 - 1))",
    "correct": true
  },
  {
    "ans": "6",
    "gt": "6.0",
    "err": false,
    "question": "Evaluate 13/((-1521)/(-52))*3*18/4. Let's write a program.",
    "output": "print(13/((-1521)/(-52))*3*18/4)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 2, in run_it\nModuleNotFoundError: No module named 'min'\n",
    "gt": "-0.527",
    "err": true,
    "question": "What is the second smallest value in -0.2, -9, -0.527? Let's write a program.",
    "output": "import min\n\n# define the numbers\nnumbers = [-0.2, -9, -0.527]\n\n# find the second smallest number\nsecond_smallest = min(numbers)\n\n# print the result\nprint(second_smallest)",
    "correct": false
  },
  {
    "ans": "6.778699",
    "gt": "6",
    "err": false,
    "question": "What is the millions digit of 6778699? Let's write a program.",
    "output": "millions_digit = 6778699 / 1000000\nprint(millions_digit)",
    "correct": false
  },
  {
    "ans": "8",
    "gt": "7",
    "err": false,
    "question": "Suppose 13*s - 1811725 = -19*s + 37491. What is the hundreds digit of s? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\ns = sp.symbols('s')\n\n# define the equation\neq = sp.Eq(13*s - 1811725, -19*s + 37491)\n\n# solve the equation\nsolution = sp.solve(eq, s)\n\n# convert the solution to string\nsolution_str = str(solution[0])\n\n# get the hundreds digit\nhundreds_digit = solution_str[-2]\n\nprint(hundreds_digit)",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "-3",
    "err": false,
    "question": "Which is the third biggest value?  (a) -3  (b) -0.76489  (c) 2 Let's write a program.",
    "output": "value1 = -3\nvalue2 = -0.76489\nvalue3 = 2\n\nif value2 > value1:\n    third_biggest = value2\nelse:\n    third_biggest = value1\n\nif third_biggest > value3:\n    print(third_biggest)\nelse:\n    print(value3)",
    "correct": false
  },
  {
    "ans": "59/23",
    "gt": "7",
    "err": false,
    "question": "Let z = -19229 - -19382. Solve -69*r + 330 = -z for r. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nz = sp.symbols('z')\nr = sp.symbols('r')\n\n# equation for z\nz_eq = sp.Eq(z, -19229 - -19382)\n\n# solve z for r\nz_sol = sp.solve(z_eq, z)[0]\n\n# equation for r\nr_eq = sp.Eq(-69*r + 330, z_sol)\n\n# solve r\nr_sol = sp.solve(r_eq, r)[0]\n\n# print the result\nprint(r_sol)",
    "correct": false
  },
  {
    "ans": "-8",
    "gt": "-8",
    "err": false,
    "question": "Suppose 0 = 2*a - 0*a - 160. Suppose -4*v + 4*n + n = -a, 27 = v - 3*n. What is the second derivative of v*y - 7*y - 4*y**2 - 9*y wrt y? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\na, v, n, y = sp.symbols('a v n y')\n\n# define the equations\neq1 = sp.Eq(0, 2*a - 0*a - 160)\neq2 = sp.Eq(-4*v + 4*n + n, -a)\neq3 = sp.Eq(v - 3*n, 27)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2,eq3), (a, v, n))\n\n# substitute the solutions back into the equation\neq = v*y - 7*y - 4*y**2 - 9*y\neq = eq.subs(solution)\n\n# calculate the second derivative of the equation wrt y\nsecond_derivative = sp.diff(eq, y, 2)\n\n# print the result\nprint(second_derivative)",
    "correct": true
  },
  {
    "ans": "-22.5",
    "gt": "-22.5",
    "err": false,
    "question": "45 divided by -2 Let's write a program.",
    "output": "print(45 / -2)",
    "correct": true
  },
  {
    "ans": "-1",
    "gt": "-1.0",
    "err": false,
    "question": "Divide -2840 by 2840. Let's write a program.",
    "output": "a = -2840\nb = 2840\n\nresult = a / b\n\nprint(result)",
    "correct": false
  },
  {
    "ans": "-792",
    "gt": "-792",
    "err": false,
    "question": "Let y(t) = -t**3 - 86*t**2 + 168*t + 6255. Give y(-87). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nt = sp.symbols('t')\n\n# define the function\ny = -t**3 - 86*t**2 + 168*t + 6255\n\n# substitute t with -87\ny_at_minus_87 = y.subs(t, -87)\n\n# print the result\nprint(y_at_minus_87)",
    "correct": true
  },
  {
    "ans": "16",
    "gt": "16",
    "err": false,
    "question": "8 + 19 - -5 - 16 Let's write a program.",
    "output": "print(8 + 19 - -5 - 16)",
    "correct": true
  },
  {
    "ans": "65",
    "gt": "65",
    "err": false,
    "question": "Let w(a) = 65 - 8770*a. Give w(0). Let's write a program.",
    "output": "def w(a):\n    return 65 - 8770*a\n\nprint(w(0))",
    "correct": true
  },
  {
    "ans": "905",
    "gt": "905",
    "err": false,
    "question": "Calculate the remainder when 152131 is divided by 911. Let's write a program.",
    "output": "remainder = 152131 % 911\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "31505",
    "gt": "5",
    "err": false,
    "question": "What is the hundreds digit of ((-18903)/4)/(9/(-60))? Let's write a program.",
    "output": "hundreds_digit = ((-18903)/4)/(9/(-60))\nhundreds_digit = hundreds_digit * 100\nhundreds_digit = hundreds_digit // 100\nprint(hundreds_digit)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 2, in run_it\nModuleNotFoundError: No module named 'min'\n",
    "gt": "0.5",
    "err": true,
    "question": "What is the sixth smallest value in 0, -573, 1/2, -47, -3, -5? Let's write a program.",
    "output": "import min\n\n# define the values\nvalues = [0, -573, 1/2, -47, -3, -5]\n\n# find the sixth smallest value\nsixth_smallest = min(values)\n\n# print the result\nprint(sixth_smallest)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 15, in run_it\nTypeError: cannot unpack non-iterable Symbol object\n",
    "gt": "-4",
    "err": true,
    "question": "Solve 0 = -4*g + c - 3*c - 12, 2*g = 2*c - 12 for g. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nc, g = sp.symbols('c g')\n\n# define the equations\neq1 = sp.Eq(0, -4*g + c - 3*c - 12)\neq2 = sp.Eq(2*g, 2*c - 12)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (g, c))\n\n# print the result\nfor variable, value in solution:\n    print(variable, '=', value)",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "0.0",
    "err": false,
    "question": "0 * 2.06 Let's write a program.",
    "output": "print(0 * 2.06)",
    "correct": false
  },
  {
    "ans": "87",
    "gt": "87",
    "err": false,
    "question": "Calculate the remainder when 34311 is divided by 138. Let's write a program.",
    "output": "remainder = 34311 % 138\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-7",
    "gt": "-7.0",
    "err": false,
    "question": "What is the value of (80/(-360))/((-24)/(-756))? Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpression = (80/(-360))/((-24)/(-756))\n\n# calculate the value\nvalue = sp.simplify(expression)\n\n# print the result\nprint(value)",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "Let z = 738 + -735. Suppose -4*b - 16 = 0, -2*b = 2*p + 7 - 29. Suppose 0 = z*k - 12 - p. What is the remainder when k is divided by 3? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nb, k, p = sp.symbols('b k p')\n\n# solve the equations\nsolution = sp.solve((-4*b - 16, -2*b + 2*p + 7 - 29, k - (738 + -735)), (b, p, k))\n\n# calculate the remainder\nremainder = solution[k] % 3\n\n# print the remainder\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "0.0",
    "err": false,
    "question": "Let d be (-8*4/(-20))/(4/50). Calculate the remainder when (-30)/(-25)*d/3 is divided by 4. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nd = sp.symbols('d')\n\n# calculate d\nd = (-8*4/(-20))/(4/50)\n\n# calculate (-30)/(-25)*d/3\nresult = (-30)/(-25)*d/3\n\n# calculate the remainder when the result is divided by 4\nremainder = result % 4\n\n# print the remainder\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "12",
    "gt": "12",
    "err": false,
    "question": "Let i(d) = 3*d**2 + 38*d - 14. Calculate the remainder when i(-14) is divided by 30. Let's write a program.",
    "output": "import sympy as sp\n\n# define the function\nd = sp.symbols('d')\ni = 3*d**2 + 38*d - 14\n\n# calculate the remainder\nremainder = i.subs(d, -14) % 30\n\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "1",
    "err": false,
    "question": "Let j = 63 - 60. Let r = -8 + 1. Let v = r + 9. What is the remainder when j is divided by v? Let's write a program.",
    "output": "j = 63 - 60\nr = -8 + 1\nv = r + 9\n\nremainder = j % v\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-6",
    "gt": "-6",
    "err": false,
    "question": "Let j(w) = -2*w**2 - 85*w + 37. Calculate j(-43). Let's write a program.",
    "output": "def j(w):\n    return -2*w**2 - 85*w + 37\n\nprint(j(-43))",
    "correct": true
  },
  {
    "ans": "17",
    "gt": "17",
    "err": false,
    "question": "Let y = 62 + -37. Let n = y - 35. Let r be 20*1 + 6 + n. Which is greater: 17 or r? Let's write a program.",
    "output": "y = 62 + -37\nn = y - 35\nr = 20*1 + 6 + n\n\nif 17 > r:\n    print(17)\nelse:\n    print(r)",
    "correct": true
  },
  {
    "ans": "24",
    "gt": "24",
    "err": false,
    "question": "Let a(i) = -81*i - 9. Let x be a(-1). What is the greatest common divisor of 48 and x? Let's write a program.",
    "output": "import math\n\n# define the function\ndef a(i):\n    return -81*i - 9\n\n# calculate x\nx = a(-1)\n\n# calculate the greatest common divisor of 48 and x\ngcd = math.gcd(48, x)\n\nprint(gcd)",
    "correct": true
  },
  {
    "ans": "6",
    "gt": "4",
    "err": false,
    "question": "What is the hundred thousands digit of 68432683? Let's write a program.",
    "output": "hundred_thousands_digit = 6\nprint(hundred_thousands_digit)",
    "correct": false
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "What is the cube root of 114 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate cube root of 114\ncube_root = math.pow(114, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(cube_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Let n(y) be the first derivative of -y**3/3 + 2*y**2 - 2*y + 41. Give n(2). Let's write a program.",
    "output": "import sympy as sp\n\n# Define the variable\ny = sp.symbols('y')\n\n# Define the function\nf = -y**3/3 + 2*y**2 - 2*y + 41\n\n# Calculate the derivative\nn = sp.diff(f, y)\n\n# Calculate the value of the derivative at y=2\nvalue = n.subs(y, 2)\n\n# Print the result\nprint(value)",
    "correct": true
  },
  {
    "ans": "-5",
    "gt": "-5",
    "err": false,
    "question": "What is (0 - -3) + (-3 - 3) - 2? Let's write a program.",
    "output": "print((0 - -3) + (-3 - 3) - 2)",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "5",
    "err": false,
    "question": "Let n = 356 - -9395. What is the tens digit of n? Let's write a program.",
    "output": "n = 356 - -9395\n# Python program to find the tens digit of n\ntens_digit = n // 10 % 10\nprint(tens_digit)",
    "correct": true
  },
  {
    "ans": "63",
    "gt": "63",
    "err": false,
    "question": "What is the highest common divisor of 693 and 24015537? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 693\nnum2 = 24015537\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "13849",
    "gt": "13849",
    "err": false,
    "question": "Simplify (sqrt(171) + 2*(-4*sqrt(171) - sqrt(171)))**2 + -2. Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (sp.sqrt(171) + 2*(-4*sp.sqrt(171) - sp.sqrt(171)))**2 + -2\n\n# simplify the expression\nsimplified_expr = sp.simplify(expr)\n\n# print the result\nprint(simplified_expr)",
    "correct": true
  },
  {
    "ans": "11",
    "gt": "1",
    "err": false,
    "question": "Let x be 15/6 - (-3)/6. What is the tens digit of x/18 + 142/12? Let's write a program.",
    "output": "x = 15/6 - (-3)/6\nx_tens_digit = x // 18 % 10\n\nresult = x_tens_digit + 142/12\nprint(int(result))",
    "correct": false
  },
  {
    "ans": "-15",
    "gt": "-0.049",
    "err": false,
    "question": "Which is the fourth smallest value?  (a) -15  (b) -0.049  (c) -7  (d) -4 Let's write a program.",
    "output": "a = -15\nb = -0.049\nc = -7\nd = -4\n\nfourth_smallest = min(a, b, c, d)\n\nprint(fourth_smallest)",
    "correct": false
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Suppose -24*t = -733 - 6539. What is the units digit of t? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nt = sp.symbols('t')\n\n# define the equation\nequation = sp.Eq(-24*t, -733 - 6539)\n\n# solve the equation\nsolution = sp.solve(equation, t)\n\n# get the units digit of the solution\nunits_digit = solution[0] % 10\n\nprint(units_digit)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "Solve -73*q + 74*q = 2 for q. Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\n\n# define the variable\nq = symbols('q')\n\n# define the equation\neq = Eq(-73*q + 74*q, 2)\n\n# solve the equation\nsolution = solve(eq, q)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "6",
    "gt": "3",
    "err": false,
    "question": "Suppose 6384 - 2034 = 50*z. What is the highest common divisor of z and 12? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 6384\nnum2 = 2034\n\n# calculate the difference\ndiff = num1 - num2\n\n# calculate the highest common divisor of diff and 12\nz = math.gcd(diff, 12)\n\nprint(z)",
    "correct": false
  },
  {
    "ans": "2386",
    "gt": "2386",
    "err": false,
    "question": "What is the square root of 5694908 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the square root of 5694908\nsqrt = math.sqrt(5694908)\n\n# round to the nearest integer\nnearest_int = round(sqrt)\n\nprint(nearest_int)",
    "correct": true
  },
  {
    "ans": "-10",
    "gt": "-10",
    "err": false,
    "question": "(-8 + 7 - -5) + -20 - (-3 - 3) Let's write a program.",
    "output": "print((-8 + 7 - -5) + -20 - (-3 - 3))",
    "correct": true
  },
  {
    "ans": "-0.16",
    "gt": "-0.16",
    "err": false,
    "question": "What is the nearest to -0.1 in -14, 2, -0.16, 1/8, -4? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnumbers = [-14, 2, -0.16, 1/8, -4]\n\n# find the nearest to -0.1\nnearest = min(numbers, key=lambda x:abs(x+0.1))\n\nprint(nearest)",
    "correct": true
  },
  {
    "ans": "10",
    "gt": "10",
    "err": false,
    "question": "Let x(i) = 3*i**2 + 77*i - 156. Calculate x(2). Let's write a program.",
    "output": "def x(i):\n    return 3*i**2 + 77*i - 156\n\nprint(x(2))",
    "correct": true
  },
  {
    "ans": "15",
    "gt": "15",
    "err": false,
    "question": "What is the fifth root of 707214 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the fifth root of 707214\nfifth_root = math.pow(707214, 1/5)\n\n# round to the nearest integer\nnearest_integer = round(fifth_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "783",
    "gt": "783",
    "err": false,
    "question": "What is the third root of 479403953 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# calculate the third root of 479403953\nthird_root = math.pow(479403953, 1/3)\n\n# round to the nearest integer\nnearest_integer = round(third_root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "57",
    "gt": "57",
    "err": false,
    "question": "Let y(w) = 2*w**3 - 58*w**2 + 10*w + 22. Calculate the remainder when y(29) is divided by 85. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nw = sp.symbols('w')\n\n# define the function\ny = 2*w**3 - 58*w**2 + 10*w + 22\n\n# calculate the remainder\nremainder = y.subs(w, 29) % 85\n\n# print the remainder\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "-4",
    "gt": "-4",
    "err": false,
    "question": "Evaluate -3 - (-6 + 1 + 2 + 4). Let's write a program.",
    "output": "print(-3 - (-6 + 1 + 2 + 4))",
    "correct": true
  },
  {
    "ans": "-1",
    "gt": "-4",
    "err": false,
    "question": "Solve 0 = -5*s + 5*w - 15, -s = -27*w + 29*w + 6 for s. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\ns, w = sp.symbols('s w')\n\n# define the equations\neq1 = sp.Eq(0, -5*s + 5*w - 15)\neq2 = sp.Eq(-s, -27*w + 29*w + 6)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (s, w))\n\n# print the result\nfor var in solution:\n    print(var, solution[var])",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "-7",
    "err": false,
    "question": "Let f = -2 + 5. Let p(w) be the first derivative of w**3/3 - w**2 + w + 24. Let k be p(f). Let o(h) = -h**3 + 3*h**2 + 3*h - 3. Determine o(k). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw = sp.symbols('w')\nh = sp.symbols('h')\n\n# define the function p(w)\np = w**3/3 - w**2 + w + 24\n\n# calculate the derivative of p(w)\np_prime = sp.diff(p, w)\n\n# calculate the value of w where the derivative is zero\nw_critical = sp.solve(p_prime, w)[0]\n\n# substitute the critical point w_critical into the function o(h)\no = -h**3 + 3*h**2 + 3*h - 3\no_critical = o.subs(h, w_critical)\n\n# print the result\nprint(o_critical)",
    "correct": false
  },
  {
    "ans": "0",
    "gt": "-0.0",
    "err": false,
    "question": "Calculate 0/(-5)*(-15)/(-45). Let's write a program.",
    "output": "print(0/(-5)*(-15)/(-45))",
    "correct": false
  },
  {
    "ans": "-493",
    "gt": "-3.0",
    "err": false,
    "question": "Let u(j) = j**3 - 16*j**2 - 13*j - 33. Let x be u(8). Let h = -648 - x. Let f = -2.6 - 0.4. Which is the second smallest value?  (a) 4/5  (b) f  (c) h  (d) -5 Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nj = sp.symbols('j')\n\n# define the function u(j)\nu = j**3 - 16*j**2 - 13*j - 33\n\n# calculate x\nx = u.subs(j, 8)\n\n# calculate h\nh = -648 - x\n\n# define f\nf = -2.6 - 0.4\n\n# calculate the values of u(j), x, h and f\nvalues = [u.subs(j, j_val) for j_val in [4/5, f, h, -5]]\n\n# find the second smallest value\nsecond_smallest_value = min(values)\n\n# print the result\nprint(second_smallest_value)",
    "correct": false
  },
  {
    "ans": "-0.65",
    "gt": "-0.65",
    "err": false,
    "question": "What is 13 divided by -20? Let's write a program.",
    "output": "print(13 / -20)",
    "correct": true
  },
  {
    "ans": "3",
    "gt": "3",
    "err": false,
    "question": "Suppose 11*q - 475 - 1021 = 0. Let f = q - 136. Solve 3*t - 2 - 7 = f for t. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nq, f, t = sp.symbols('q f t')\n\n# define the first equation\neq1 = sp.Eq(11*q - 475 - 1021, 0)\n\n# solve the first equation for q\nsolution_q = sp.solve(eq1, q)[0]\n\n# calculate f\nf = solution_q - 136\n\n# define the second equation\neq2 = sp.Eq(3*t - 2 - 7, f)\n\n# solve the second equation for t\nsolution_t = sp.solve(eq2, t)[0]\n\n# print the result\nprint(solution_t)",
    "correct": true
  },
  {
    "ans": "-1.5",
    "gt": "-0.2",
    "err": false,
    "question": "Let c = 443 - 363.6. Let s = c - 79. What is the nearest to 0 in s, -0.2, -3/2? Let's write a program.",
    "output": "c = 443 - 363.6\ns = c - 79\nnearest_to_0 = min(s, -0.2, -3/2)\nprint(nearest_to_0)",
    "correct": false
  },
  {
    "ans": "3",
    "gt": "[3]",
    "err": false,
    "question": "Let r(x) = x - 1. Let s(j) = 1 - 4*j. Let c(d) = -3*r(d) - s(d). What are the prime factors of c(1)? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nd = sp.symbols('d')\n\n# define the functions\nr = d - 1\ns = 1 - 4*d\nc = -3*r - s\n\n# calculate c(1)\nc_1 = c.subs(d, 1)\n\n# factorize c(1)\nfactors = sp.factor(c_1)\n\n# print the prime factors\nprint(factors.as_ordered_factors())",
    "correct": false
  },
  {
    "ans": "5",
    "gt": "5.0",
    "err": false,
    "question": "Calculate (15/(-4))/((-513)/114)*6. Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = (15/(-4))/((-513)/114)*6\n\n# calculate the result\nresult = sp.simplify(expr)\n\n# print the result\nprint(result)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/polys/polytools.py\", line 5009, in rem\n    (F, G), opt = parallel_poly_from_expr((f, g), *gens, **args)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/polys/polytools.py\", line 4504, in parallel_poly_from_expr\n    return _parallel_poly_from_expr(exprs, opt)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/polys/polytools.py\", line 4557, in _parallel_poly_from_expr\n    raise PolificationFailed(opt, origs, exprs, True)\nsympy.polys.polyerrors.PolificationFailed: Cannot construct polynomials from 40, 974/25\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 19, in <module>\n  File \"<string>\", line 15, in run_it\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/polys/polytools.py\", line 5011, in rem\n    raise ComputationFailed('rem', 2, exc)\nsympy.polys.polyerrors.ComputationFailed: rem(40, 974/25) failed without generators\n",
    "gt": "12",
    "err": true,
    "question": "Let j = -9 - -11. Let o(d) = -3*d + 2*d**2 + 4 - d**j + 0*d**2. Calculate the remainder when 40 is divided by o(5). Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nd = sp.symbols('d')\nj = sp.symbols('j')\n\n# define the function o(d)\no = -3*d + 2*d**2 + 4 - d**j + 0*d**2\n\n# substitute j = -9 - -11 (j = -2)\no = o.subs(j, -2)\n\n# calculate the remainder when 40 is divided by o(5)\nremainder = sp.rem(40, o.subs(d, 5))\n\n# print the result\nprint(remainder)",
    "correct": false
  },
  {
    "ans": "9",
    "gt": "9",
    "err": false,
    "question": "-4 - (-10 - (8 + -4)) - (-1 - -2) Let's write a program.",
    "output": "print(-4 - (-10 - (8 + -4)) - (-1 - -2))",
    "correct": true
  },
  {
    "ans": "1234",
    "gt": "1234",
    "err": false,
    "question": "Calculate the highest common divisor of 27148 and 80060686. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 27148\nnum2 = 80060686\n\n# calculate the highest common divisor\nhcd = math.gcd(num1, num2)\n\n# print the result\nprint(hcd)",
    "correct": true
  },
  {
    "ans": "1",
    "gt": "[0, 1]",
    "err": false,
    "question": "Determine q, given that -q**2/5 + q/5 = 0. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nq = sp.symbols('q')\n\n# define the equation\nequation = sp.Eq(-q**2/5 + q/5, 0)\n\n# solve the equation\nsolution = sp.solve(equation, q)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": false
  },
  {
    "ans": "200",
    "gt": "200",
    "err": false,
    "question": "40 times 5 Let's write a program.",
    "output": "print(40*5)",
    "correct": true
  },
  {
    "ans": "5",
    "gt": "5.0",
    "err": false,
    "question": "Calculate -156680 divided by -31336. Let's write a program.",
    "output": "print(-156680 / -31336)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 16, in run_it\nKeyError: 0\n",
    "gt": "-3",
    "err": true,
    "question": "Solve -4*d = 5*l + 19, -4*d - 25 = -225*l + 232*l for l. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nd, l = sp.symbols('d l')\n\n# define the equations\neq1 = sp.Eq(-4*d, 5*l + 19)\neq2 = sp.Eq(-4*d - 25, -225*l + 232*l)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2), (d, l))\n\n# print the result\nfor i in range(len(solution)):\n    print(solution[i])",
    "correct": false
  },
  {
    "ans": "2",
    "gt": "-0.4",
    "err": false,
    "question": "Which is the smallest value?  (a) 80796/4813  (b) 2  (c) -0.4 Let's write a program.",
    "output": "a = 80796/4813\nb = 2\nc = -0.4\n\nif a < b:\n    print(a)\nelif a < c:\n    print(a)\nelse:\n    print(b)",
    "correct": false
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 17, in run_it\nTypeError: list indices must be integers or slices, not Symbol\n",
    "gt": "7",
    "err": true,
    "question": "Suppose -6 = -w + 1. Let o = 9 - w. Suppose 3*h - 18 = -o*f + 5*f, 0 = -5*h + 2*f + 33. What is the units digit of h? Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nw, o, h, f = sp.symbols('w o h f')\n\n# given equations\neq1 = sp.Eq(-w + 1, 6)\neq2 = sp.Eq(w, 9 - o)\neq3 = sp.Eq(3*h - 18, -o*f + 5*f)\neq4 = sp.Eq(-5*h + 2*f + 33, 0)\n\n# solve the system of equations\nsolution = sp.solve((eq1,eq2,eq3,eq4), (w, o, h, f))\n\n# calculate the units digit of h\nunits_digit_h = solution[h] % 10\n\nprint(units_digit_h)",
    "correct": false
  },
  {
    "ans": "137",
    "gt": "137",
    "err": false,
    "question": "What is the greatest common factor of 411 and 959? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 411\nnum2 = 959\n\n# calculate the greatest common factor\ngcf = math.gcd(num1, num2)\n\n# print the result\nprint(gcf)",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "9",
    "err": false,
    "question": "What is the hundred thousands digit of 2976716? Let's write a program.",
    "output": "def find_hundred_thousands_digit(n):\n    return n // 1000000\n\nprint(find_hundred_thousands_digit(2976716))",
    "correct": false
  },
  {
    "ans": "0.5",
    "gt": "0.5",
    "err": false,
    "question": "1/((-30)/12)*(-15)/12 Let's write a program.",
    "output": "import sympy as sp\n\n# define the expression\nexpr = 1/((-30)/12)*(-15)/12\n\n# simplify the expression\nsimplified_expr = sp.simplify(expr)\n\nprint(simplified_expr)",
    "correct": true
  },
  {
    "ans": "133.56",
    "gt": "133.56",
    "err": false,
    "question": "What is the product of -222.6 and -0.6? Let's write a program.",
    "output": "product = -222.6 * -0.6\nprint(product)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 10, in run_it\nNameError: name 'g' is not defined\n",
    "gt": "3 1 -4",
    "err": true,
    "question": "Let l = 30 - 30. Suppose l = -5*t + 7 + 8. Suppose -15 = -5*g, -2*i - 2*i - 31 = -5*g. Sort t, i, 1 in decreasing order. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nl, t, i = sp.symbols('l t i')\n\n# given equations\neq1 = sp.Eq(l, 30 - 30)\neq2 = sp.Eq(l, -5*t + 7 + 8)\neq3 = sp.Eq(-15, -5*g)\neq4 = sp.Eq(-2*i - 2*i - 31, -5*g)\n\n# solve the equations\nsolution = sp.solve((eq1,eq2,eq3,eq4), (l, t, i, g))\n\n# sort t, i, 1 in decreasing order\nsorted_values = sorted(solution[t], reverse=True)\n\nprint(sorted_values)",
    "correct": false
  },
  {
    "ans": "21",
    "gt": "21",
    "err": false,
    "question": "What is the highest common factor of 1281 and 73479? Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 1281\nnum2 = 73479\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "0",
    "gt": "0",
    "err": false,
    "question": "Let j(b) be the second derivative of b**5/20 + 7*b**4/12 + b**2 - 2*b. Let y = -27 + 28. Calculate the remainder when j(-7) is divided by y. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nb = sp.symbols('b')\n\n# define the function j(b)\nj = sp.diff(b**5/20 + 7*b**4/12 + b**2 - 2*b, b, 2)\n\n# define y = -27 + 28\ny = -27 + 28\n\n# calculate the remainder when j(-7) is divided by y\nremainder = j.subs(b, -7) % y\n\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "23",
    "gt": "23",
    "err": false,
    "question": "Calculate (-9 - -23) + (-8 - -29 - 5) + -7. Let's write a program.",
    "output": "print((-9 - -23) + (-8 - -29 - 5) + -7)",
    "correct": true
  },
  {
    "ans": "13",
    "gt": "13",
    "err": false,
    "question": "Calculate the highest common factor of 65 and 1941017. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 65\nnum2 = 1941017\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "-5",
    "gt": "-0.1",
    "err": false,
    "question": "Suppose 0*v = 2*v + 10. Let w = 417 + -1083. Let o = 664 + w. What is the nearest to 2 in o, -0.1, v? Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\n\n# define the variables\nv = symbols('v')\nw = symbols('w')\no = symbols('o')\n\n# define the equations\neq1 = Eq(0*v, 2*v + 10)\neq2 = Eq(w, 417 + -1083)\neq3 = Eq(o, 664 + w)\n\n# solve the equations\nsolution = solve((eq1, eq2, eq3), (v, w, o))\n\n# calculate the nearest to 2\nnearest_to_2 = min(2, solution[v], -0.1)\n\nprint(nearest_to_2)",
    "correct": false
  },
  {
    "ans": "171",
    "gt": "171",
    "err": false,
    "question": "Calculate the highest common factor of 1197 and 66519. Let's write a program.",
    "output": "import math\n\n# define the numbers\nnum1 = 1197\nnum2 = 66519\n\n# calculate the highest common factor\nhcf = math.gcd(num1, num2)\n\n# print the result\nprint(hcf)",
    "correct": true
  },
  {
    "ans": "19",
    "gt": "19",
    "err": false,
    "question": "Suppose 44 = 2*k - 0*k. Suppose v = 39 + 53. Let q = -51 + v. What is the remainder when q is divided by k? Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\n\n# define the variables\nk = symbols('k')\nv = symbols('v')\nq = symbols('q')\n\n# define the equations\neq1 = Eq(44, 2*k - 0*k)\neq2 = Eq(v, 39 + 53)\neq3 = Eq(q, -51 + v)\n\n# solve the equations\nsolution = solve((eq1, eq2, eq3), (k, v, q))\n\n# find the remainder when q is divided by k\nremainder = solution[q] % solution[k]\n\nprint(remainder)",
    "correct": true
  },
  {
    "ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 16, in run_it\nUnboundLocalError: cannot access local variable 't' where it is not associated with a value\n",
    "gt": "4",
    "err": true,
    "question": "Let s(z) = 8*z**2 - 8*z - 3. Let f(i) = -26*i**2 + 24*i + 10. Let q(w) = 3*f(w) + 10*s(w). Let v be q(5). Solve -3*t + v = -2 for t. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nz, i, w = sp.symbols('z i w')\n\n# define the functions\ns = 8*z**2 - 8*z - 3\nf = -26*i**2 + 24*i + 10\nq = 3*f + 10*s\n\n# calculate v\nv = q.subs(i, 5)\n\n# solve for t\nt = sp.solve(-3*t + v, t)\n\n# print the result\nfor value in t:\n    print(value)",
    "correct": false
  },
  {
    "ans": "-14",
    "gt": "-14",
    "err": false,
    "question": "Solve 177*n + 4328 - 1850 = 0 for n. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nn = sp.symbols('n')\n\n# define the equation\nequation = sp.Eq(177*n + 4328 - 1850, 0)\n\n# solve the equation\nsolution = sp.solve(equation, n)\n\n# print the solution\nfor sol in solution:\n    print(sol)",
    "correct": true
  },
  {
    "ans": "-13",
    "gt": "13",
    "err": false,
    "question": "Suppose u - 15 = 11. Differentiate u - 15 + 8*l + 5*l - 22 with respect to l. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nl = sp.symbols('l')\n\n# define the function\nu = 11 + 15 - 8*l - 5*l + 22\n\n# differentiate the function with respect to l\ndu_dl = sp.diff(u, l)\n\n# print the result\nprint(du_dl)",
    "correct": false
  },
  {
    "ans": "8",
    "gt": "8",
    "err": false,
    "question": "What is the fourth root of 3273 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Calculate the fourth root of 3273\nroot = math.pow(3273, 1/4)\n\n# Round to the nearest integer\nnearest_integer = round(root)\n\nprint(nearest_integer)",
    "correct": true
  },
  {
    "ans": "-1",
    "gt": "-1",
    "err": false,
    "question": "What is the value of 6 + 6 + (10 + -31 - 3) + 11? Let's write a program.",
    "output": "print(6 + 6 + (10 + -31 - 3) + 11)",
    "correct": true
  },
  {
    "ans": "8",
    "gt": "8",
    "err": false,
    "question": "What is the value of -4 - 5 - -12 - -5? Let's write a program.",
    "output": "print(-4 - 5 - -12 - -5)",
    "correct": true
  },
  {
    "ans": "10",
    "gt": "10",
    "err": false,
    "question": "What is the value of 2 + 16 - (-8 + -14 + 30)? Let's write a program.",
    "output": "print(2 + 16 - (-8 + -14 + 30))",
    "correct": true
  },
  {
    "ans": "2",
    "gt": "2",
    "err": false,
    "question": "What is the eighth root of 1228 to the nearest integer? Let's write a program.",
    "output": "import math\n\n# Calculate the eighth root of 1228\nroot = math.pow(1228, 1/8)\n\n# Round to the nearest integer\nnearest_integer = round(root)\n\nprint(nearest_integer)",
    "correct": true
  }
]