[
  {
    "ans": "C",
    "err": false,
    "gt": "B",
    "raw_ans": "10",
    "question": "The plates of a capacitor are charged to a potential difference of 5 V. If the capacitance is 2 mF, what is the charge on the positive plate?\nAnswer Choices: (A) 0.005 C (B) 0.01 C (C) 0.02 C (D) 0.5 C Let's write a program.",
    "output": "V=5\r\nC=2\r\ncharge_on_positive_plate=C*V\r\nprint(charge_on_positive_plate)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "A",
    "raw_ans": "Electric field produced by an infinitely long charged cylinder\nElectric field produced by an infinite plane of charge\nMagnetic field produced by an infinitely long, straight current-carrying wire",
    "question": "Which of these quantities decreases as the inverse square of distance for distances far from the objects producing the fields?\nAnswer Choices: (A) the electric field produced by a finite-length charged rod (B) the electric field produced by an infinitely long charged cylinder (C) the electric field produced by an infinite plane of charge (D) the magnetic field produced by an infinitely long, straight current-carrying wire Let's write a program.",
    "output": "inverse_square_distance = ['Electric field produced by a finite-length charged rod', \n                                  'Electric field produced by an infinitely long charged cylinder',\n                                  'Electric field produced by an infinite plane of charge',\n                                  'Magnetic field produced by an infinitely long, straight current-carrying wire']\n\nfor i in inverse_square_distance:\n    if i == 'Electric field produced by a finite-length charged rod':\n        continue\n    else:\n        print(i)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "-3",
    "question": "A solid, metal object is isolated from other charges and has charge distributed on its surface. The charge distribution is not uniform. It may be correctly concluded that the\nAnswer Choices: (A) electric field outside the object is zero (B) the electric field outside the object is equal to the electric field inside the object (C) the electric field outside the object is directly proportional to the distance away from the center of mass of the object (D) the electric field outside the object, but very close to the surface, is equal to the surface charge density at any location divided by the permittivity of free space Let's write a program.",
    "output": "from sympy import Eq, Symbol, solve\r\n\r\n# x = electric field outside the object\r\nx = Symbol('x')\r\neq = Eq((x-1)*(x+3), 0)\r\n\r\nanswer = solve(eq)\r\n\r\nprint(answer[0])",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "Greater",
    "question": "Standing waves are produced by a 100-Hz generator in a string of fixed length. The tension in the string is increased until a new set of standing waves is produced. Will the wavelength of the new standing waves be greater than or less than the wavelength of the original standing waves?\nAnswer Choices: (A) Less, because the tension in the string varies directly with the wave speed, which varies inversely with the wavelength. (B) Greater, because the tension in the string varies directly with the wave speed, which varies inversely with the wavelength. (C) Greater, because the tension in the string varies directly with the wave speed, which varies directly with the wavelength. (D) Less, because the tension in the string varies directly with the wave speed, which varies directly with the wavelength. Let's write a program.",
    "output": "original_frequency = 100\ntension_variation = \"Greater\"\n\nprint(tension_variation)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "E",
    "gt": "D",
    "err": false,
    "question": "Two identical capacitors are hooked in parallel to an external circuit. Which of the following quantities must be the same for both capacitors? I. the charge stored on the capacitor II.  the voltage across the capacitor III. the capacitance of the capacitor\nAnswer Choices: (A) I only (B) II only (C) II and III only (D) (E) I, II, and III Let's write a program.",
    "output": "Let's think about the multi-choice question step by step.\nLet us assume there are two capacitors C1 and C2.\nWhen they are hooked in parallel, the total capacitance becomes C1 + C2.\nIf the total charge stored in the parallel combination of the capacitors is Q,\nthen Q = C1 + C2\nThus the total charge stored in the capacitors must be the same.\nThe answer is E",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "500.0",
    "question": "A 1-kg object is released from rest at the top of a rough-surfaced incline. The object slides without rotating to the bottom of the incline. The object\u2019s kinetic energy at the bottom must be\nAnswer Choices: (A) Equal to the block\u2019s gravitational potential energy when it was released, because total mechanical energy must be conserved. (B) Equal to the block\u2019s gravitational potential energy when it was released, because the gain in kinetic energy compensates for the mechanical energy lost to thermal energy on the rough incline. (C) Less than the block\u2019s gravitational potential energy when it was released, because the gravitational potential energy was converted both to thermal energy and to kinetic energy. (D) Less than the block\u2019s gravitational potential energy when it was released, because the work done by the friction force must be greater than the block\u2019s gain in kinetic energy. Let's write a program.",
    "output": "total_energy_released=1000 #in Joules\n#As the block slides down the incline,it's potential energy is converted into kinetic energy and heat energy.\n#Let's assume the block's gain in kinetic energy is K,then the energy converted into heat would be (total_energy_released-K).\n#But the block's gain in kinetic energy is less than the potential energy it had when it was released,because some of the energy was converted into heat.\n#Thus we can write the equation as:\n#(total_energy_released-K) = (total_energy_released-K) + K\n#Solving this equation for K gives:\nK = total_energy_released/2\nprint(K)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "A",
    "raw_ans": "False",
    "question": "A student is experimenting with a simple spring-block oscillator of spring constant k and amplitude A. The block attached to the spring has a mass of m. If the student places a small block of mass m on top of the original block, which of the following is true?\nAnswer Choices: (A) The small block is most likely to slide off when the original block is at maximum displacement from the equilibrium position, but will not slide off as long as the coefficient of static friction between the blocks is greater than kA/[(M+m)g]. (B) The small block is most likely to slide off when the original block is at the equilibrium position, but will not slide off as long as the coefficient of static friction between the blocks is greater than kA/[(M+m)g]. (C) The small block is most likely to slide off when the original block is at maximum displacement from the equilibrium position, but will not slide off as long as the coefficient of static friction between the blocks is greater than (M+m)g/(kA). (D) The small block is most likely to slide off when the original block is at the equilibrium position, but will not slide off as long as the coefficient of static friction between the blocks is greater than (M+m)g/(kA). Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\n\n# define the variables\nk, A, m, M = symbols('k A m M')\n\n# the condition for the small block to slide off is when the coefficient of static friction between the blocks is less than or equal to (M+m)g/(kA)\ncondition = Eq((M+m)*9.8/(k*A), 1)\n\n# print the result\nprint(condition.subs({k: 100, A: 1, m: 1, M: 1}))",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "C",
    "raw_ans": "500.0",
    "question": "How much work is required to charge a 10 \u00b5F capacitor to a potential difference of 100 V ?\nAnswer Choices: (A) 0.005 J (B) 0.01 J (C) 0.05 J (D) 0.1 J Let's write a program.",
    "output": "import math\n\n# define the variables\ncapacitance = 10  # in microfarads\npotential_difference = 100  # in volts\n\n# calculate the work required\nwork = math.pow(potential_difference, 2) / (2 * capacitance)\n\n# print the result\nprint(work)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "D",
    "err": false,
    "gt": "A",
    "raw_ans": "m*v0**2/(g*\u03bc)",
    "question": "A box of mass m slides on a horizontal surface with initial speed v0. It feels no forces other than gravity and the force from the surface. If the coefficient of kinetic friction between the box and the surface is \u03bc, how far does the box slide before coming to rest?\nAnswer Choices: (A) v0^2/(2\u03bcg) (B) v0^2/(\u03bcg) (C) 2v0^2/(\u03bcg) (D) mv0^2/(\u03bcg) Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nm, v0, \u03bc, g = sp.symbols('m v0 \u03bc g')\n\n# calculate the distance the box slides before coming to rest\n# the energy of the box is reduced entirely to friction\n# so the distance is the total energy divided by the force of friction\ndistance = (m * v0**2) / (\u03bc * g)\n\nprint(distance)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "B",
    "raw_ans": "0.510204081632653",
    "question": "A soccer ball, at rest on the ground, is kicked with an initial velocity of 10 m/s at a launch angle of 30\u00b0. Calculate its total flight time, assuming that air resistance is negligible.\nAnswer Choices: (A) 0.5 s (B) 1 s (C) 2 s (D) 4 s Let's write a program.",
    "output": "import math\n\n# define the initial velocity and angle\nV = 10 # in m/s\nangle = 30 # in degrees\n\n# calculate the time of flight\n# for a projectile, the time of flight is given by the formula: t = 2*h / V\n# where h is the maximum height reached by the projectile, and V is the initial velocity\n# in this case, the maximum height is given by the formula: h = V^2 * sin(angle) / 2g\n# where g is the acceleration due to gravity, which is approximately 9.8 m/s^2\ng = 9.8 # in m/s^2\nh = V**2 * math.sin(math.radians(angle)) / (2*g)\nt = 2 * h / V\n\nprint(t)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "gt": "D",
    "err": false,
    "question": "Two identical containers are filled with different gases. Container 1 is filled with hydrogen and container 2 is filled with nitrogen. Each container is set on a lab table and allowed to come to thermal equilibrium with the room. Which of the following correctly compares the properties of the two gases?\nAnswer Choices: (A) The average kinetic energy of the hydrogen gas is greater than the nitrogen gas. (B) The average force exerted on the container by the hydrogen gas is greater than the nitrogen gas. (C) The density of the hydrogen gas is less than the nitrogen gas. (D) The pressures of the gases cannot be compared without knowing the number of molecules in each container. Let's write a program.",
    "output": "import numpy as np\n\n# Hydrogen and nitrogen are both diatomic gases\n# So, the number of molecules in each container is 2\n\n# The average kinetic energy of a gas is proportional to the temperature\n# Since the gases are in thermal equilibrium, the average kinetic energy of the hydrogen gas is equal to the average kinetic energy of the nitrogen gas\n\n# The average force exerted on the container by the gas is proportional to the pressure\n# Since the gases are in thermal equilibrium, the average force exerted on the container by the hydrogen gas is equal to the average force exerted on the container by the nitrogen gas\n\n# The density of a gas is proportional to the number of molecules in the container and inversely proportional to the volume of the container\n# Since the number of molecules in each container is the same, the density of the hydrogen gas is inversely proportional to the volume of the container\n# Therefore, if the volume of the container is the same for both gases, the density of the hydrogen gas is less than the nitrogen gas\n\n# The pressure of a gas is proportional to the number of molecules in the container and inversely proportional to the volume of the container\n# Therefore, if the number of molecules in each container is the same, the pressures of the gases are the same\n\n# Therefore, The answer is D.",
    "correct": true
  },
  {
    "ans": "B",
    "gt": "D",
    "err": false,
    "question": "A girl of mass m and a boy of mass 2m are sitting on opposite sides of a see-saw with its fulcrum in the center. Right now, the boy and girl are equally far from the fulcrum, and it tilts in favor of the boy. Which of the following would NOT be a possible method to balance the see-saw?\nAnswer Choices: (A) Move the boy to half his original distance from the fulcrum. (B) Move the girl to double her original distance from the fulcrum. (C) Allow a second girl of mass m to join the first. (D) Move the fulcrum to half its original distance from the boy. Let's write a program.",
    "output": "import math\n\n# define the masses\nm1 = 1\nm2 = 2\n\n# initial distances\nd1 = 1\nd2 = 1\n\n# calculate the initial torque\ntorque = (m1 * d1) + (m2 * d2)\n\n# move the boy to half his original distance\nd2 = d2 / 2\n\n# calculate the new torque\nnew_torque = (m1 * d1) + (m2 * d2)\n\n# if the new torque is equal to the initial torque, it means the see-saw was balanced\nif new_torque == torque:\n    print(\"A\")\n\n# move the girl to double her original distance\nd1 = d1 * 2\n\n# calculate the new torque\nnew_torque = (m1 * d1) + (m2 * d2)\n\n# if the new torque is equal to the initial torque, it means the see-saw was balanced\nif new_torque == torque:\n    print(\"B\")\n\n# allow a second girl of mass m to join the first\nm1 = m1 + m2\n\n# calculate the new torque\nnew_torque = (m1 * d1) + (m2 * d2)\n\n# if the new torque is equal to the initial torque, it means the see-saw was balanced\nif new_torque == torque:\n    print(\"C\")\n\n# move the fulcrum to half its original distance from the boy\nd2 = d2 / 2\n\n# calculate the new torque\nnew_torque = (m1 * d1) + (m2 * d2)\n\n# if the new torque is equal to the initial torque, it means the see-saw was balanced\nif new_torque == torque:\n    print(\"D\")\n",
    "correct": false
  },
  {
    "ans": "A",
    "gt": "D",
    "err": false,
    "question": "When hot water is poured into a beaker containing cold alcohol, the temperature of the mixture will eventually reach the same temperature. Considering the scale of the size of the molecules of the fluids, which of the following is the primary reason for this phenomenon?\nAnswer Choices: (A) The high temperature water will rise to the top of the container until it has cooled and then mixes with the alcohol. (B) The molecules of the water continue to have a higher kinetic energy than the molecules of the alcohol, but the two liquids mix until the energy is spread evenly throughout the container. (C) The hot water produces thermal radiation that is absorbed by the cold alcohol until the kinetic energy of all the molecules is the same. (D) The water molecules collide with the alcohol molecules, transferring energy until the average kinetic energy of both the water and alcohol molecules are the same. Let's write a program.",
    "output": "primary_reason = 'The molecules of the water continue to have a higher kinetic energy than the molecules of the alcohol, but the two liquids mix until the energy is spread evenly throughout the container.'\nprint(primary_reason)",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "B",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 2:8: angular speed = 20\n",
    "question": "A solid sphere (I = 0.06 kg\u00b7m^2) spins freely around an axis through its center at an angular speed of 20 rad/s. It is desired to bring the sphere to rest by applying a friction force of magnitude 2.0 N to the sphere\u2019s outer surface, a distance of 0.30 m from the sphere\u2019s center. How much time will it take the sphere to come to rest?\nAnswer Choices: (A) 4 s (B) 2 s (C) 0.06 s (D) 0.03 s Let's write a program.",
    "output": "I = 0.06\nangular speed = 20\nfriction force = 2\ndistance = 0.3\ntime = ?\ntorque = friction force * distance\nI * angular speed = torque\ntime = I / torque\nprint(time)\n\n",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "D",
    "err": true,
    "gt": "B",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 4:20: radius_Earth = 6400 km\n",
    "question": "The radius of Mars is about half that of Earth; the mass of Mars is about one-tenth that of Earth. Which of the following is closest to the gravitational field at the surface of Mars?\nAnswer Choices: (A) 10 N/kg (B) 4 N/kg (C) 2 N/kg (D) 0.5 N/kg Let's write a program.",
    "output": "import math\n\n# Define the radius and mass of Earth\nradius_Earth = 6400 km\nmass_Earth = 6*10^24 kg\n\n# Calculate the gravitational field of Earth\ngravitational_field_Earth = (math.G * mass_Earth) / (radius_Earth)^2\n\n# Define the radius and mass of Mars\nradius_Mars = radius_Earth / 2\nmass_Mars = mass_Earth / 10\n\n# Calculate the gravitational field of Mars\ngravitational_field_Mars = (math.G * mass_Mars) / (radius_Mars)^2\n\n# Compare the gravitational field of Mars to that of Earth\ngravitational_field_ratio = gravitational_field_Mars / gravitational_field_Earth\n\n# Print the closest answer\nprint({'A': 10, 'B': 4, 'C': 2, 'D': 0.5}.get(gravitational_field_ratio))",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "A",
    "raw_ans": "-sigma/(2*epsilon_o)",
    "question": "Above an infinitely large plane carrying charge density \u03c3, the electric field points up and is equal to \u03c3/2\u03b5o. What is the magnitude and direction of the electric field below the plane?\nAnswer Choices: (A) \u03c3/2\u03b5o, down (B) \u03c3/2\u03b5o, up (C) \u03c3/\u03b5o, down (D) \u03c3/\u03b5o, up Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nsigma = sp.symbols('sigma')\nepsilon_o = sp.symbols('epsilon_o')\n\n# given electric field above the plane\nE_above = sigma/2/epsilon_o\n\n# the electric field below the plane will be equal but opposite in direction\nE_below = -E_above\n\n# print the result\nprint(E_below)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "796178343.9490446",
    "question": "A beam of electrons has speed 10^7 m/s. It is desired to use the magnetic field of the Earth, 5 \u00d7 10\u22125 T, to bend the electron beam into a circle. What will be the radius of this circle?\nAnswer Choices: (A) 1 nm (B) 1 \u03bcm (C) 1 mm (D) 1 m Let's write a program.",
    "output": "speed = 10**7 # m/s\r\nmagnetic_field = 5 * 10**-5 # T\r\nradius = speed * magnetic_field / (2 * 3.14 * 10**-7) # 2*3.14 for 2*pi\r\nprint(radius)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "100",
    "question": "An object is placed 100 cm from a plane mirror. How far is the image from the object?\nAnswer Choices: (A) 50 cm (B) 100 cm (C) 200 cm (D) 300 cm Let's write a program.",
    "output": "object_distance = 100\r\nimage_distance = 100\r\n\r\nprint(image_distance)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 1:29: horse_cart_acceleration=\tThe forward force of the horse on the cart is greater than the backward force of the cart on the horse, providing a forward acceleration.\n",
    "question": "A horse is attached to a cart that is at rest behind it. Which force, or combination of forces, explains how the horse-cart system can accelerate from rest?\nAnswer Choices: (A) The forward static friction force of the ground on the horse is greater than any friction forces acting backward on the cart, providing a forward acceleration. (B) The forward force of the horse on the cart is greater than the backward force of the cart on the horse, providing a forward acceleration. (C) The force of the horse\u2019s muscles on the rest of the horse-cart system provides the necessary acceleration. (D) The upward normal force of the ground on the horse is greater than the horse\u2019s weight, providing an upward acceleration. Let's write a program.",
    "output": "horse_cart_acceleration=\tThe forward force of the horse on the cart is greater than the backward force of the cart on the horse, providing a forward acceleration.\nprint(horse_cart_acceleration)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "D",
    "raw_ans": "-635.0",
    "question": "In a certain region, the electric field varies with the radius away from origin by the equation Er = \u20136r^2 + 4r + 3, where r is given in meters and E in N/C. The potential difference between the origin and the point (3, 4) is\nAnswer Choices: (A) \u2013165 V (B) \u2013120 V (C) 64 V (D) 185 V Let's write a program.",
    "output": "import math\n\n# define the variables\nr = math.sqrt(3**2 + 4**2)\n\n# define the equation\nE = -6*r**2 + 4*r + 3\n\n# calculate the potential difference\npotential_difference = E * r\n\nprint(potential_difference)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "B",
    "raw_ans": "300",
    "question": "A gas undergoes an expansion-compression cycle. If, plotted on a P-V diagram, the cycle is counterclockwise and the work is 300 J in magnitude, what was the heat transfer during this cycle?\nAnswer Choices: (A) 300 J into the system (B) 300 J out of the system (C) 600 J into the system (D) 600 J out of the system Let's write a program.",
    "output": "work = 300\nif work > 0:\n  heat_transfer = work\nelse:\n  heat_transfer = -work\nprint(heat_transfer)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "C",
    "raw_ans": "V**2/(2*R)",
    "question": "An ideal battery of constant voltage V supplies current to a circuit that has total resistance R. If R is doubled, what will happen to the total power dissipated by the circuit?\nAnswer Choices: (A) It will double. (B) It will quadruple. (C) It will be halved. (D) It will remain the same. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nV, R = sp.symbols('V R')\n\n# calculate the power dissipated by the circuit\nP = V**2 / R\n\n# double the resistance\nR_doubled = 2*R\n\n# calculate the new power\nP_new = V**2 / R_doubled\n\n# compare the old and new power\ndiff = P - P_new\n\n# print the result\nprint(diff)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 5, in <module>\n  File \"<string>\", line 3, in run_it\nTypeError: unsupported operand type(s) for ^: 'int' and 'float'\n",
    "question": "Ultraviolet light has a wavelength of about 6 \u00d7 10^-8 m. What is the frequency of this light?\nAnswer Choices: (A) 5 \u00d7 10^15 Hz (B) 0.5 Hz (C) 2 Hz (D) 20 Hz Let's write a program.",
    "output": "wavelength = 6*10**-8\nfrequency = 3*10^8/wavelength\nprint(frequency)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "D",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 13, in <module>\n  File \"<string>\", line 9, in run_it\nValueError: math domain error\n",
    "question": "Each of the following ionized isotopes is projected with the same speed into a uniform magnetic field B such that the isotope's initial velocity is perpendicular to B. Which combination of mass and charge would result in a circular path with the largest radius?\nAnswer Choices: (A) m = 16 u, q = \u20135 e (B) m = 17 u, q = \u20134 e (C) m = 18 u, q = \u20133 e (D) m = 20 u, q = \u20131 e Let's write a program.",
    "output": "import math\n\n# define the variables\nm_in_u = 16\nq_in_e = -5\n\n# calculate the radius of the circular path\nradius = math.sqrt((m_in_u*q_in_e) / (q_in_e**2))\n\n# print the result\nprint(radius)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "1.5915494309189535e-06",
    "question": "An electric dipole consists of a pair of equal but opposite point charges of magnitude 4.0 nC separated by a distance of 2.0 cm. What is the electric field strength at the point midway between the charges?\nAnswer Choices: (A) 0 (B) 9.0 \u00d7 10^4 N/C (C) 1.8 \u00d7 10^5 N/C (D) 7.2 \u00d7 10^5 N/C Let's write a program.",
    "output": "import math\n\n# define the distance and charge\nd = 2 * 10**-2 # in meters\nq = 4 * 10**-9 # in Coulombs\n\n# calculate the electric field at the midpoint\nE = q / (2 * math.pi * d**2)\n\nprint(E)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "gt": "D",
    "err": false,
    "question": "A person can stand outside on a cold day for hours without ill effect, but falling into a cold lake can kill a person in a matter of minutes. Which of the following is the primary reason for this phenomenon?\nAnswer Choices: (A) The molecules of the person are, on average, moving faster than those of the surroundings. (B) Thermal energy moves from high concentration areas (hot) to low concentration areas (cold). (C) As heat flows out of the person and warms the fluid surrounding the person, the warmer fluid rises, allowing fresh cool fluid to come in contact with the person and increasing the rate of heat transfer. (D) Water has more molecules per volume than air, increasing molecular contact with the person. Let's write a program.",
    "output": "cold_lake = 1\r\nperson = 2\r\n\r\nif cold_lake < person:\r\n  print('A')\r\nelif cold_lake > person:\r\n  print('B')\r\nelif cold_lake == person:\r\n  print('C')",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "C",
    "raw_ans": "8.0",
    "question": "A liquid flows at a constant flow rate through a pipe with circular cross-sections of varying diameters. At one point in the pipe, the diameter is 2 cm and the flow speed is 18 m/s. What is the flow speed at another point in this pipe, where the diameter is 3 cm?\nAnswer Choices: (A) 4 m/s (B) 6 m/s (C) 8 m/s (D) 12 m/s Let's write a program.",
    "output": "import math\n\n# define the flow speed and diameters\nd1 = 2 # diameter at point 1 in cm\nd2 = 3 # diameter at point 2 in cm\nv1 = 18 # flow speed at point 1 in m/s\n\n# calculate the flow speed at point 2\nv2 = v1 * (d1**2) / (d2**2)\n\nprint(v2)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "D",
    "err": true,
    "gt": "C",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 8:10: V_each = 4V/3\n",
    "question": "An ideal fluid flows through a pipe with radius Q and flow speed V. If the pipe splits up into three separate paths, each with radius (Q/2), what is the flow speed through each of the paths?\nAnswer Choices: (A) 1/3 V (B) 2/3 V (C) 4/3 V (D) 4V Let's write a program.",
    "output": "import math\n\n# define the variables\nQ = 1 # radius of the pipe\nV = 1 # flow speed of the fluid\n\n# calculate the flow speed through each of the paths\nV_each = 4V/3\n\n# print the result\nprint(V_each)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "C",
    "raw_ans": "1",
    "question": "A very slow-moving positron interacts with a stationary electron. Which of the following statements correctly describes a possible outcome of this reaction and why it would occur?\nAnswer Choices: (A) Conservation of mass indicates that if a single new particle were created in the reaction, it must have a total mass equal to the combined masses of the electron and positron. (B) Conservation of charge indicates that all new particles created in the reaction would have no electric charge. (C) Conservation of momentum indicates that two identical gamma rays moving off in opposite directions could be created. (D) Conservation of energy indicates that the antimatter positron could annihilate into energy, leaving the stationary electron behind. Let's write a program.",
    "output": "positron_annihilates = 0\r\nstationary_electron = 1\r\n\r\ntotal_particles = positron_annihilates + stationary_electron\r\n\r\nprint(total_particles)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "D",
    "raw_ans": "1",
    "question": "A box sits on an inclined plane without sliding. As the angle of the plane (measured from the horizontal) increases, the normal force\nAnswer Choices: (A) increases linearly (B) decreases linearly (C) does not change (D) decreases nonlinearly Let's write a program.",
    "output": "theta = 0\nwhile theta <= 90:\n    theta += 1\n",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "A",
    "raw_ans": "-2*v",
    "question": "A small cart of mass m is initially at rest. It collides elastically with a large cart of mass 4m and velocity v. The large cart loses half its kinetic energy to the little cart. The little cart now has a velocity of\nAnswer Choices: (A) 1.41v (B) v (C) 2v (D) 4v Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\r\n\r\n# define the variables\r\nm, M, v = symbols('m M v')\r\n\r\n# equation 1: M has a velocity of v and m has a velocity of 2v\r\neq1 = Eq(M, 2*v)\r\n\r\n# equation 2: the total energy before the collision is equal to the total energy after the collision\r\n# (M + m)v = (M + m)(2v)\r\neq2 = Eq(M + m, 2*(M + m))\r\n\r\n# solve the system of equations\r\nsolution = solve((eq1, eq2), (m, M))\r\n\r\n# calculate the velocity of m\r\nvelocity_m = solution[m]\r\n\r\nprint(velocity_m)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": true,
    "gt": "C",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 18, in <module>\n  File \"<string>\", line 12, in run_it\nKeyError: 0\n",
    "question": "A circuit consists of a battery and a light bulb. At first, the circuit is disconnected. Then, the circuit is connected, and the light bulb lights. After the light bulb has been lit for a few moments, how has the net charge residing on the circuit elements changed?\nAnswer Choices: (A) The net charge has become more positive. (B) The net charge has become more negative. (C) The net charge has not changed. (D) Whether the net charge becomes more positive or more negative depends on the initial net charge residing on the circuit elements before the bulb was lit. Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\r\n\r\n# circuit_ele = total circuit elements\r\nce, cb = symbols('circuit_ele, circuit_bulb')\r\n\r\neq1 = Eq((ce-cb), 0)\r\neq2 = Eq((cb-ce), 0)\r\n\r\nanswer = solve((eq1, eq2), (ce, cb))\r\n\r\nif answer[0][0] > answer[0][1]:\r\n  print('The net charge has become more positive.')\r\nelif answer[0][0] < answer[0][1]:\r\n  print('The net charge has become more negative.')\r\nelse:\r\n  print('The net charge has not changed.')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": true,
    "gt": "B",
    "raw_ans": "",
    "question": "If the force of gravity between the Moon and the Earth were to stop, which statement best describes the resulting motion of the moon?\nAnswer Choices: (A) It would continue rotating on its axis, and it would revolve around the Earth as usual. (B) It would continue rotating on its axis, but it would stop revolving around the Earth. (C) It would stop rotating on its axis, but it would revolve around the Earth as usual. (D) It would stop rotating on its axis, and it would stop revolving around the Earth. Let's write a program.",
    "output": "if __name__ == '__main__':\n    print(A)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "gt": "B",
    "err": false,
    "question": "A person stands on a scale in an elevator. He notices that the scale reading is less than his usual weight. Which of the following could possibly describe the motion of the elevator?\nAnswer Choices: (A) It is moving downward and slowing down. (B) It is moving upward and slowing down. (C) It is moving upward at a constant speed. (D) It is moving downward at a constant speed. Let's write a program.",
    "output": "elevator_motion = ['downward and slowing down', 'upward and slowing down', 'upward at a constant speed', 'downward at a constant speed']\n\nscale_reading = ['downward', 'upward']\n\nfor i in elevator_motion:\n  for j in scale_reading:\n    if j in i:\n      print(i)",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "C",
    "raw_ans": "I only",
    "question": "A whiffle ball is tossed straight up, reaches a highest point, and falls back down. Air resistance is not negligible. Which of the following statements are true?\nI. The ball\u2019s speed is zero at the highest point.\nII. The ball\u2019s acceleration is zero at the highest point.\nIII. The ball takes a longer time to travel up to the highest point than to fall back down.\nAnswer Choices: (A) I only (B) II only (C) I & II only (D) I & III only Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nt = sp.symbols('t')\n\n# define the position of the ball as a function of time\nposition = sp.cos(t) * sp.sqrt(2 * sp.pi * sp.Rational(9, 5))\n\n# find the time the ball spends at the highest point\nhighest_point_time = sp.solve(position, t)\n\n# find the acceleration of the ball at the highest point\n# (we take the derivative of the position function twice)\nacceleration = sp.diff(position, t, 2)\n\n# find the speed of the ball at the highest point\n# (we take the derivative of the position function once)\nspeed = sp.diff(position, t)\n\n# Statement I: The ball\u2019s speed is zero at the highest point.\n# Since the speed function is zero at t = 0 (when the ball is at the highest point),\n# and the speed function is periodic, the speed will be zero at the highest point every time t = 0.\n# Therefore, statement I is true.\n\n# Statement II: The ball\u2019s acceleration is zero at the highest point.\n# Since the acceleration function is the derivative of the speed function,\n# and the speed function is zero at the highest point,\n# the acceleration function is also zero at the highest point.\n# Therefore, statement II is true.\n\n# Statement III: The ball takes a longer time to travel up to the highest point than to fall back down.\n# The time the ball spends at the highest point is a maximum when the ball is at the highest point,\n# and the time the ball spends at the highest point is a minimum when the ball is at the lowest point.\n# Therefore, statement III is true.\n\nprint('I only')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "C",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 4, in <module>\n  File \"<string>\", line 2, in run_it\nNameError: name 'L' is not defined\n",
    "question": "If L, M, and T denote the dimensions of length, mass, and time, respectively, what are the dimensions of impulse?\nAnswer Choices: (A) LM/T^3 (B) LM/T^2 (C) LM/T (D) L^2M/T^2 Let's write a program.",
    "output": "dimensions_of_impulse = (L*M)/T\nprint(dimensions_of_impulse)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "1500006.9282032303",
    "question": "Traveling at an initial speed of 1.5 \u00d7 10^6 m/s, a proton enters a region of constant magnetic field of magnitude 1.5 T. If the proton's initial velocity vector makes an angle of 30\u00b0 with the magnetic field, compute the proton's speed 4 s after entering the magnetic field.\nAnswer Choices: (A) 5.0 \u00d7 10^6 m/s (B) 7.5 \u00d7 10^6 m/s (C) 1.5 \u00d7 10^6 m/s (D) 3.0 \u00d7 10^6 m/s Let's write a program.",
    "output": "import math\n\n# define the initial speed, magnetic field and angle\nv_initial = 1.5e6\nB = 1.5\nangle = 30\n\n# calculate the force due to the magnetic field\nforce = B * v_initial / math.cos(math.radians(angle))\n\n# calculate the acceleration due to the force\na = force / v_initial\n\n# calculate the speed after 4 seconds\nv_final = v_initial + a * 4\n\nprint(v_final)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "D",
    "raw_ans": "The force of the elevator cable on the man",
    "question": "A man stands on a platform scale in an elevator. The elevator moves upward, speeding up. What is the action-reaction force pair to the man\u2019s weight?\nAnswer Choices: (A) The force of the elevator cable on the man (B) The force of the man on the scale (C) The force of the elevator cable on the elevator (D) The force of the man on the Earth Let's write a program.",
    "output": "elevator_moves=True\r\nelevator_cable_on_man=True\r\nif elevator_moves and elevator_cable_on_man:\r\n  print('The force of the elevator cable on the man')\r\nelif elevator_moves and not elevator_cable_on_man:\r\n  print('The force of the man on the scale')\r\nelif not elevator_moves and elevator_cable_on_man:\r\n  print('The force of the elevator cable on the elevator')\r\nelif not elevator_moves and not elevator_cable_on_man:\r\n  print('The force of the man on the Earth')\r",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "A",
    "raw_ans": "150 J of heat was added to the gas",
    "question": "During an isothermal expansion, a confined ideal gas does 150 J of work against its surroundings. Which of the following describes the heat transfer during this process?\nAnswer Choices: (A) 150 J of heat was added to the gas. (B) 150 J of heat was removed from the gas. (C) 300 J of heat was added to the gas. (D) 300 J of heat was removed from the gas. Let's write a program.",
    "output": "work = 150  # J\nheat = 0\n\nif work > 0:\n    heat = work\n    print(\"150 J of heat was added to the gas.\")\nelif work < 0:\n    heat = -work\n    print(\"150 J of heat was removed from the gas.\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "A",
    "raw_ans": "1",
    "question": "An object carries a charge of \u20131 C. How many excess electrons does it contain?\nAnswer Choices: (A) 6.25 \u00d7 10^18 (B) 8.00 \u00d7 10^18 (C) 1.60 \u00d7 10^19 (D) 3.20 \u00d7 10^19 Let's write a program.",
    "output": "charge = -1\r\ncharge_in_coulomb = 1\r\nexcess_electrons = abs(charge) * charge_in_coulomb\r\nprint(excess_electrons)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "C",
    "raw_ans": "1",
    "question": "A guitar string creates a sound wave of known frequency. Which of the following describes a correct and practical method of measuring the wavelength of the sound wave with a meterstick?\nAnswer Choices: (A) Lightly touch the guitar string in the middle such that a single node is created. Measure the length of the string; this is the wavelength. (B) Measure the length of the guitar string; this is half the wavelength. (C) Adjust the length of a pipe placed near the string so that resonances are heard. Measure the difference between the pipe lengths for consecutive resonances; this is half the wavelength. (D) Measure the peak-to-peak distance of the wave as it passes; this is the wavelength. Let's write a program.",
    "output": "lightly_touch = 1\nmeasure_length = 2\ndifference_resonances = 3\npeak_to_peak = 4\n\ncorrect_method = lightly_touch\n\nprint(correct_method)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "Images produced by concave lenses and mirrors are always real",
    "question": "Which of the following statements about images is true?\nAnswer Choices: (A) Images produced by concave lenses are always real. (B) Images produced by concave mirros are always real. (C) Images produced by convex lenses can be both real and virtual. (D) Images produced by convex mirrors can be both real and virtual. Let's write a program.",
    "output": "concave_lens = 1\nconcave_mirror = 1\nconvex_lens = 1\nconvex_mirror = 1\n\nif concave_lens == 1 and concave_mirror == 1:\n  print(\"Images produced by concave lenses and mirrors are always real.\")\nelif convex_lens == 1 and convex_mirror == 1:\n  print(\"Images produced by convex lenses and mirrors can be both real and virtual.\")\nelse:\n  print(\"Check the values of concave_lens, concave_mirror, convex_lens, and convex_mirror.\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "C",
    "raw_ans": "0: -sqrt(-k)\n1: sqrt(-k)",
    "question": "Pretend someone actually managed to dig a hole straight through the center of the Earth all the way to the other side. If an object were dropped down that hole, which of the following would best describe its motion? Assume ideal conditions and that the object cannot be destroyed.\nAnswer Choices: (A) It would fall to the center of the Earth and stop there. (B) It would fall through the hole to the other side, continue past the opposite side\u2019s opening, and fly into space. (C) It would oscillate back and forth from one opening to the other indefinitely. (D) It would fall to the other side and stop there. Let's write a program.",
    "output": "import sympy as sp\n\n# Define the variables\nomega, k = sp.symbols('omega k')\n\n# Define the equation of motion\n# (For a harmonic oscillator, the equation of motion is omega^2*x = -k*x^2)\neom = sp.Eq(omega**2, -k)\n\n# Solve the equation of motion for x\nsolution = sp.solve(eom, omega)\n\n# Print the solution\nfor i in range(len(solution)):\n    print(f'{i}: {solution[i]}')\n\n",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "D",
    "raw_ans": "It increased the amplitude",
    "question": "A horizontal spring-block oscillator is in motion when a second block of equal mass falls on top of the oscillating block. If the two blocks stick together, what effect will this have on the amplitude of the oscillations?\nAnswer Choices: (A) It will increase the amplitude. (B) It will decrease the amplitude. (C) It will have no effect. (D) It would depend on where the original block was in its cycle when the second block fell. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nx = sp.Symbol('x')\n\n# create a function for the amplitude\namp = sp.sqrt(x)\n\n# create a function for the amplitude after the second block fell\namp_new = sp.sqrt(x*2)\n\n# find the derivative of the amplitude function\namp_deriv = sp.diff(amp, x)\n\n# find the derivative of the amplitude_new function\namp_new_deriv = sp.diff(amp_new, x)\n\n# find the critical points by setting the derivative equal to zero\ncritical_points = sp.solve(amp_deriv, x)\n\n# do the same for the new amplitude function\ncritical_points_new = sp.solve(amp_new_deriv, x)\n\n# create a list of where the blocks were in their cycle when the second block fell\ntimes = [0, 0.25, 0.5, 0.75, 1]\n\n# create a list of the new amplitudes at those times\nnew_amps = [amp.subs(x, time) for time in times]\n\n# find the maximum new amplitude\nmax_new_amp = max(new_amps)\n\n# if the maximum new amplitude is greater than the original amplitude, it increased\nif max_new_amp > amp.subs(x, 0):\n    print('It increased the amplitude.')\n\nelif max_new_amp < amp.subs(x, 0):\n    print('It decreased the amplitude.')\n\nelse:\n    print('It had no effect.')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "C",
    "raw_ans": "",
    "question": "In which of the following situations involving a source of sound and a detector of the sound is it possible that there is NO perceived Doppler shift?\nAnswer Choices: (A) The source travels toward the stationary detector. (B) The detector travels toward the stationary source. (C) Both the source and detector travel in the same direction. (D) Both the source and detector travel in opposite directions, with the source and detector moving away from each other. Let's write a program.",
    "output": "SourceTravelsTowardsStationaryDetector = False\r\nDetectorTravelsTowardsStationarySource = False\r\nBothSourceAndDetectorTravelInTheSameDirection = False\r\nBothSourceAndDetectorTravelInOppositeDirections = False\r\nif SourceTravelsTowardsStationaryDetector or DetectorTravelsTowardsStationarySource or BothSourceAndDetectorTravelInTheSameDirection or BothSourceAndDetectorTravelInOppositeDirections:\r\n print(\"NO perceived Doppler shift\")\r\n",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "B",
    "raw_ans": "0.8333333333333334",
    "question": "A solid plastic cube with uniform density (side length = 0.5 m) of mass 100 kg is placed in a vat of fluid whose density is 1200 kg/m^3. What fraction of the cube's volume floats above the surface of the fluid?\nAnswer Choices: (A) 1.0/9 (B) 1.0/3 (C) 2.0/3 (D) 4.0/5 Let's write a program.",
    "output": "import math\n\n# define the side length of the cube\nside_length = 0.5\n\n# calculate the volume of the cube\ncube_volume = side_length ** 3\n\n# define the density of the cube\ncube_density = 1000\n\n# calculate the weight of the cube\ncube_weight = cube_volume * cube_density\n\n# define the density of the fluid\nfluid_density = 1200\n\n# calculate the volume of the fluid that the cube displaces\nfluid_volume = cube_weight / fluid_density\n\n# calculate the fraction of the cube's volume that floats above the surface of the fluid\nfraction = fluid_volume / cube_volume\n\nprint(fraction)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "gt": "B",
    "err": false,
    "question": "A person standing on a horizontal floor is acted upon by two forces: the downward pull of gravity and the upward normal force of the floor. These two forces\nAnswer Choices: (A) have equal magnitudes and form an action-reaction pair (B) have equal magnitudes and do not form an action-reaction pair (C) have unequal magnitudes and form an action-reaction pair (D) have unequal magnitudes and do not form an action-reaction pair Let's write a program.",
    "output": "person_standing_on_horizontal_floor.png\nTwo forces acting on a person standing on a horizontal floor:\n1. The downward pull of gravity\n2. The upward normal force of the floor\nAction-reaction pair means that both the forces have equal magnitudes.\nThe answer is A",
    "correct": false
  },
  {
    "ans": "E",
    "gt": "B",
    "err": false,
    "question": "A particle of mass m and charge Q and velocity V is directed toward a uniform electric field of strength E and travels a distance d. How far does the particle travel if the original velocity is doubled and the mass is cut in half?\nAnswer Choices: (A) 4d (B) 2d (C) d (D) 1/2d Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nm, Q, V, E, d = sp.symbols('m Q V E d')\n\n# calculate the distance travelled by the particle\ndistance = V**2 * m / Q * E\n\n# if the original velocity is doubled and the mass is cut in half, the new distance travelled is\nnew_distance = V**2 * m / Q * E\n\n# since the new distance is proportional to the old distance, the new distance is 4 times the old distance\nnew_distance = 4 * distance\n\n# print the result\nprint(new_distance)",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "D",
    "raw_ans": "-3.0",
    "question": "An object of mass m1 experiences a linear, elastic collision with a stationary object of unknown mass. In addition to m1, what is the minimum necessary information that would allow you to determine the mass of the second object?\nAnswer Choices: (A) The final speed of object 1 (B) The initial speed of object 1 (C) The final speed of object 2 (D) Any 2 of the above values Let's write a program.",
    "output": "m1 = 3  # mass of object 1\nv1i = 5  # initial speed of object 1\nv1f = 2  # final speed of object 1\n\n# From the law of conservation of energy, we can calculate the mass of object 2.\n# The equation is m2 = (m1 * v1i - m1 * v1f) / (v1f - v1i)\n\nm2 = (m1 * v1i - m1 * v1f) / (v1f - v1i)\nprint(m2)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 19, in run_it\nNameError: name 'A' is not defined\n",
    "question": "In an experiment designed to study the photoelectric effect, it is observed that low-intensity visible light of wavelength 550 nm produced no photoelectrons. Which of the following best describes what would occur if the intensity of this light were increased dramatically?\nAnswer Choices: (A) Almost immediately, photoelectrons would be produced with a kinetic energy equal to the energy of the incident photons. (B) Almost immediately, photoelectrons would be produced with a kinetic energy equal to the energy of the incident photons minus the work function of the metal. (C) After several seconds, necessary for the electrons to absorb sufficient energy from the incident light, photoelectrons would be produced with a kinetic energy equal to the energy of the incident photons minus the work function of the metal. (D) Nothing would happen. Let's write a program.",
    "output": "wavelength = 550 * 10**-9 # convert to meters\nh = 6.626 * 10**-34 # Planck's constant\nc = 2.998 * 10**8 # speed of light\n\n# the energy of a photon is the product of its frequency and the Planck constant\n# the frequency can be calculated from the wavelength by dividing the speed of light by the wavelength\nfrequency = c / wavelength\n\nenergy_of_photon = h * frequency\n\n# the work function of a metal is the minimum energy needed for photoelectrons to be produced\n# in this case, the photoelectrons are not produced, so the energy of the incident photons must be equal to the work function\nwork_function = energy_of_photon\n\n# the kinetic energy of the photoelectrons is the energy of the incident photons minus the work function\nkinetic_energy = energy_of_photon - work_function\n\nprint(A)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "A",
    "raw_ans": "10",
    "question": "Two traveling waves of equal frequency, one of amplitude 4 cm and the other of amplitude 6 cm, superimpose in a single medium. Which of the following best describes the displacement, D, of the resultant wave?\nAnswer Choices: (A) 2 cm \u2264 D \u2264 10 cm (B) D = 5 cm (C) D = 10 cm (D) 10 cm \u2264 D \u2264 12 cm Let's write a program.",
    "output": "amplitude_1 = 4\namplitude_2 = 6\nresultant = amplitude_1 + amplitude_2\nprint(resultant)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "gt": "B",
    "err": false,
    "question": "In Collision A, two carts collide and bounce off each other. In Collision B, a ball sticks to a rigid rod, which begins to rotate about the combined center of mass. Which of the following statements about quantities in each collision is correct?\nAnswer Choices: (A) Collision A: each cart experiences the same force, time of collision, and change in kinetic energy. Collision B: the ball and the rod each experience the same torque, time of collision, and change in rotational kinetic energy. (B) Collision A: each cart experiences the same force, time of collision, and change in linear momentum. Collision B: the ball and the rod each experience the same torque, time of collision, and change in angular momentum. (C) Collision A: each cart experiences the same force, time of collision, and change in kinetic energy. Collision B: the ball and the rod each experience the same torque, time of collision, and change in angular momentum. (D) Collision A: each cart experiences the same force, time of collision, and change in velocity. Collision B: the ball and the rod each experience the same torque, time of collision, and change in angular velocity Let's write a program.",
    "output": "collision_A = 'each cart'\ncollision_B = 'the ball and the rod'\n\nanswer_a = 'force, time of collision, and change in kinetic energy'\nanswer_b = 'force, time of collision, and change in linear momentum'\nanswer_c = 'torque, time of collision, and change in rotational kinetic energy'\nanswer_d = 'torque, time of collision, and change in angular momentum'\n\ncorrect_answer = 'A'\nprint(correct_answer)",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 6, in run_it\nTypeError: object of type 'int' has no len()\n",
    "question": "An object of mass 2 kg is acted upon by three external forces, each of magnitude 4 N. Which of the following could NOT be the resulting acceleration of the object?\nAnswer Choices: (A) 0 m/s^2 (B) 2 m/s^2 (C) 4 m/s^2 (D) 8 m/s^2 Let's write a program.",
    "output": "total_mass = 2\nforce = 4\nacceleration = total_mass * force\n\nfor i in range(len(acceleration)):\n    if acceleration[i] == 0:\n        acceleration[i] = '0 m/s^2'\n    elif acceleration[i] == 2:\n        acceleration[i] = '2 m/s^2'\n    elif acceleration[i] == 4:\n        acceleration[i] = '4 m/s^2'\n    else:\n        acceleration[i] = '8 m/s^2'\n\nprint(acceleration)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 8, in run_it\n  File \"<string>\", line 3, in slope\nZeroDivisionError: division by zero\n",
    "question": "Spring scales are used to measure the net force applied to an object; a sonic motion detector is used to measure the object\u2019s resulting acceleration. A graph is constructed with the net force on the vertical axis and the acceleration on the horizontal axis. Which of the following quantities is directly measured using the slope of this graph?\nAnswer Choices: (A) Gravitational mass (B) Weight (C) Velocity (D) Inertial mass Let's write a program.",
    "output": "def slope(x, y):\n    return (y[1] - y[0]) / (x[1] - x[0])\n\nnet_force = 1\nacceleration = 2\n\nslope = slope([net_force, net_force], [acceleration, acceleration])\n\nif slope == net_force:\n    print(\"A\")\nelif slope == acceleration:\n    print(\"C\")\nelse:\n    print(\"B\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "B",
    "raw_ans": "1.0",
    "question": "A wooden block experiences a frictional force, f, as it slides across a table. If a block of the same material with half the height and twice the length were to slide across the table, what would be the frictional force it experienced?\nAnswer Choices: (A) (1/2)f (B) f (C) 2f (D) 4f Let's write a program.",
    "output": "height = 1\nlength = 1\nfrictional_force = 1\n\nnew_height = height / 2\nnew_length = length * 2\n\nnew_frictional_force = (new_height * new_length) * frictional_force\n\nprint(new_frictional_force)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "-5.0",
    "question": "An object is placed 10 cm in front of a diverging mirror. What is the focal length of the mirror if the image appears 2 cm behind the mirror?\nAnswer Choices: (A) -3/5 cm (B) -5/3 cm (C) -2/5 cm (D) -5/2 cm Let's write a program.",
    "output": "f = -10/2\nprint(f)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "[61]",
    "question": "A body moving in the positive x direction passes the origin at time t = 0. Between t = 0 and t = 1 second, the body has a constant speed of 24 meters per second. At t = 1 second, the body is given a constant acceleration of 6 meters per second squared in the negative x direction. The position x of the body at t = 11 seconds is\nAnswer Choices: (A) 99m (B) 36m (C) -36m (D) -99m Let's write a program.",
    "output": "from sympy import symbols, solve\n\n# define the symbols\nt = symbols('t')\n\n# The body moving in the positive x direction\n# The speed of the body is 24m/s for 1 second\n# The acceleration of the body is -6m/s^2 for 10 seconds\n\n# The position of the body at t = 11 seconds\nx = 24 * (t - 1) + 24 * 10 * (-6)\n\nposition = solve(x, t=11)\n\nprint(position)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "B",
    "raw_ans": "0.39269908169872414",
    "question": "A fluid of density \u03c1 flows through a horizontal pipe with negligible viscosity. The flow is streamlined with constant flow rate. The diameter of the pipe at Point 1 is d and the flow speed is V. If the diameter of the pipe at Point 2 is d/3, then the pressure at Point 2 is\nAnswer Choices: (A) less than the pressure at Point 1 by 4 \u03c1v^2 (B) less than the pressure at Point 1 by 40 \u03c1v^2 (C) more than the pressure at Point 1 by 4 \u03c1v^2 (D) more than the pressure at Point 1 by 40 \u03c1v^2 Let's write a program.",
    "output": "import math\n\n# define the variables\nd1 = 1 # diameter at point 1 in meters\nv1 = 1 # velocity at point 1 in meters/second\nd2 = d1/3 # diameter at point 2 in meters\n\n# calculate the flow rate\nq = v1 * math.pi * (d1/2)**2 # flow rate in m^3/second\n\n# calculate the pressure difference\n# Bernoulli's equation states that the sum of the static pressure, the dynamic pressure, and the kinetic energy of a fluid is constant along a streamline\n# so the static pressure and the dynamic pressure are both the same at both points, and the only difference is the kinetic energy\n# the formula for kinetic energy is 0.5*mass*velocity^2, and the mass flow rate is the same as the flow rate (since the fluid is incompressible)\n# so the kinetic energy at point 2 is less than at point 1 by 0.5*q*v1^2\n# the static pressure at point 2 is therefore less than at point 1 by 0.5*q*v1^2\n\npressure_difference = 0.5 * q * v1**2\n\nprint(pressure_difference)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "A",
    "raw_ans": "2.0",
    "question": "In a spring-block oscillator, the maximum speed of the block is\nAnswer Choices: (A) proportional to amplitude (B) proportional to the square of amplitude (C) proportional to the square root of amplitude (D) inversely proportional to the square root of amplitude Let's write a program.",
    "output": "import math\n\n# define the amplitude\nA = 1\n\n# calculate the maximum speed\nv_max = 2*math.sqrt(A)\n\n# print the result\nprint(v_max)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": true,
    "gt": "C",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 15, in <module>\n  File \"<string>\", line 12, in run_it\nNameError: name 'mass_moon' is not defined\n",
    "question": "The weight of a box on the Earth is 80 N. What is the weight of the box on the moon if the moon has 1/80th the mass and 1/4th the radius of the Earth?\nAnswer Choices: (A) 1 N (B) 10 N (C) 16 N (D) 20 N Let's write a program.",
    "output": "import math\n\n# define the weight of the box on Earth\nweight_Earth = 80  # in Newtons\n\n# define the mass and radius of the Earth\nmass_Earth = 5.972e24  # in kg\nradius_Earth = 6371  # in km\n\n# calculate the weight of the box on the moon\nweight_moon = weight_Earth * (mass_Earth / mass_moon) * (radius_Earth / radius_moon)\n\nprint(weight_moon)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "C",
    "raw_ans": "1.875",
    "question": "A textbook weighs 30 N at sea level. Earth\u2019s radius is 6,400 km. Which of the following is the best estimate of the textbook\u2019s weight on a mountain peak located 6,000 m above sea level?\nAnswer Choices: (A) 60 N (B) 15 N (C) 30 N (D) 7.5 N Let's write a program.",
    "output": "textbook_weight_sea_level = 30\nearth_radius = 6400\nmountain_height = 6000\n\ntextbook_weight_mountain = textbook_weight_sea_level * (1 - mountain_height/earth_radius)\n\nprint(textbook_weight_mountain)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": true,
    "gt": "B",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 20, in run_it\n  File \"<string>\", line 9, in velocity\nNameError: name 'terminal_speed' is not defined\n",
    "question": "Which of the following correctly describes the motion of a real object in free fall? Assume that the object experiences drag force proportional to speed and that it strikes the ground before reaching terminal sped.\nAnswer Choices: (A) It will fall with increasing speed and increasing acceleration. (B) It will fall with increasing speed and decreasing acceleration. (C) It will fall with decreasing speed and increasing acceleration. (D) It will fall with decreasing speed and decreasing acceleration. Let's write a program.",
    "output": "def drag_force(speed):\n    return speed**2\n\ndef acceleration(speed):\n    return drag_force(speed) / mass\n\ndef velocity(time):\n    return (terminal_speed - speed_at_time(0)) * np.exp(-time / time_to_terminal_speed) + speed_at_time(time)\n\ndef speed_at_time(time):\n    return velocity(time) - drag_force(velocity(time)) / mass\n\ndef time_to_terminal_speed():\n    return -np.log(terminal_speed / speed_at_time(0))\n\nfree_fall_equations = [velocity, speed_at_time, time_to_terminal_speed]\n\nfor equation in free_fall_equations:\n    print(equation(0))",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "A",
    "raw_ans": "Real, upright\n1.997782702374496",
    "question": "A bi-convex lens has a radius of curvature of magnitude 20 cm. Which of the following best describes the image formed of an object of height 2 cm placed 30 cm from the lens?\nAnswer Choices: (A) Real, inverted, height = 1 cm (B) Virtual, upright, height = 0.25 cm (C) Real, upright, height = 1 cm (D) Virtual, inverted, height = 0.25 cm Let's write a program.",
    "output": "import math\n\n# define the radius of curvature\nR = 20  # in cm\n\n# define the height of the object and the position of the object from the lens\nho = 2  # in cm\nx = 30  # in cm\n\n# calculate the image height\nhi = ho * (x * 2) / (x + math.sqrt(x**2 + ho**2))\n\n# calculate the image position\ny = x * (ho**2 - hi**2) / (x**2 + ho**2)\n\n# determine if the image is real or virtual and if it is upright or inverted\nif y > 0:\n    print(\"Real, upright\")\nelse:\n    print(\"Virtual, inverted\")\n\nprint(hi)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 20, in <module>\n  File \"<string>\", line 18, in run_it\nKeyError: 0\n",
    "question": "Two spheres of net charge +5e and -6e briefly come into contact. Afterward, which of the following is a possible combination of net charges for the two spheres?\nAnswer Choices: (A) +3e and -4e (B) +1.5e and -2.5e (C) Both of the above (D) None of the above Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\r\n\r\n# charge = +5e and -6e\r\nQ1, Q2 = symbols('Q1 Q2')\r\n\r\n# Q1 + Q2 = +5e\r\neq1 = Eq(Q1 + Q2, 5)\r\n\r\n# Q1 - Q2 = -6e\r\neq2 = Eq(Q1 - Q2, -6)\r\n\r\nsol = solve((eq1, eq2), (Q1, Q2))\r\n\r\n# print(sol)\r\n\r\nfor i in range(len(sol)):\r\n    if sol[i][0] > 0 and sol[i][1] < 0:\r\n        print(sol[i])",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "C",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 15, in run_it\nNameError: name 'A' is not defined\n",
    "question": "The circumference of a helium-filled balloon is measured for three different conditions: at room temperature, after being in a warm oven for 30 minutes, and after being in a freezer for 30 minutes. A student plotting the circumference cubed C^3 as a function of temperature T, should expect to find which of the following?\nAnswer Choices: (A) a cubic relationship between C^3 and T (B) an indirect relationship between C^3 and T (C) an extrapolated temperature T where C^3 reaches zero (D) a maximum C^3 as the temperature T increases Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nT = sp.symbols('T')\n\n# define the function\nC = 2*T + 1\nC_cubed = C**3\n\n# plot the function\nplot = sp.plot(C_cubed, (T, -10, 10))\n\n# print the answer\nprint(A)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 8, in <module>\n  File \"<string>\", line 2, in run_it\nTypeError: unsupported operand type(s) for ^: 'float' and 'int'\n",
    "question": "The charge on an oil drop is measured in the laboratory. Which of the following measurements should be rejected as highly unlikely to be correct?\nAnswer Choices: (A) 6.4 \u00d7 10^-19 C (B) 8.0 \u00d7 10^-19 C (C) 4.8 \u00d7 10^-19 C (D) 2.4 \u00d7 10^-19 C Let's write a program.",
    "output": "charge_on_oil_drop=2.4*10^-19\r\nrejected_measurement=6.4*10^-19\r\nif charge_on_oil_drop==rejected_measurement:\r\n  print(\"correct\")\r\nelif charge_on_oil_drop!=rejected_measurement:\r\n  print(\"highly unlikely to be correct\")\r",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "C",
    "raw_ans": "1499998.000004",
    "question": "Traveling at an initial speed of 1.5 \u00d7 10^6 m/s, a proton enters a region of constant magnetic field, B, of magnitude 1.0 T. If the proton's initial velocity vector makes an angle of 30\u00b0 with the direction of B, compute the proton's speed 4 s after entering the magnetic field.\nAnswer Choices: (A) 5.0 \u00d7 10^5 m/s (B) 7.5 \u00d7 10^5 m/s (C) 1.5 \u00d7 10^6 m/s (D) 3.0 \u00d7 10^6 m/s Let's write a program.",
    "output": "import math\n\n# define the initial speed, magnetic field and angle\ninitial_speed = 1.5 * 10**6\nmagnetic_field = 1.0\nangle = 30\n\n# calculate the speed after 4 seconds\ntime = 4\nspeed = math.sqrt((initial_speed * math.cos(math.radians(angle)))**2 + (initial_speed * math.sin(math.radians(angle)) - time * magnetic_field)**2)\n\nprint(speed)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "gt": "A",
    "err": false,
    "question": "Which of the following changes to a circuit will always bring about an increase in the current?\nAnswer Choices: (A) Increased voltage and increased resistance (B) Decreased voltage and decreased resistance (C) Increased voltage and decreased resistance (D) Decreased voltage and increased resistance Let's write a program.",
    "output": "voltage_increased = 1\nresistance_increased = 1\n\nif voltage_increased and resistance_increased:\n    print(\"A\")\nelif resistance_increased and not voltage_increased:\n    print(\"C\")\nelif not resistance_increased and voltage_increased:\n    print(\"B\")\nelif not resistance_increased and not voltage_increased:\n    print(\"D\")",
    "correct": true
  },
  {
    "ans": "B",
    "gt": "D",
    "err": false,
    "question": "Which of the following concerning uniform circular motion is true?\nAnswer Choices: (A) The centrifugal force is the action-reaction pair of the centripetal force. (B) The centripetal acceleration and velocity point in the same direction. (C) The velocity of the object in motion changes whereas the acceleration of the object is constant. (D) A satellite undergoing uniform circular motion is falling toward the center in a circular path. Let's write a program.",
    "output": "acceleration = 'B'\nvelocity = 'C'\nprint(acceleration)",
    "correct": false
  },
  {
    "ans": "D",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 10, in run_it\nIndexError: list index out of range\n",
    "question": "It is known that a lab cart is moving east at 25 cm/s at time t1 = 0.10 s, and then moving east at 15 cm/s at t2 = 0.20 s. Is this enough information to determine the direction of the net force acting on the cart between t1 and t2?\nAnswer Choices: (A) Yes, since we know the cart is slowing down, its momentum change is opposite the direction of movement, and the net force is in the direction of momentum change. (B) No, because we don\u2019t know whether forces such as friction or air resistance might be acting on the cart. (C) No, because we don\u2019t know the mass of the cart. (D) Yes, since we know the cart keeps moving to the east, the net force must be in the direction of motion. Let's write a program.",
    "output": "from sympy import Eq, Symbol, solve\r\n\r\n# x = net force acting on the cart\r\nx = Symbol('x')\r\neq = Eq((25-x)/0.10, (15-x)/0.10)\r\n\r\nanswer = solve(eq)\r\n\r\nif answer[0] > 0:\r\n  print('A')\r\nelif answer[0] == 0:\r\n  print('B')\r\nelif answer[0] < 0:\r\n  print('C')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "10 20 40 30",
    "question": "An elevator is rising. In order to determine the tension in the cables pulling it, which values (for the elevator) would you need to know?\nAnswer Choices: (A) Mass, velocity, height, and acceleration (B) Mass, velocity, and acceleration (C) Mass and velocity (D) Mass and acceleration Let's write a program.",
    "output": "elevator_mass = 10\r\nelevator_velocity = 20\r\nelevator_acceleration = 30\r\n\r\nheight = 40\r\n\r\nprint(elevator_mass, elevator_velocity, height, elevator_acceleration)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": true,
    "gt": "B",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 25, in <module>\n  File \"<string>\", line 19, in run_it\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/core/relational.py\", line 510, in __bool__\n    raise TypeError(\"cannot determine truth value of Relational\")\nTypeError: cannot determine truth value of Relational\n",
    "question": "If two non-zero vectors are added together, and the resultant vector is zero, what must be true of the two vectors?\nAnswer Choices: (A) They have equal magnitude and are pointed in the same direction. (B) They have equal magnitude and are pointed in opposite directions. (C) They have different magnitudes and are pointed in opposite directions. (D) It is not possible for the sum of two non-zero vectors to be zero. Let's write a program.",
    "output": "import sympy as sp\n\n# define the vectors\nv1 = sp.symbols('v1')\nv2 = sp.symbols('v2')\n\n# define the sum of the vectors\nsum_v = sp.symbols('sum_v')\n\n# express the sum of the vectors in terms of the magnitudes and directions of the original vectors\neq = sp.Eq(v1 + v2, 0)\n\n# solve the equation for v1 and v2\nsolution = sp.solve(eq, (v1, v2))\n\n# since v1 and v2 are non-zero vectors, their magnitudes and directions must be such that they point in opposite directions\nmagnitudes_equal = solution[0][0] == solution[0][1]\ndirections_opposite = solution[0][0] > 0 and solution[0][1] < 0 or solution[0][0] < 0 and solution[0][1] > 0\n\nif magnitudes_equal and directions_opposite:\n    print('They have equal magnitude and are pointed in opposite directions.')\nelse:\n    print('It is not possible for the sum of two non-zero vectors to be zero.')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "gt": "C",
    "err": false,
    "question": "A proton enters a solenoid. Upon entry, the proton is moving in a straight line along the axis of the solenoid. Which of the following is a correct description of the proton\u2019s motion within the solenoid?\nAnswer Choices: (A) The proton will be bent in a parabolic path. (B) The proton will be bent in a circular path. (C) The proton will continue in its straight path at constant velocity. (D) The proton will continue in its straight path and slow down. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nv = sp.symbols('v')\n\n# The proton enters the solenoid with a straight line motion,\n# so the velocity of the proton will remain constant.\n\n# The answer is B",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "B",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 9, in <module>\n  File \"<string>\", line 4, in run_it\nNameError: name 'v' is not defined\n",
    "question": "A sound wave with frequency f travels through air at speed v. With what speed will a sound wave with frequency 4f travel through the air?\nAnswer Choices: (A) v/4 (B) v (C) 2v (D) 4v Let's write a program.",
    "output": "frequency_f = 1\nfrequency_4f = 4\nspeed = v\n\nspeed_of_4f = (frequency_4f * speed)/frequency_f\n\nprint(speed_of_4f)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 5, in <module>\n  File \"<string>\", line 2, in run_it\nNameError: name 'charge_enclosed' is not defined\n",
    "question": "Under what conditions is the net electric flux through a closed surface proportional to the enclosed charge?\nAnswer Choices: (A) under any conditions (B) only when the enclosed charge is symmetrically distributed (C) only when all nearby charges are symmetrically distributed (D) only when there are no charges outside the surface Let's write a program.",
    "output": "net_electric_flux=charge_enclosed\r\nnet_electric_flux=net_electric_flux*charge_enclosed\r\nprint(net_electric_flux)\r\n",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "B",
    "raw_ans": "Wavelength",
    "question": "A beam of monochromatic light entering a glass window pane from the air will experience a change in\nAnswer Choices: (A) frequency and wavelength (B) speed and wavelength (C) speed only (D) wavelength only Let's write a program.",
    "output": "Light = 'Monochromatic'\nGlass = 'Glass'\nWindow = 'Window'\nChange = 'Wavelength'\nprint(Change)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "B",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 28, in <module>\n  File \"<string>\", line 20, in run_it\nAttributeError: 'Derivative' object has no attribute 'is_proportional'\n",
    "question": "Data is collected in an experiment preformed on an ideal gas. In the experiment, temperature (in K) is the independent variable and volume (in m^3) is the dependent variable. If a plot is produced where the dependent variable is on the vertical axis, which of the following is true about the slope and y-intercept of the graph?\nAnswer Choices: (A) The slope will be linearly proportional to the pressure of the gas and the intercept will be 0 m^3. (B) The slope will be inversely proportional to the pressure of the gas and the intercept will be 0 m^3. (C) The slope will be linearly proportional to the pressure of the gas and the intercept will not be 0 m^3. (D) The slope will be inversely proportional to the pressure of the gas and the intercept will not be 0 m^3. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nT = sp.symbols('T')\nV = sp.symbols('V')\n\n# define the equation of state of the gas\nP = sp.symbols('P')\neq = sp.Eq(P, T*V)\n\n# The slope of the graph is the derivative of the equation with respect to T.\n# The y-intercept is the value of V when T = 0.\n\nslope = sp.diff(eq, T)\ny_intercept = sp.solve(eq, V)[0]\n\n# Now, we see which of the options is true based on the slope and y_intercept.\n\nif slope.is_proportional(P) and y_intercept == 0:\n    print('A')\nelif slope.is_inverse(P) and y_intercept == 0:\n    print('B')\nelif slope.is_proportional(P) and y_intercept != 0:\n    print('C')\nelif slope.is_inverse(P) and y_intercept != 0:\n    print('D')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "C",
    "err": false,
    "gt": "B",
    "raw_ans": "Half the magnitude and in the same direction",
    "question": "A toy car and a toy truck collide. If the toy truck\u2019s mass is double the toy car\u2019s mass, then, compared to the acceleration of the truck, the acceleration of the car during the collision will be\nAnswer Choices: (A) double the magnitude and in the same direction (B) double the magnitude and in the opposite direction (C) half the magnitude and in the same direction (D) half the magnitude and in the opposite direction Let's write a program.",
    "output": "ToyCarMass = 1\r\nToyTruckMass = 2\r\nToyCarAcceleration = 1\r\nToyTruckAcceleration = 2\r\nif ToyCarMass>ToyTruckMass:\r\n print(\"Half the magnitude and in the opposite direction\")\r\nelif ToyCarMass<ToyTruckMass:\r\n print(\"Half the magnitude and in the same direction\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "gt": "D",
    "err": false,
    "question": "A sphere, a cube, and a cylinder, all of equal mass, are released from rest from the top of a short incline. The surface of the incline is extremely slick, so much so that the objects do not rotate when released, but rather slide with negligible friction. Which reaches the base of the incline first?\nAnswer Choices: (A) the sphere (B) the cube (C) the cylinder (D) All reach the base at the same time. Let's write a program.",
    "output": "The sphere, cube, and cylinder all have the same mass.\nThe sphere has the least amount of friction because it has the least surface area.\nThe cube has the most amount of friction because it has the most surface area.\nThe cylinder has a moderate amount of friction because it has a moderate surface area.\nThe sphere will reach the bottom first, followed by the cylinder, and then the cube.\nThe answer is A.",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "A",
    "raw_ans": "300.0",
    "question": "A car starts from rest and uniformly accelerates to a final speed of 20.0 m/s in a time of 15.0 s. How far does the car travel during this time?\nAnswer Choices: (A) 150 m  (B) 300 m (C) 450 m (D) 600 m Let's write a program.",
    "output": "import math\n\n# define the variables\nv_final = 20.0 # m/s\nt_time = 15.0 # s\n\n# calculate the distance using the formula: distance = speed * time\ndistance = v_final * t_time\n\n# print the result\nprint(distance)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 10:4: The answer is C\n",
    "question": "At what angle to the horizontal should an ideal projectile be launched so that its horizontal displacement (the range) is equal to its maximum vertical displacement?\nAnswer Choices: (A) sin\u20131 (1/g) (B) cos\u20131 (1/g) (C) 45\u00b0 (D) tan\u20131 4 Let's write a program.",
    "output": "import math\n\n# define the angle in radians\nangle = math.asin(1/math.sqrt(2))\n\n# convert the angle to degrees\nangle_deg = math.degrees(angle)\n\nprint(angle_deg)\nThe answer is C",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "84.38120980334044",
    "question": "A cannon is mounted on a truck that moves forward at a speed of 5 m/s. The operator wants to launch a ball from a cannon so the ball goes as far as possible before hitting the level surface. The muzzle velocity of the cannon is 50 m/s. At what angle from the horizontal should the operator point the cannon?\nAnswer Choices: (A) 5\u00b0 (B) 41\u00b0 (C) 45\u00b0 (D) 49\u00b0 Let's write a program.",
    "output": "import math\n\n# define the variables\nv_cannon = 50  # muzzle velocity of the cannon [m/s]\nv_truck = 5  # speed of the truck [m/s]\n\n# calculate the time it takes for the ball to reach the ground after being launched from the cannon\nt_ground = v_cannon / math.sqrt(2 * 9.8)  # time to reach the ground [s]\n\n# calculate the distance the truck has moved during this time\nd_truck = v_truck * t_ground  # distance the truck has moved [m]\n\n# calculate the distance the ball has traveled during this time\nd_ball = v_cannon * t_ground  # distance the ball has traveled [m]\n\n# calculate the maximum distance the ball can travel horizontally before hitting the ground\nd_max = d_ball - d_truck  # maximum distance the ball can travel horizontally [m]\n\n# calculate the angle in which the ball should be launched for it to travel this distance\ntheta = math.atan(d_max / v_cannon)  # angle in which the ball should be launched [rad]\n\n# convert this angle to degrees\ntheta_deg = theta * 180 / math.pi  # angle in which the ball should be launched [\u00b0]\n\nprint(theta_deg)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "gt": "A",
    "err": false,
    "question": "Two charged, massive particles are isolated from all influence except those between the particles. They have charge and mass such that the net force between them is 0 N. Which of the following is NOT true?\nAnswer Choices: (A) The particles must have the same sign of charge. (B) If the distance between the particles changes, the force will no longer be 0 N. (C) The particles must have the same mass. (D) Such a situation is impossible as the net force between the two particles cannot be 0. Let's write a program.",
    "output": "Let's define the charge and mass of the two particles as q1, m1 for the first particle and q2, m2 for the second particle. The force between the two particles is given by Coulomb's law: F = k * (q1 * q2) / r^2 where r is the distance between the two particles and k is a constant. For the force to be zero, q1 * q2 = 0. This means that the two charges must have the same sign for the force to be zero. Hence, the first statement is true.\nThe distance between the two particles affects the force. If the distance changes, the force will no longer be zero. Hence, the second statement is true.\nThe two particles must have the same mass for the force to be zero. Hence, the third statement is true.\nTherefore, the fourth statement is the correct answer. Such a situation is impossible as the net force between the two particles cannot be 0.",
    "correct": true
  },
  {
    "ans": "B",
    "gt": "D",
    "err": false,
    "question": "Which one of the following statements is true concerning the motion of an ideal projectile launched at an angle of 45\u00b0 to the horizontal?\nAnswer Choices: (A) The acceleration vector points opposite to the velocity vector on the way up and in the same direction as the velocity vector on the way down. (B) The speed at the top of the trajectory is zero. (C) The object's total speed remains constant during the entire flight. (D) The vertical speed decreases on the way up and increases on the way down. Let's write a program.",
    "output": "import sympy as sp\n\n# define the symbols\nt = sp.symbols('t')\nv = sp.symbols('v')\na = sp.symbols('a')\n\n# define the equation of motion for an ideal projectile\n# x = vt*cos(45\u00b0)\n# y = vt*sin(45\u00b0) - 0.5*g*t^2\n\n# differentiate the position vector to get the velocity vector\n# v = \u221a(vx^2 + vy^2)\n\n# differentiate the velocity vector to get the acceleration vector\n# a = (dvx/dt, dvy/dt)\n\n# calculate the magnitude of the acceleration vector\n# |a| = sqrt(a_x^2 + a_y^2)\n\n# calculate the magnitude of the velocity vector\n# |v| = sqrt(v_x^2 + v_y^2)\n\n# at the top of the trajectory, the vertical speed is zero\n# so, |v| = |v|\n# and |a| = 0\n\n# for the other statements, we can make them more precise by substituting specific values\n\n# statement A\n# at the top of the trajectory, the acceleration vector points opposite to the velocity vector\n# and in the same direction as the velocity vector on the way down\n# so, a_y > 0 and a_x = 0\n\n# statement B\n# at the top of the trajectory, the speed is not zero\n# so, |v| \u2260 0\n\n# statement C\n# the total speed is not constant\n# the speed is zero at the top of the trajectory and non-zero at all other points\n# so, |v| \u2260 |v|\n\n# statement D\n# the vertical speed decreases on the way up and increases on the way down\n# and since the vertical speed is zero at the top, it increases on the way down\n# so, a_y > 0 and a_x = 0\n\n# therefore, statement B is true\ntrue_statement = B",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "A",
    "raw_ans": "33.333333333333336",
    "question": "Two electrically charged balls are separated by a short distance, producing a force of 50 \u03bcN between them. Keeping the charge of each ball the same, the mass of one of the balls but not the other is doubled. What is the new electric force between the balls?\nAnswer Choices: (A) 50 \u03bcN (B) 100 \u03bcN (C) 200 \u03bcN (D) 400 \u03bcN Let's write a program.",
    "output": "charge = 50\nmass1 = 1\nmass2 = 2\n\nnew_force = charge/((mass1+mass2)/2)\n\nprint(new_force)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "A",
    "raw_ans": "Mass",
    "question": "A moving 1.5-kg cart collides with and sticks to a 0.5-kg cart which was initially at rest. Immediately after the collision, the carts each have the same ______ as each other.\nAnswer Choices: (A) Velocity (B) Kinetic energy (C) Mass (D) Linear momentum Let's write a program.",
    "output": "mass1 = 1.5\nmass2 = 0.5\n\ntotal_mass = mass1 + mass2\n\nanswer = 'Mass'\n\nprint(answer)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "C",
    "raw_ans": "45.91836734693877",
    "question": "A rock is dropped off a cliff and strikes the ground with an impact velocity of 30 m/s. How high was the cliff?\nAnswer Choices: (A) 20 m (B) 30 m (C) 45 m (D) 60 m Let's write a program.",
    "output": "impact_velocity = 30 # m/s\r\ng = 9.8 # m/s^2\r\n\r\n# Calculate the height of the cliff\r\nheight = impact_velocity * impact_velocity / (2 * g)\r\n\r\nprint(height)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "C",
    "err": false,
    "gt": "C",
    "raw_ans": "Ax < g; Ay > g",
    "question": "A car moving with speed v reaches the foot of an incline of angle \u03b8. The car coasts up the incline without using the engine. Neglecting friction and air resistance, which of the following is correct about the magnitude of the car\u2019s horizontal acceleration ax and vertical acceleration ay?\nAnswer Choices: (A) ax = 0; ay < g (B) ax = 0; ay = g (C) ax < g; ay < g (D) ax < g; ay = g Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nv, theta = sp.symbols('v theta')\n\n# define the equations\nax = v*sp.cos(theta) - 9.8*sp.sin(theta)\nay = v*sp.sin(theta) + 9.8*sp.cos(theta)\n\n# ay is always greater than or equal to g\n# ax is always less than g\n\n# ay = g when theta = 90 degrees (i.e. no incline)\n# ax = 0 when theta = 90 degrees\n\n# for any other angle, ax < g and ay > g\n\nprint('Ax < g; Ay > g')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "D",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 13, in <module>\n  File \"<string>\", line 3, in run_it\nNameError: name 'plate_area' is not defined\n",
    "question": "Which of the following would increase the capacitance of a parallel-plate capacitor?\nAnswer Choices: (A) Using smaller plates (B) Replacing the dielectric material between the plates with one that has a smaller dielectric constant (C) Decreasing the voltage between the plates (D) Moving the plates closer together Let's write a program.",
    "output": "capacitance = 0\ncapacitance += plate_area * dielectric_constant\ncapacitance -= distance_between_plates\nprint(capacitance)\n\nif capacitance > 0:\n  print(\"A\")\nelif capacitance < 0:\n  print(\"D\")\nelse:\n  print(\"B\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "A",
    "raw_ans": "0",
    "question": "A man stands with his hands to his sides on a frictionless platform that is rotating. Which of the following could change the angular momentum of the man-platform system?\nAnswer Choices: (A) The man catches a baseball thrown to him by a friend. (B) The man thrusts his arms out away from his body (C) The man thrusts his arms out away from his body, and then quickly brings his arms back to his side again. (D) The man jumps straight up in the air and lands back on the platform. Let's write a program.",
    "output": "import numpy as np\n\n# Define the angular momentum\nangular_momentum = 0\n\n# Check each option\nif 'The man catches a baseball thrown to him by a friend.' == 'A':\n    angular_momentum += 1\nelif 'The man thrusts his arms out away from his body.' == 'B':\n    angular_momentum += 1\nelif 'The man thrusts his arms out away from his body, and then quickly brings his arms back to his side again.' == 'C':\n    angular_momentum += 1\nelif 'The man jumps straight up in the air and lands back on the platform.' == 'D':\n    angular_momentum += 1\n\n# Print the answer\nprint(angular_momentum)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "399999.99999999994",
    "question": "A cylinder with a movable piston contains a gas at pressure P = 1 \u00d7 10^5 Pa, volume V = 20 cm^3, and temperature T = 273 K. The piston is moved downward in a slow steady fashion allowing heat to escape the gas and the temperature to remain constant. If the final volume of the gas is 5 cm^3, what will be the resulting pressure?\nAnswer Choices: (A) 0.25 \u00d7 10^5 Pa (B) 2 \u00d7 10^5 Pa (C) 4 \u00d7 10^5 Pa (D) 8 \u00d7 10^5 Pa Let's write a program.",
    "output": "import math\n\n# define the initial values\nP = 1e5  # initial pressure in Pa\nV = 20e-6  # initial volume in m^3\nT = 273  # temperature in K\n\n# define the final volume\nV_final = 5e-6  # final volume in m^3\n\n# calculate the final pressure using the equation PV=nRT\n# n is constant, so PV=constant\n# so, P1V1 = P2V2\n# V2 is given, we can find P2\n\nP_final = (P * V) / V_final\n\nprint(P_final)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "D",
    "raw_ans": "Gamma rays",
    "question": "Which of the following types of electromagnetic radiation has the longest wavelength?\nAnswer Choices: (A) Gamma rays (B) Ultraviolet (C) Blue light (D) Orange light Let's write a program.",
    "output": "gamma_rays = 10^-14\nultraviolet = 10^-8\nblue_light = 10^-7\norange_light = 10^-6\n\nwavelength = {\n    \"Gamma rays\": gamma_rays,\n    \"Ultraviolet\": ultraviolet,\n    \"Blue light\": blue_light,\n    \"Orange light\": orange_light\n}\n\nlongest_wavelength = max(wavelength.values())\n\nfor key, value in wavelength.items():\n    if value == longest_wavelength:\n        print(key)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "C",
    "raw_ans": "0.6666666666666666",
    "question": "An electric motor has a label on it that reads: Input: 120V AC, 1.0 Amps, 60 Hz - Efficiency - 75%. At what constant speed can the motor lift up a 6 kg mass?\nAnswer Choices: (A) 0.5 m/s (B) 1.0 m/s (C) 1.5 m/s (D) 2.0 m/s Let's write a program.",
    "output": "efficiency = 0.75\ninput_voltage = 120\ninput_current = 1\ninput_frequency = 60\noutput_power = 6\n\n# calculate the actual power output of the motor\nactual_output_power = output_power / efficiency\n\n# calculate the output current of the motor\noutput_current = actual_output_power / input_voltage\n\n# calculate the speed of the motor\nspeed = (output_current * input_frequency) / 6\n\nprint(speed)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "D",
    "raw_ans": "The image gets larger at first and then smaller in size",
    "question": "A convex lens of focal length f = 0.2 m is used to examine a small coin lying on a table. During the examination, the lens is held a distance 0.3 m above the coin and is moved slowly to a distance of 0.1 m above the coin. During this process, what happens to the image of the coin?\nAnswer Choices: (A) The image continually increases in size. (B) The image continually decreases in size. (C) The image gets smaller at first and then bigger in size. (D) The image flips over. Let's write a program.",
    "output": "f = 0.2  # focal length of the lens\nd1 = 0.3  # distance of the lens from the coin when it is moving away\nd2 = 0.1  # distance of the lens from the coin when it is moving towards\n\n# The formula for the size of the image formed by a convex lens is:\n# h_i = f * (d_i - d_o) / (d_i - f)\n# where h_i is the height of the image, f is the focal length of the lens, d_i is the distance of the lens from the coin, and d_o is the original distance of the lens from the coin\n\n# When the lens is moving away from the coin, the image initially gets larger and larger.\n# When the lens is moving towards the coin, the image initially gets smaller and smaller.\n\n# So, the image first gets larger and then smaller.\n\nprint('The image gets larger at first and then smaller in size.')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 13, in <module>\n  File \"<string>\", line 9, in run_it\nAttributeError: module 'math' has no attribute 'G'\n",
    "question": "The Space Shuttle orbits 300 km above Earth\u2019s surface; Earth\u2019s radius is 6,400 km. What is the gravitational acceleration experienced by the Space Shuttle?\nAnswer Choices: (A) Zero (B) 4.9 m/s^2 (C) 9.8 m/s^2 (D) 8.9 m/s^2 Let's write a program.",
    "output": "import math\n\n# define the variables\nr_space_shuttle = 300 + 6400  # distance of space shuttle from earth's center\nr_earth = 6400  # radius of earth\n\n# calculate the gravitational acceleration\ng = math.G * r_earth**2 / r_space_shuttle**2\n\n# print the result\nprint(g)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "B",
    "raw_ans": "10053.096491487338",
    "question": "An astronaut lands on a planet whose mass and radius are each twice that of Earth. If the astronaut weighs 800 N on Earth, how much will he weigh on this planet?\nAnswer Choices: (A) 200 N (B) 400 N (C) 800 N (D) 1600 N Let's write a program.",
    "output": "import math\n\n# define the variables\nEarth_mass = 800  # N\nEarth_radius = 6400  # m\n\n# calculate the weight of the astronaut on the other planet\nother_planet_mass = 2 * Earth_mass\nother_planet_radius = 2 * Earth_radius\n\nother_planet_weight = math.pi * (other_planet_radius ** 2) * Earth_mass / (Earth_radius ** 2)\n\n# print the result\nprint(other_planet_weight)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "D",
    "raw_ans": "5.0 5.0",
    "question": "Two people, one of mass 100 kg and the other of mass 50 kg, stand facing each other on an ice-covered (essentially frictionless) pond. If the heavier person pushes on the lighter one with a force F, then\nAnswer Choices: (A) the force felt by the heavier person is (-1/2)F (B) the force felt by the person is -2F (C) the magnitude of the acceleration of the lighter person will be half of the magnitude of the acceleration of the heavier person (D) the magnitude of the acceleration of the lighter person will be twice the magnitude of the acceleration of the heavier person Let's write a program.",
    "output": "lighter = 100\nheavier = 50\n\nF = 10\n\nheavier_f = F - (F/2)\nlighter_f = F/2\n\nprint(heavier_f, lighter_f)\n",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "C",
    "raw_ans": "540.0",
    "question": "A 30 mF capacitor has 6 millicoulombs of charge on each plate. The energy stored in the capacitor is most nearly\nAnswer Choices: (A) 5.4 \u00d7 10\u201310 J (B) 9.0 \u00d7 10\u20138 J (C) 0.6 J (D) 12.5 J Let's write a program.",
    "output": "c = 30 # mF\nq = 6 # millicoulombs\n\n# Energy stored in a capacitor is given by (1/2)Cq^2\nE = 0.5 * c * (q**2)\n\nprint(E)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "gt": "A",
    "err": false,
    "question": "Which configuration of battery and resistors will create a circuit with the greatest current?\nAnswer Choices: (A) A high voltage battery with resistors arranged in series (B) A high voltage battery with resistors arranged in parallel (C) A low voltage battery with resistors arranged in series (D) A low voltage battery with resistors arranged in parallel Let's write a program.",
    "output": "battery_voltage = 100 # assuming battery voltage to be 100V\n\n# If resistors are arranged in series, the total resistance is the sum of the resistances of individual resistors\n# If resistors are arranged in parallel, the total resistance is the reciprocal of the sum of the reciprocals of the resistances of individual resistors\n\n# Let's calculate the current for each configuration\n\n# A high voltage battery with resistors arranged in series\ntotal_resistance_series = 100 + 10 + 1\ncurrent_series = battery_voltage / total_resistance_series\n\n# A high voltage battery with resistors arranged in parallel\ntotal_resistance_parallel = 1/10 + 1/100 + 1/1000\ncurrent_parallel = battery_voltage * total_resistance_parallel\n\n# A low voltage battery with resistors arranged in series\ntotal_resistance_series_low_voltage = 1 + 10 + 100\ncurrent_series_low_voltage = battery_voltage / total_resistance_series_low_voltage\n\n# A low voltage battery with resistors arranged in parallel\ntotal_resistance_parallel_low_voltage = 1/1 + 1/10 + 1/100\ncurrent_parallel_low_voltage = battery_voltage * total_resistance_parallel_low_voltage\n\n# Find the configuration with the greatest current\nmax_current = max(current_series, current_parallel, current_series_low_voltage, current_parallel_low_voltage)\n\n# Print the configuration\nif max_current == current_series:\n    print(\"A high voltage battery with resistors arranged in series\")\nelif max_current == current_parallel:\n    print(\"A high voltage battery with resistors arranged in parallel\")\nelif max_current == current_series_low_voltage:\n    print(\"A low voltage battery with resistors arranged in series\")\nelif max_current == current_parallel_low_voltage:\n    print(\"A low voltage battery with resistors arranged in parallel\")",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "9.985600000000002",
    "question": "A rubber ball (mass = 0.08 kg) is dropped from a height of 3.2 m, and after bouncing off the floor, rises almost to its original height. If the impact time with the floor is measured to be 0.04 s, what average force did the floor exert on the ball?\nAnswer Choices: (A) 0.16 N (B) 0.16 N (C) 0.32 N (D) 0.36 N Let's write a program.",
    "output": "impact_time = 0.04\nmass = 0.08\ninitial_height = 3.2\n# Since the ball rises almost to its original height, the change in height is negligible.\n# Therefore, the change in potential energy is approximately zero.\n# Hence, the average force exerted by the floor is the change in kinetic energy divided by the impact time.\n\nchange_in_kinetic_energy = 0.5 * mass * (initial_height - 0.04)**2\naverage_force = change_in_kinetic_energy / impact_time\nprint(average_force)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 9, in <module>\n  File \"<string>\", line 2, in run_it\nNameError: name 'I' is not defined\n",
    "question": "Two objects, a sphere and a block of the same mass, are released from rest at the top of an inclined plane. The sphere rolls down the inclined plane without slipping. The block slides down the plane without friction. Which object reaches the bottom of the ramp first?\nAnswer Choices: (A) The sphere, because it gains rotational kinetic energy, but the block does not (B) The sphere, because it gains mechanical energy due to the torque exerted on it, but the block does not (C) The block, because it does not lose mechanical energy due to friction, but the sphere does (D) The block, because it does not gain rotational kinetic energy, but the sphere does Let's write a program.",
    "output": "sphere = 1/2*I*omega**2\nblock = 1/2*m*v**2\n\nif sphere < block:\n  print('A')\nelif sphere > block:\n  print('D')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "C",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 1:4: The width of the fringes in the interference pattern is proportional to the wavelength of the light and inversely proportional to the distance from the slits to the screen. Moving the slits closer together or moving the screen closer will both increase the width of the fringes.\n",
    "question": "Which of the following changes to a double-slit interference experiment would increase the widths of the fringes in the interference pattern that appears on the screen?\nAnswer Choices: (A) Use light of a shorter wavelength. (B) Move the screen closer to the slits. (C) Move the slits closer together. (D) Use light with a lower wave speed. Let's write a program.",
    "output": "The width of the fringes in the interference pattern is proportional to the wavelength of the light and inversely proportional to the distance from the slits to the screen. Moving the slits closer together or moving the screen closer will both increase the width of the fringes.\n\n\nimport sympy as sp\n\n# Define the variables\nwavelength = sp.symbols('wavelength')\ndistance = sp.symbols('distance')\n\n# The width of the fringes is proportional to the wavelength and inversely proportional to the distance\n# So, we can say that the width of the fringes is a function of wavelength and distance\n# For the same wavelength, increasing the distance will result in a narrower fringe\n# For the same distance, increasing the wavelength will result in a wider fringe\n\n# Test with some sample values\nwavelength_sample = 400  # nm\ndistance_sample = 100  # cm\n\n# Calculate the width of the fringes for the first case (increasing the distance)\nwidth_distance_increase = wavelength_sample * distance_sample / (distance_sample + 1)\n\n# Calculate the width of the fringes for the second case (increasing the wavelength)\nwidth_wavelength_increase = wavelength_sample * (distance_sample + 1) / distance_sample\n\n# Print the results\nprint(width_distance_increase, width_wavelength_increase)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "B",
    "raw_ans": "-25",
    "question": "A stone is thrown vertically upward with an initial speed of 5 m/s. What is the velocity of the stone 3 seconds later?\nAnswer Choices: (A) 25 m/s, upward (B) 25 m/s, downward (C) 35 m/s, upward (D) 35 m/s, downward Let's write a program.",
    "output": "initial_velocity = 5 # m/s\r\ntime = 3 # seconds\r\n\r\n# The velocity of the stone after 3 seconds is given by the formula:\r\n# v = u + at\r\n# where u is the initial velocity, a is the acceleration (which is constant for a freely falling body),\r\n# and t is the time elapsed.\r\n\r\n# Since the stone is thrown upward, the acceleration due to gravity, g, is negative.\r\n# The acceleration due to gravity is approximately 9.8 m/s^2, but since we are dealing with small velocities,\r\n# we can approximate it as -10.\r\n\r\ng = -10 # m/s^2\r\n\r\n# Calculate the velocity of the stone 3 seconds later\r\nvelocity = initial_velocity + g*time\r\n\r\n# Print the result\r\nprint(velocity)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "C",
    "err": false,
    "gt": "D",
    "raw_ans": "[0, 4]",
    "question": "A particle is subjected to a conservative force whose potential energy function is U(x) = (x \u2013 2)3 \u2013 12x where U is given in joules when x is measured in meters. Which of the following represents a position of stable equilibrium?\nAnswer Choices: (A) x = \u20134 (B) x = \u20132 (C) x = 0 (D) x = 4 Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nx = sp.symbols('x')\n\n# define the potential energy function\nU = (x - 2)**3 - 12*x\n\n# find the derivative of the potential energy function\nU_prime = sp.diff(U, x)\n\n# find the positions of stable equilibrium\nstable_equilibrium_positions = sp.solve(U_prime, x)\n\n# print the position of stable equilibrium\nprint(stable_equilibrium_positions)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 15, in <module>\n  File \"<string>\", line 8, in run_it\nUnboundLocalError: cannot access local variable 'radius' where it is not associated with a value\n",
    "question": "An electron (mass = m, charge = -E) is rotated with speed V upwards, in the plane of the page, into a region containing a uniform magnetic field B, that is directed into the plane of the page. Describe the electron's subsequent circular motion.\nAnswer Choices: (A) Clockwise rotation; radius of path = mv/(eB) (B) Counterclockwise rotation; radius of path = mv/(eB) (C) Clockwise rotation; radius of path = eB/(mv) (D) Counterclockwise rotation; radius of path = eB/(mv) Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nm, e, B, V = sp.symbols('m e B V')\n\n# calculate the radius of the circular path\nradius = sp.Eq(m*V, e*B*radius)\n\n# since the electron is rotated upwards, the circular motion is clockwise\nrotation = 'clockwise'\n\n# print the result\nprint(rotation)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "gt": "B",
    "err": false,
    "question": "A ball of mass is attached to a string connected to the ceiling, forming a pendulum. When the string is raised to an angle of 50 degrees below the horizontal (the ceiling) and released, the ball swings back and forth with a period of 0.4 s. Which of the following changes to the pendulum would decrease the period of the pendulum?\nAnswer Choices: (A) Increasing the mass of the ball (B) Decreasing the length of the string (C) Decreasing the angle of the string from the horizontal when released (D) Decreasing the mass of the ball Let's write a program.",
    "output": "import math\n\n# define the variables\nmass = 1 # in kg\nstring_length = 1 # in m\nangle = 50 # in degrees\n\n# calculate the period of the pendulum\nperiod = 2 * math.pi * math.sqrt(string_length / mass)\n\n# Now, we will consider each change to the pendulum and see which one decreases the period.\n\n# (A) Increasing the mass of the ball\n# As the mass increases, the period increases. So, this change will not decrease the period.\n\n# (B) Decreasing the length of the string\n# As the length decreases, the period increases. So, this change will not decrease the period.\n\n# (C) Decreasing the angle of the string from the horizontal when released\n# As the angle decreases, the period decreases. So, this change will decrease the period.\n\n# (D) Decreasing the mass of the ball\n# As the mass decreases, the period decreases. So, this change will decrease the period.\n\n# Therefore, the change that decreases the period is (C) Decreasing the angle of the string from the horizontal when released.\n\nThe answer is B",
    "correct": true
  },
  {
    "ans": "D",
    "err": false,
    "gt": "B",
    "raw_ans": "2.0",
    "question": "What happens to the image formed by a concave mirror as the object is moved from far away to near the focal point?\nAnswer Choices: (A) The image moves away from the mirror and gets shorter. (B) The image moves away from the mirror and gets taller. (C) The image moves toward the mirror and gets shorter. (D) The image moves toward the mirror and gets taller. Let's write a program.",
    "output": "import math\n\n# define the focal length\nf = 1\n\n# define the object distance\nu = 2\n\n# calculate the image distance\nv = u*f / (u-f)\n\n# print the result\nprint(v)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "1.6",
    "question": "A disk of radius 0.1 m initially at rest undergoes an angular acceleration of 2.0 rad/s^2. If the disk only rotates, find the total distance traveled by a point on the rim of the disk in 4.0 s.\nAnswer Choices: (A) 0.4 m (B) 0.8 m (C) 1.2 m (D) 1.6 m Let's write a program.",
    "output": "import math\n\n# define the variables\nradius = 0.1 # in m\nangular_acceleration = 2.0 # in rad/s^2\ntime = 4.0 # in s\n\n# calculate the total distance traveled by a point on the rim of the disk in 4.0 s\n# using the formula of the distance traveled by a point on the rim of a disk under constant acceleration\ndistance_traveled = 2 * radius * angular_acceleration * time\n\n# print the result\nprint(distance_traveled)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "C",
    "err": false,
    "gt": "C",
    "raw_ans": "4.0",
    "question": "A stone is thrown horizontally with an initial speed of 10 m/s from a bridge. Assuming that air resistance is negligible, how long would it take the stone to strike the water 80 m below the bridge?\nAnswer Choices: (A) 1 s (B) 2 s (C) 4 s (D) 8 s Let's write a program.",
    "output": "import math\n\n# define the initial speed and height\ninitial_speed = 10\nheight = 80\n\n# calculate the time of flight\ntime_of_flight = math.sqrt(2 * height / initial_speed)\n\n# print the time of flight\nprint(time_of_flight)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "gt": "C",
    "err": false,
    "question": "Which of the following statements about electric and magnetic fields is FALSE:\nAnswer Choices: (A) A charge moving along the direction of an electric field will experience a force, but a charge moving along the direction of a magnetic field will not experience a force. (B) All charges experience a force in an electric field, but only moving charges can experience a force in a magnetic field. (C) A positive charge moves in the direction of an electric field; a positive charge moves perpendicular to a magnetic field. (D) All moving charges experience a force parallel to an electric field and perpendicular to a magnetic field. Let's write a program.",
    "output": "a = 'A charge moving along the direction of an electric field will experience a force,\\nbut a charge moving along the direction of a magnetic field will not experience a force.'\nb = 'All charges experience a force in an electric field,\\nbut only moving charges can experience a force in a magnetic field.'\nc = 'A positive charge moves in the direction of an electric field;\\n a positive charge moves perpendicular to a magnetic field.'\nd = 'All moving charges experience a force parallel to an electric field and perpendicular to a magnetic field.'\n\nif a == 'A charge moving along the direction of an electric field will experience a force,\\nbut a charge moving along the direction of a magnetic field will not experience a force.':\n  print(a)\n\nelif b == 'All charges experience a force in an electric field,\\nbut only moving charges can experience a force in a magnetic field.':\n  print(b)\n\nelif c == 'A positive charge moves in the direction of an electric field;\\n a positive charge moves perpendicular to a magnetic field.':\n  print(c)\n\nelse:\n  print(d)",
    "correct": false
  },
  {
    "ans": "C",
    "err": true,
    "gt": "B",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 12, in run_it\nAttributeError: module 'math' has no attribute 'G'\n",
    "question": "The Space Shuttle orbits 300 km above the Earth\u2019s surface; the Earth\u2019s radius is 6400 km. What is the acceleration due to Earth\u2019s gravity experienced by the Space Shuttle?\nAnswer Choices: (A) 4.9 m/s^2 (B) 8.9 m/s^2 (C) 9.8 m/s^2 (D) 10.8 m/s^2 Let's write a program.",
    "output": "import math\n\n# define the variables\nSpace_shuttle_orbit=300\nEarth_radius=6400\n\n# calculate the distance between the Space shuttle and the center of the Earth\ndistance = Earth_radius + Space_shuttle_orbit\n\n# calculate the acceleration due to Earth\u2019s gravity\nacceleration = math.G * (Earth_radius / distance)**2\n\n# print the result\nprint(acceleration)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 35, in <module>\n  File \"<string>\", line 28, in run_it\n  File \"<string>\", line 10, in calculate_change_in_internal_energy\nTypeError: 'int' object is not subscriptable\n",
    "question": "A confined ideal gas undergoes a cyclical process in three steps\u2014an isobaric step, followed by an isochoric step, followed by an isothermal step. Which of the following must be true?\nAnswer Choices: (A) The change in internal energy of the gas is equal to the work done during the isobaric step. (B) The change in internal energy of the gas is equal to the work done during the isobaric step minus the work done during the isothermal step. (C) The total work done during the cycle is positive. (D) The total work done during the cycle is equal but opposite to the net amount of heat transferred. Let's write a program.",
    "output": "def calculate_work(pressure, volume, temperature):\n    # work is done by the gas during isobaric and isochoric steps\n    work = (pressure * (volume[1] - volume[0])) + ((-pressure) * (volume[2] - volume[1]))\n    return work\n\ndef calculate_change_in_internal_energy(work, temperature):\n    # change in internal energy is equal to the work done during the isobaric step\n    # minus the work done during the isothermal step\n    change_in_internal_energy = work[0] - work[1]\n    return change_in_internal_energy\n\ndef calculate_total_work(work):\n    # total work done during the cycle is positive\n    total_work = sum(work)\n    return total_work\n\ndef calculate_net_amount_of_heat_transferred(work, temperature):\n    # the total work done during the cycle is equal but opposite to the net amount of heat transferred\n    net_amount_of_heat_transferred = total_work * (-1)\n    return net_amount_of_heat_transferred\n\npressure = 1  # in atm\nvolume = [1, 2, 3]  # in m^3\ntemperature = [1, 2, 3]  # in K\n\nwork = calculate_work(pressure, volume, temperature)\nchange_in_internal_energy = calculate_change_in_internal_energy(work, temperature)\ntotal_work = calculate_total_work(work)\nnet_amount_of_heat_transferred = calculate_net_amount_of_heat_transferred(work, temperature)\n\nprint(change_in_internal_energy)\nprint(total_work)\nprint(net_amount_of_heat_transferred)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "gt": "A",
    "err": false,
    "question": "A sphere starts from rest atop a hill with a constant angle of inclination and is allowed to roll without slipping down the hill. What force provides the torque that causes the sphere to rotate?\nAnswer Choices: (A) Static friction (B) Kinetic friction (C) The normal force of the hill on the sphere (D) Gravity Let's write a program.",
    "output": "The force that provides the torque is the component of the weight of the sphere that is parallel to the hill's surface. This component of the weight is proportional to the sine of the angle of inclination. The normal force of the hill on the sphere is perpendicular to the hill's surface and does not provide a torque. The answer is B.",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "D",
    "raw_ans": "0",
    "question": "A block is dragged along a table and experiences a frictional force, f, that opposes its movement. The force exerted on the block by the table is\nAnswer Choices: (A) zero (B) parallel to the table (C) perpendicular to the table (D) neither parallel nor perpendicular to the table Let's write a program.",
    "output": "force_exerted_by_table=0\r\nprint(force_exerted_by_table)\r\n\r\n\r\n\r\n\r\n",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "GMm/r^2, the force of the table on the wood at that close range is sufficient to balance the force of the Earth on the wood",
    "question": "A table supports a wooden block placed on the tabletop. Which fundamental force of nature is responsible for this interaction, and why?\nAnswer Choices: (A) The electric force, because the protons in the nuclei of the top atomic layer of the table repel the nuclei in the bottom atomic layer of the wood. (B) The gravitational force, because by F = GMm/r^2, the force of the table on the wood at that close range is sufficient to balance the force of the Earth on the wood. (C) The electric force, because the outer electrons in the top atomic layer of the table repel the outer electrons in the bottom atomic layer of the wood. (D) The strong nuclear force, because the protons in the nuclei of the top atomic layer of the table repel the nuclei in the bottom atomic layer of the wood. Let's write a program.",
    "output": "table_supports_wooden_block=2\r\nFundamental_force_of_nature=1\r\nif table_supports_wooden_block<Fundamental_force_of_nature:\r\n  print(\"The electric force, because the protons in the nuclei of the top atomic layer of the table repel the nuclei in the bottom atomic layer of the wood.\")\r\nelif table_supports_wooden_block>Fundamental_force_of_nature:\r\n  print(\"The gravitational force, because by F = GMm/r^2, the force of the table on the wood at that close range is sufficient to balance the force of the Earth on the wood.\")\r\n",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": true,
    "gt": "D",
    "raw_ans": "",
    "question": "Which of the following is NOT equal to one tesla?\nAnswer Choices: (A) 1 J/(A*m^2) (B) 1 kg/(C*s) (C) 1 N/(A*m) (D) 1 A*N/V Let's write a program.",
    "output": "tesla=1\r\nkg_s=1\r\nN_A_m=1\r\nA_N_V=1\r\nif tesla!=kg_s and tesla!=N_A_m and tesla!=A_N_V:\r\n    print(tesla)\r\n",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "gt": "A",
    "err": false,
    "question": "A children\u2019s toy consists of a cart whose very light wheels are attached to a rubber band. This rubber band can wind and unwind around the axle supporting the wheels. This toy is given a shove, after which the toy rolls across a flat surface and up a ramp. It is observed that the toy does not go a consistent distance up the ramp\u2014in some trials it ends up higher than in other trials, even though the shove imparts the same kinetic energy to the cart each time. Which of the following is a reasonable explanation for this phenomenon?\nAnswer Choices: (A) Depending on how the rubber band is initially wound, more or less potential energy can be transferred from the rubber band to the kinetic energy of the car\u2019s motion. (B) The normal force on the cart\u2019s wheels will be different depending on how much the rubber band winds or unwinds. (C) How much energy is transferred from kinetic energy to gravitational potential energy depends on the vertical height at which the cart ends up. (D) Some of the cart\u2019s initial kinetic energy will be dissipated due to work done by friction. Let's write a program.",
    "output": "import sympy as sp\n\n# Define the variables\nE_shove, E_grav, E_friction = sp.symbols('E_shove E_grav E_friction')\n\n# The total energy given to the cart is the shove energy\n# The shove energy is constant\n# The gravitational potential energy and the friction depend on the height\n# The height can be different each time the cart rolls\n\n# The total energy given to the cart (E_shove) is transferred to these three forms:\n# E_grav + E_friction + E_shove = constant\n# Therefore, E_grav + E_friction = E_shove - E_shove = 0\n\n# As the cart rolls up the ramp, the height at which it ends up (h) will be different each time\n# The gravitational potential energy (E_grav = mgh) and the friction energy (E_friction = \u03bcmgx) will be different for each trial, where x is the distance the cart rolls before it comes to rest\n# Therefore, the total energy given to the cart (E_shove) will be transferred to different gravitational potential and friction energies each time the cart rolls\n\n# Hence, the answer is A.",
    "correct": true
  },
  {
    "ans": "A",
    "err": true,
    "gt": "C",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 6, in <module>\n  File \"<string>\", line 3, in run_it\nNameError: name 'h' is not defined\n",
    "question": "An object is released from rest and falls a distance h during the first second of time. How far will it fall during the next second of time?\nAnswer Choices: (A) h (B) 2h (C) 3h (D) 4h Let's write a program.",
    "output": "object_released=1\r\nfall_distance_first_sec=h\r\nfall_distance_next_sec=object_released*h\r\nprint(fall_distance_next_sec)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 2\nSyntaxError: import * only allowed at module level\n",
    "question": "Two ice skaters are moving on frictionless ice and are about to collide. The 50-kg skater is moving directly west at 4 m/s. The 75-kg skater is moving directly north at 2 m/s. After the collision they stick together. For this scenario, which of the following is true?\nAnswer Choices: (A) The linear momentum of the system is conserved because the net force on the system is nonzero during the collision. (B) Only the kinetic energy of the system is conserved because it is an inelastic collision. (C) Only the kinetic energy of the system is conserved because it is an elastic collision. (D) The linear momentum of the system is conserved because the net force on the system is zero. Let's write a program.",
    "output": "from sympy import *\n\nfrom sympy.physics.mechanics import *\n\n#System variables\nm1, m2, v1, v2 = symbols('m1 m2 v1 v2')\n\n#Initial state of the system\ninitial_state = m1*v1 + m2*v2\n\n#Final state of the system after the collision\nfinal_state = sqrt((m1+m2)*(v1+v2)**2)\n\n#The linear momentum of the system is conserved if the initial and final states are equal\nconservation_of_momentum = Eq(initial_state, final_state)\n\n#The kinetic energy of the system is conserved if the initial and final states are equal\nconservation_of_kinetic_energy = Eq(m1*v1**2 + m2*v2**2, (m1+m2)*(v1+v2)**2)\n\n#The net force on the system is zero during the collision\nnet_force = 0\n\n#Check if each statement is true\nif conservation_of_momentum and conservation_of_kinetic_energy and net_force is None:\n    print('A')\nelif conservation_of_kinetic_energy and net_force is None:\n    print('C')\nelif conservation_of_momentum and net_force is None:\n    print('D')\nelse:\n    print('B')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "err": false,
    "gt": "C",
    "raw_ans": "2.9757690429687495e+30",
    "question": "The mass of the Earth is 5.97 \u00d7 10^24 kg. The Moon, whose center is 3.84 \u00d7 10^8 m from the Earth\u2019s center, has mass 7.35 \u00d7 10^22 kg. Which of the following is the best estimate of the gravitational force of the Earth on the Moon?\nAnswer Choices: (A) 10^39 N (B) 10^29 N (C) 10^19 N (D) 10^9 N Let's write a program.",
    "output": "earth_mass = 5.97*10**24\nmoon_mass = 7.35*10**22\ndistance = 3.84*10**8\n\ngravitational_force = (earth_mass*moon_mass)/(distance**2)\n\nprint(gravitational_force)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "30.0",
    "question": "An object of volume 2 \u00d7 10^-3 m^3 and weight 6 N is placed into a tank of water, where it floats. What percentage of the object's volume is above the surface of the water?\nAnswer Choices: (A) 12% (B) 30% (C) 60% (D) 70% Let's write a program.",
    "output": "volume = 2*10**-3\nweight = 6\ndensity = weight/volume\npercentage = density/100\nprint(percentage)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "C",
    "raw_ans": "18.0000000000000",
    "question": "The position of an object is given by the equations x = 2.0t^3 + 4.0t + 6.25, where x is in meters and t is in seconds. What is the acceleration of the object at t = 1.50 s?\nAnswer Choices: (A) 6 m/s^2 (B) 12 m/s^2 (C) 18 m/s^2 (D) 24 m/s^2 Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nt = sp.symbols('t')\n\n# define the position equation\nx = 2*t**3 + 4*t + 6.25\n\n# find the acceleration by differentiating the position equation twice\na = sp.diff(x, t, 2)\n\n# substitute t = 1.50 s into the acceleration equation\na_at_t_1_5 = a.subs(t, 1.5)\n\n# print the result\nprint(a_at_t_1_5)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "err": false,
    "gt": "A",
    "raw_ans": "displacement*normal_force",
    "question": "A man stands in an elevator as it begins to ascend. Does the normal force from the floor do work on the man?\nAnswer Choices: (A) Yes, and the work done will be positive. (B) Yes, and the work done will be negative. (C) Yes, but the sign can\u2019t be determined. (D) No. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nnormal_force = sp.symbols('normal_force')\ndisplacement = sp.symbols('displacement')\n\n# the normal force is the force exerted by the floor on the man\n# the displacement is the distance the man moves upwards\n# the work done is the product of the force and the displacement\n\n# if the man moves upwards, the work done will be positive\n# if the man moves downwards, the work done will be negative\n\nwork_done = normal_force * displacement\n\n# print the result\nprint(work_done)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "err": false,
    "gt": "A",
    "raw_ans": "40.0",
    "question": "How long would it take a car, starting from rest and accelerating uniformly in a straight line at 5 m/s^2, to cover a distance of 200 m ?\nAnswer Choices: (A) 9.0 s (B) 10.5 s (C) 12.0 s (D) 15.5 s Let's write a program.",
    "output": "time = 200/5\nprint(time)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "II only",
    "question": "Which of the following conditions are necessary for an object to be in static equilibrium? I. The vector sum of all torques on the object must equal zero. II. The vector sum of all forces on the object must equal zero. III. The sum of the object\u2019s potential and kinetic energies must be zero.\nAnswer Choices: (A) I only (B) II only (C) III only (D) I and II only Let's write a program.",
    "output": "object_in_equilibrium=None\r\nif object_in_equilibrium is None:\r\n   print('II only')\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "A",
    "raw_ans": "The net force is zero, because the student\u2019s push in the positive direction must equal the force of friction in the negative direction",
    "question": "A student pushes a puck across a table, moving it from position x = 0 to position x = 0.2 m. After he lets go, the puck continues to travel across the table, coming to rest at position x = 1.2 m. When the puck is at position x = 1.0 m, which of the following is a correct assertion about the net force on the puck?\nAnswer Choices: (A) The net force is in the negative direction, because the puck is moving in the positive direction but slowing down. (B) The net force is down, because the puck is near the Earth, where gravitational acceleration is 10 m/s^2 downward. (C) The net force is in the positive direction, because the student\u2019s push caused the puck to speed up in the positive direction. (D) The net force is zero, because the student\u2019s push in the positive direction must equal the force of friction in the negative direction. Let's write a program.",
    "output": "student_push=0.2\r\npuck_stop=1.2\r\npuck_position=1.0\r\nif student_push<puck_stop and puck_position<1.0:\r\n  if student_push>0:\r\n    print(\"The net force is in the positive direction, because the student\u2019s push caused the puck to speed up in the positive direction.\")\r\n  else:\r\n    print(\"The net force is in the negative direction, because the puck is moving in the positive direction but slowing down.\")\r\nelif puck_position<1.0:\r\n  print(\"The net force is down, because the puck is near the Earth, where gravitational acceleration is 10 m/s^2 downward.\")\r\nelse:\r\n  print(\"The net force is zero, because the student\u2019s push in the positive direction must equal the force of friction in the negative direction.\")\r",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "gt": "B",
    "err": false,
    "question": "Experimenter A uses a very small test charge qo, and experimenter B uses a test charge 2qo to measure an electric field produced by two parallel plates. A finds a field that is\nAnswer Choices: (A) greater than the field found by B (B) the same as the field found by B (C) less than the field found by B (D) either greater or less than the field found by B, depending on the accelerations of the test charges Let's write a program.",
    "output": "test_charge_A = 2\r\ntest_charge_B = 4\r\n\r\nif test_charge_A < test_charge_B:\r\n   print('less than the field found by B')\r\n\r\nelif test_charge_A > test_charge_B:\r\n   print('greater than the field found by B')\r\n\r\nelse:\r\n  print('the same as the field found by B')",
    "correct": true
  },
  {
    "ans": "B",
    "err": true,
    "gt": "D",
    "raw_ans": "",
    "question": "Two objects, A and B, have equal charge and equal mass. Neither body is in motion because the gravitational and electrostatic forces between them are equal. If the mass of Object A is halved, equilibrium will be maintained if\nAnswer Choices: (A) the charge on Object A were doubled (B) the charge on Object B were halved (C) the charge on Object B were doubled (D) the mass on Object B were halved Let's write a program.",
    "output": "charge_A = 1\ncharge_B = 1\nmass_A = 1\nmass_B = 1\n\nif mass_A == 0.5 * mass_B:\n  if charge_A == charge_B:\n    print(\"the charge on Object A were doubled\")\n  elif charge_A == 2 * charge_B:\n    print(\"the charge on Object B were doubled\")\n  else:\n    print(\"the charge on Object B were halved\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "D",
    "raw_ans": "11.11111111111111",
    "question": "A 2 \u03bcF capacitor is connected directly to a battery. When the capacitor is fully charged, it stores 600 \u03bcC of charge. An experimenter replaces the 2 \u03bcF capacitor with three 18 \u03bcF capacitors in series connected to the same battery. Once the capacitors are fully charged, what charge is stored on each capacitor?\nAnswer Choices: (A) 100 \u03bcC (B) 200 \u03bcC (C) 600 \u03bcC (D) 1800 \u03bcC Let's write a program.",
    "output": "initial_capacitance = 2  # in microfarads\ninitial_charge = 600  # in microcoulombs\n\n# The total capacitance of the three capacitors is the same as the initial capacitance\ntotal_capacitance = 3 * 18\n\n# The total charge stored on the capacitors is the same as the initial charge\ntotal_charge = initial_charge\n\n# The charge stored on each capacitor is the total charge divided by the total capacitance\ncharge_per_capacitor = total_charge / total_capacitance\n\nprint(charge_per_capacitor)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "B",
    "raw_ans": "-0.018000000000000002",
    "question": "A particle's kinetic energy is changing at a rate of \u20136.0 J/s when its speed is 3.0 m/s. What is the magnitude of the force on the particle at this moment?\nAnswer Choices: (A) 0.5 N (B) 2.0 N (C) 4.5 N (D) 9.0 N Let's write a program.",
    "output": "speed = 3 # in m/s\nrate = -6 # in J/s\n\n# convert rate to m/s\nforce_rate = rate / 1000\n\n# calculate force\nforce = force_rate * speed\n\nprint(force)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "normal force",
    "question": "A car rounds a banked curve of uniform radius. Three forces act on the car: a friction force between the tires and the road, the normal force from the road, and the weight of the car. Which provides the centripetal force which keeps the car in circular motion?\nAnswer Choices: (A) the friction force alone (B) the normal force alone (C) the weight alone (D) a combination of the normal force and the friction force Let's write a program.",
    "output": "banked_curve_centripetal_force = 'normal force'\nprint(banked_curve_centripetal_force)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "C",
    "raw_ans": "60.0",
    "question": "A stone is thrown horizontally with an initial speed of 30 m/s from a bridge. Find the stone's total speed when it enters the water 4 seconds later, assuming that air resistance is negligible.\nAnswer Choices: (A) 30 m/s (B) 40 m/s (C) 50 m/s (D) 60 m/s Let's write a program.",
    "output": "initial_speed = 30 # m/s\ntime = 4 # seconds\n\n# horizontal distance traveled in 4 seconds\nhorizontal_distance = initial_speed * time\n\n# vertical distance traveled in 4 seconds\nvertical_distance = initial_speed * time\n\n# total distance traveled in 4 seconds\ntotal_distance = horizontal_distance + vertical_distance\n\n# total speed when it enters the water\ntotal_speed = total_distance / time\n\nprint(total_speed)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 10, in run_it\nNameError: name 'old_force' is not defined\n",
    "question": "What happens to the force of gravitational attraction between two small objects if the mass of each object is doubled and the distance between their centers is doubled?\nAnswer Choices: (A) It is doubled. (B) It is quadrupled. (C) It is halved. (D) It remains the same. Let's write a program.",
    "output": "old_mass = 1\r\nold_distance = 1\r\n\r\nnew_mass = 2 * old_mass\r\nnew_distance = 2 * old_distance\r\n\r\nnew_force = (new_mass * new_mass) / (new_distance * new_distance)\r\n\r\nif new_force == old_force:\r\n    print(\"It remains the same.\")\r\nelif new_force < old_force:\r\n    print(\"It is halved.\")\r\nelif new_force > old_force:\r\n    print(\"It is quadrupled.\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "gt": "B",
    "err": false,
    "question": "How much current does a 60 W light bulb draw if it operates at a voltage of 120 V ?\nAnswer Choices: (A) 0.25 A (B) 0.5 A (C) 2:00 AM (D) 4:00 AM Let's write a program.",
    "output": "Let's reason about the multi-choice question.\n60 W bulb draws 0.5 A at 120 V.\nThe answer is B",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "B",
    "raw_ans": "16",
    "question": "What happens to the pressure, P, of an ideal gas if the temperature is increased by a factor of 2 and the volume is increased by a factor of 8 ?\nAnswer Choices: (A) P decreases by a factor of 16. (B) P decreases by a factor of 4. (C) P decreases by a factor of 2. (D) P increases by a factor of 4. Let's write a program.",
    "output": "T = 2\nV = 8\nP = 1\nP_new = T*V*P\nprint(P_new)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "err": true,
    "gt": "C",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 11, in <module>\n  File \"<string>\", line 2, in run_it\nNameError: name 'Refraction' is not defined\n",
    "question": "A beam of monochromatic light entering a glass window pane from the air will experience a change in\nAnswer Choices: (A) frequency and wavelength (B) frequency and speed (C) speed and wavelength (D) speed only Let's write a program.",
    "output": "Light = Refraction\r\nGlass = Refraction\r\nAir = 1\r\nif Glass>Air:\r\n print(\"Speed\")\r\nelif Glass>Light:\r\n print(\"Wavelength\")\r\nelif Light>Glass:\r\n print(\"Frequency\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "gt": "D",
    "err": false,
    "question": "A rigid, solid container of constant volume holds an ideal gas of volume v1 and temperature T1 and pressure P1. The temperature is increased in an isochoric process. Which of the following is NOT true?\nAnswer Choices: (A) The average speed of the molecules increases. (B) The pressure increases. (C) The kinetic energy of the system increases. (D) The volume increases. Let's write a program.",
    "output": "T1 = 20\r\nT2 = 30\r\nif T1<T2:\r\n print(\"A\")\r\nelif T1>T2:\r\n print(\"B\")",
    "correct": false
  },
  {
    "ans": "D",
    "err": true,
    "gt": "A",
    "raw_ans": "",
    "question": "A string of fixed tension and linear mass density is attached to a vibrating speaker. It is observed that a speaker frequency of 60 Hz does not produce standing waves in the string. Which explanation for this phenomenon is correct?\nAnswer Choices: (A) The string length is not a multiple of half the wavelength of the wave. (B) The wave speed on the string is fixed. (C) 60 Hz is in the lowest range of audible sound. (D) The wavelength of the wave produced by the speaker is equal to the speed of waves on the string divided by 60 Hz. Let's write a program.",
    "output": "string_length = 0 # assuming the string length is a multiple of half the wavelength\nwave_speed = 0 # assuming the wave speed on the string is fixed\naudible_sound = 60 # assuming 60 Hz is in the lowest range of audible sound\n\nif string_length is None or wave_speed is None or audible_sound is None:\n    print(\"The answer is D.\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 25, in <module>\n  File \"<string>\", line 15, in run_it\n  File \"<string>\", line 15, in <listcomp>\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/sympy/core/relational.py\", line 510, in __bool__\n    raise TypeError(\"cannot determine truth value of Relational\")\nTypeError: cannot determine truth value of Relational\n",
    "question": "A spherical charge distribution varies with the radius r by the equation \u03c1 = ar, where \u03c1 is the volume charge density and a is a positive constant. The distribution goes out to a radius R. Which of the following is true of the electric field strength due to this charge distribution at a distance r from the center?\nAnswer Choices: (A) It increases as r approaches infinity. (B) It decreases linearly for r > R. (C) It increases linearly for r > R. (D) It increases non-linearly for r < R. Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nr, a, R = sp.symbols('r a R')\n\n# given equation\neq = sp.Eq(r, a*r**2)\n\n# solve the equation for r\nsolution = sp.solve(eq, r)\n\n# Since r is the distance from the center, it should be greater than 0\n# So, we only consider the positive solution\nr_value = [sol.evalf() for sol in solution if sol.evalf()>0][0]\n\n# The electric field strength at a distance r from the center is given by the formula:\n# E = (1/(4*pi*epsilon)) * (rho(r) / r**2)\n# Since rho(r) = ar and rho(r) is proportional to r**2, E is inversely proportional to r**2\n# So, as r approaches infinity, E approaches 0\n\nE_infinity = (a*r_value**2) / (r_value**2)\n\nprint(E_infinity)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "C",
    "raw_ans": "Appears higher than 400 Hz and the frequency increases as it falls",
    "question": "An alarm whose frequency is 400 Hz is dropped out of a third-floor window. The student who drops it measures the frequency with a very sensitive oscilloscope. The measured frequency\nAnswer Choices: (A) appears higher than 400 Hz and the frequency increase as it falls (B) appears higher than 400 Hz and the frequency decreases as it falls (C) appears lower than 400 Hz and the frequency decreases as it falls (D) appears lower than 400 Hz and the frequency increases as it falls Let's write a program.",
    "output": "AlarmFrequency = 400\r\nSensitiveOscilloscope = 0\r\nif AlarmFrequency>SensitiveOscilloscope:\r\n print(\"Appears higher than 400 Hz and the frequency increases as it falls\")\r\nelif AlarmFrequency<SensitiveOscilloscope:\r\n print(\"Appears lower than 400 Hz and the frequency decreases as it falls\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "C",
    "raw_ans": "6283.185307179587",
    "question": "Heat is added to a cylindrical aluminum rod of radius Q and length \u2113. The temperature difference between the two ends of the rod varies from 10\u00b0C to 20\u00b0C. What geometric factors will influence the rate heat is transferred along the rod?\nAnswer Choices: (A) Only the length (B) Only the area of the rod (C) Both the length and area (D) Neither the length nor area Let's write a program.",
    "output": "import math\n\n# define the radius and length of the rod\nradius = 10\nlength = 20\n\n# calculate the area of the rod\narea = math.pi * radius**2\n\n# calculate the volume of the rod\nvolume = math.pi * radius**2 * length\n\n# print the geometric factors that will influence the rate heat is transferred along the rod\nprint(volume)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "gt": "B",
    "err": false,
    "question": "Optometrists use a linear scale of lens power, measured in diopters, to prescribe corrective lenses. Sufferers of myopia, or nearsightedness, have difficulty resolving distant objects because the lenses in their eyes are too strong. If a myopic person has a prescription of -5 diopters, what image do her corrective lenses create for distant objects?\nAnswer Choices: (A) An upright, real image about 20 cm in front of her eyes (B) An upright, virtual image about 20 cm in front of her eyes (C) An inverted, real image about 20 cm behind her eyes (D) An inverted, virtual image 5 cm behind her eyes Let's write a program.",
    "output": "lens_power_diopters = -5\nimage_distance_cm = 20\n\n# An upright, real image about 20 cm in front of her eyes\n# For a myopic person, the image is real and upright.\n# The image is 20 cm in front of the person's eyes.\n# The sign of the power is negative, because the lens is converging.\nif lens_power_diopters > 0:\n  print('A')\n\n# An upright, virtual image about 20 cm in front of her eyes\n# For a myopic person, the image is virtual and upright.\n# The image is 20 cm in front of the person's eyes.\n# The sign of the power is positive, because the lens is diverging.\nelif lens_power_diopters < 0:\n  print('B')\n\n# An inverted, real image about 20 cm behind her eyes\n# For a myopic person, the image is real and inverted.\n# The image is 20 cm behind the person's eyes.\n# The sign of the power is negative, because the lens is converging.\nelif lens_power_diopters == 0:\n  print('C')\n\n# An inverted, virtual image 5 cm behind her eyes\n# For a myopic person, the image is virtual and inverted.\n# The image is 5 cm behind the person's eyes.\n# The sign of the power is positive, because the lens is diverging.\nelse:\n  print('D')",
    "correct": true
  },
  {
    "ans": "D",
    "err": true,
    "gt": "C",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 14, in <module>\n  File \"<string>\", line 5, in run_it\nTypeError: 'AssumptionKeys' object is not callable\n",
    "question": "A nonconducting sphere is given a nonzero net electric charge, +Q, and then brought close to a neutral conducting sphere of the same radius. Which of the following will be true?\nAnswer Choices: (A) An electric field will be induced within the conducting sphere. (B) The conducting sphere will develop a net electric charge of \u2013Q. (C) The spheres will experience an electrostatic attraction. (D) The spheres will experience an electrostatic repulsion. Let's write a program.",
    "output": "from sympy import Q\r\n\r\n# Define the charge of the nonconducting sphere\r\nQ_nonconducting = Q('+Q')\r\n\r\n# The charge of the conducting sphere will be opposite to the charge of the nonconducting sphere\r\nQ_conducting = Q('-Q')\r\n\r\n# The spheres will experience an electrostatic attraction\r\nelectrostatic_attraction = Q_nonconducting + Q_conducting\r\n\r\nprint(electrostatic_attraction)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": true,
    "gt": "A",
    "raw_ans": "",
    "question": "A charged particle moves through a magnetic field and experiences a force f. New particles are sent into the same magnetic field. If the new particles have twice the charge, twice the mass, and twice the velocity, the new force would be\nAnswer Choices: (A) 4F (B) 2F (C) F (D) 1/2 F Let's write a program.",
    "output": "from sympy import symbols, Eq, solve\r\n\r\n# charge = linear density of charge, velocity = angular density of charge\r\nc, v = symbols('charge, velocity')\r\n\r\neq1 = Eq((c+2*c), 2*v)\r\n\r\nanswer = solve(eq1)\r\n\r\nif answer[0] == 2*v:\r\n   print('F')\r\n\r\nelif answer[0] == v:\r\n   print('2F')\r\n\r\nelif answer[0] == 4*v:\r\n   print('4F')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "D",
    "raw_ans": "1.5915494309189535e-06",
    "question": "An electric dipole consists of a pair of equal but opposite point charges of magnitude 4.0 nC separated by a distance of 2.0 cm. What is the electric field strength at the point midway between the charges?\nAnswer Choices: (A) 0 (B) 9.0 \u00d7 10^4 V/m (C) 1.8 \u00d7 10^5 V/m (D) 7.2 \u00d7 10^5 V/m Let's write a program.",
    "output": "import math\n\n# define the magnitude of the charges and the distance between them\nq = 4.0e-9\nd = 2.0e-2\n\n# calculate the electric field strength at the midpoint\nE = (q / (2 * math.pi * d**2))\n\nprint(E)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": true,
    "gt": "C",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 9, in run_it\nAttributeError: module 'sympy' has no attribute 'epsilon_0'\n",
    "question": "Two isolated particles, A and B, are 4 m apart. Particle A has a net charge of 2Q, and B has a net charge of Q. The ratio of the magnitude of the electric force on A to that on B is\nAnswer Choices: (A) 4:01 (B) 2:01 (C) 1:01 (D) 1:02 Let's write a program.",
    "output": "import sympy as sp\n\n# define the distance and charges\ndistance = 4\nQ = sp.symbols('Q')\n\n# calculate the force on A and B\nforce_on_A = sp.Rational(2, 1) * sp.Rational(1, 4 * sp.pi * sp.epsilon_0) * distance**2 * Q\nforce_on_B = sp.Rational(1, 1) * sp.Rational(1, 4 * sp.pi * sp.epsilon_0) * distance**2 * Q\n\n# calculate the ratio\nratio = force_on_A / force_on_B\n\n# print the ratio\nprint(ratio)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "gt": "D",
    "err": false,
    "question": "A rock drops onto a pond with a smooth surface. A few moments later, the wave produced by the rock\u2019s impact arrives at the shore, touching the ankles of a wading child. Which of the following observations provides evidence that the portion of the wave hitting the child\u2019s ankles carries less energy than the wave did when it was first created by the rock\u2019s impact?\nAnswer Choices: (A) The wave is moving more slowly. (B) The wave pulse\u2019s width has become greater. (C) The wave pulse\u2019s width has become smaller. (D) The wave\u2019s height has become smaller. Let's write a program.",
    "output": "import math\n\n# The energy of a wave is directly proportional to the square of its height\n# So, if the height of the wave is reduced, the energy will be reduced by the square of the reduction in height\n\n# Let's say the initial height of the wave was h and the reduced height is h/2\n# The energy of the wave was proportional to h^2, and now it is (h/2)^2 = h^2 / 4\n# So, the energy has been reduced by a factor of 1/4\n\n# The answer is A.",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "The acceleration of the balls varies with the velocity",
    "question": "Physics students are checking the constant acceleration equations of kinematics by measuring the velocity of a tennis ball that is dropped and falls 6 meters and then passes through a photogate. The predicted velocity is 20% above the velocity measured by the photogate. Which of the following best describes the cause of the large percent difference?\nAnswer Choices: (A) The ball changes its shape while falling. (B) The acceleration of gravity varies as the ball is falling. (C) Air resistance increases the acceleration of the ball. (D) The acceleration of the balls varies with the velocity. Let's write a program.",
    "output": "import math\n\n# define the variables\ndistance_travelled = 6 # in meters\n\n# calculate the velocity using the formula v^2 = 2*g*h\n# g is the acceleration due to gravity and h is the height travelled\ng = 9.81 # in meters per second\nh = distance_travelled\n\n# calculate the predicted velocity\nv_predicted = math.sqrt(2*g*h)\n\n# the actual velocity is 20% above the predicted velocity\nv_actual = v_predicted * 1.20\n\n# calculate the percent difference\npercent_difference = abs((v_actual - v_predicted) / v_actual) * 100\n\n# print the cause of the large percent difference\nif percent_difference > 20:\n    print(\"Air resistance increases the acceleration of the ball.\")\nelse:\n    print(\"The acceleration of the balls varies with the velocity.\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "C",
    "err": false,
    "gt": "D",
    "raw_ans": "0.2",
    "question": "Mercury orbits the sun in about one-fifth of an Earth year. If 1 AU is defined as the distance from the Earth to the sun, what is the approximate distance between Mercury and the sun?\nAnswer Choices: (A) (1/25) AU (B) (1/9) AU (C) (1/5) AU (D) (1/3) AU Let's write a program.",
    "output": "earth_to_sun_distance = 1 # in AU\nmercury_to_sun_distance = earth_to_sun_distance / 5\nprint(mercury_to_sun_distance)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "D",
    "raw_ans": "0.1020408163265306",
    "question": "The Gravitron is a carnival ride that looks like a large cylinder. People stand inside the cylinder against the wall as it begins to spin. Eventually, it is rotating fast enough that the floor can be removed without anyone falling. Given then the coefficient of friction between a person\u2019s clothing and the wall is \u03bc, the tangential speed is v, and the radius of the ride is R, what is greatest mass that a person can be to safely go on this ride?\nAnswer Choices: (A) \u03bcv^2/(rg) (B) r^2v^2/(\u03bcg) (C) rg/(\u03bcv^2) (D) None of the above. Let's write a program.",
    "output": "import math\n\n# define the variables\nmu, v, r, g = 1, 1, 1, 9.8\n\n# calculate the greatest mass\ngreatest_mass = mu * v**2 / (r * g)\n\n# print the result\nprint(greatest_mass)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "gt": "B",
    "err": false,
    "question": "An artificial satellite orbits Earth just above the atmosphere in a circle with constant speed. A small meteor collides with the satellite at point P in its orbit, increasing its speed by 1%, but not changing the instantaneous direction of the satellite\u2019s velocity. Which of the following describes the satellite\u2019s new orbit?\nAnswer Choices: (A) The satellite now orbits in an ellipse, with P as the farthest approach to Earth. (B) The satellite now orbits in an ellipse, with P as the closest approach to Earth. (C) The satellite now orbits in a circle of larger radius. (D) The satellite now orbits in a circle of smaller radius. Let's write a program.",
    "output": "import math\n\n# The radius of the circle is the distance from the center to the point P\n# Since the speed of the satellite increased by 1%, the distance from the center to P is larger by 1%\n# Therefore, the new radius is 1.01 times the original radius\n\n# The area of a circle is pi * r^2\n# Since the area is proportional to r^2, the new area is (1.01)^2 = 1.0201 times the old area\n\n# The orbital period is the area divided by the speed\n# Since the area is 1.0201 times the old area, and the speed is the same, the new period is 1.0201 times the old period\n\n# The answer is B.",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "B",
    "raw_ans": "an average of 10 times, with an rms deviation of about 3.1622776601683795",
    "question": "The quantum efficiency of a photon detector is 0.1. If 100 photons are sent into the detector, one after the other, the detector will detect photons\nAnswer Choices: (A) an average of 10 times, with an rms deviation of about 4 (B) an average of 10 times, with an rms deviation of about 3 (C) an average of 10 times, with an rms deviation of about 1 (D) an average of 10 times, with an rms deviation of about 0.1 Let's write a program.",
    "output": "import math\n\n# define the variables\nefficiency = 0.1\nphotons = 100\n\n# calculate the number of photons detected\ndetected_photons = photons * efficiency\n\n# calculate the average number of times the detector detects a photon\naverage = math.floor(detected_photons)\n\n# calculate the rms deviation\ndeviation = math.sqrt(detected_photons)\n\n# print the result\nprint(f'an average of {average} times, with an rms deviation of about {deviation}')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "err": false,
    "gt": "C",
    "raw_ans": "500",
    "question": "White light is normally incident on a puddle of water (index of refraction 1.33). A thin (500 nm) layer of oil (index of refraction 1.5) floats on the surface of the puddle. Of the following, the most strongly reflected wavelength is\nAnswer Choices: (A) 500 nm (B) 550 nm (C) 600 nm (D) 650 nm Let's write a program.",
    "output": "index_of_refraction_water = 1.33\r\nindex_of_refraction_oil = 1.5\r\n\r\n# The reflectance of a surface is given by the equation:\r\n# R = [(n2-n1)^2 / (n2+n1)^2]\r\n# where n1 is the index of refraction of the medium from which the light is incident and n2 is the index of refraction of the medium in which the light is reflected.\r\n\r\n# Therefore, the most strongly reflected wavelength will be the one for which the value of R is the highest.\r\n\r\n# For water-oil interface, the highest value of R will be when n1 is the index of refraction of water and n2 is the index of refraction of oil.\r\n\r\nindex_refraction_incident = index_of_refraction_water\r\nindex_refraction_reflected = index_of_refraction_oil\r\n\r\n# For 500 nm light\r\nR_500nm = [(index_of_refraction_oil - index_of_refraction_water)**2 / (index_of_refraction_oil + index_of_refraction_water)**2]\r\n\r\n# For 550 nm light\r\nR_550nm = [(index_of_refraction_oil - 1.3)**2 / (index_of_refraction_oil + 1.3)**2]\r\n\r\n# For 600 nm light\r\nR_600nm = [(index_of_refraction_oil - 1.4)**2 / (index_of_refraction_oil + 1.4)**2]\r\n\r\n# For 650 nm light\r\nR_650nm = [(index_of_refraction_oil - 1.5)**2 / (index_of_refraction_oil + 1.5)**2]\r\n\r\n# Therefore, the most strongly reflected wavelength is 500 nm\r\nmost_strongly_reflected_wavelength = 500\r\n\r\nprint(most_strongly_reflected_wavelength)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "C",
    "raw_ans": "The entropy of the system and its environment remains unchanged",
    "question": "Which of the following is true about any system that undergoes a reversible thermodynamic process?\nAnswer Choices: (A) There are no changes in the internal energy of the system. (B) The temperature of the system remains constant during the process. (C) The entropy of the system and its environment remains unchanged. (D) The entropy of the system and its environment must increase. Let's write a program.",
    "output": "def reversible_thermodynamic_process():\n    return 'The entropy of the system and its environment remains unchanged.'\n\nprint(reversible_thermodynamic_process())",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "D",
    "err": false,
    "gt": "A",
    "raw_ans": "ruby",
    "question": "The best type of laser with which to do spectroscopy over a range of visible wavelengths is\nAnswer Choices: (A) a dye laser (B) a helium-neon laser (C) an excimer laser (D) a ruby laser Let's write a program.",
    "output": "laser_type = ['dye', 'helium-neon', 'excimer', 'ruby']\r\nlaser_type_number = 3\r\nprint(laser_type[laser_type_number])",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "gt": "B",
    "err": false,
    "question": "Excited states of the helium atom can be characterized as para- (antiparallel electron spins) and ortho- (parallel electron spins). The observation that an ortho- state has lower energy than the corresponding para- state can be understood in terms of which of the following?\nAnswer Choices: (A) The Heisenberg uncertainty principle (B) The Pauli exclusion principle (C) The Bohr model of the atom (D) Nuclear hyperfine coupling Let's write a program.",
    "output": "Let's think about the multi-choice question.\nThe observation that an ortho- state has lower energy than the corresponding para- state can be understood in terms of which of the following?\nThe Pauli exclusion principle.\nThe energy of an electron in an atom depends on the spin and orbital angular momentum of the electron. In the para-state, the spins of the two electrons are antiparallel, so the total spin is 0. In the ortho-state, the spins are parallel, so the total spin is 1. Since the Pauli exclusion principle states that no two electrons in an atom can have the same set of quantum numbers, the total spin in the para-state is higher than the total spin in the ortho-state.\nThe answer is B",
    "correct": true
  },
  {
    "ans": "D",
    "err": false,
    "gt": "C",
    "raw_ans": "1.5",
    "question": "Which of the following gives the total spin quantum number of the electrons in the ground state of neutral nitrogen (Z = 7)?\nAnswer Choices: (A) 1/2 (B) 1 (C) 3/2 (D) 5/2 Let's write a program.",
    "output": "total_spin_Nitrogen = 7\ntotal_spin_Nitrogen_ground_state = 3/2\nprint(total_spin_Nitrogen_ground_state)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "D",
    "raw_ans": "V0",
    "question": "Consider three identical, ideal capacitors. The first capacitor is charged to a voltage and then disconnected from the battery. The other two capacitors, initially uncharged and connected in series, are then connected across the first capacitor. What is the final voltage on the first capacitor?\nAnswer Choices: (A) V_0/5 (B) V_0/3 (C) V_0/2 (D) 2V_0/3 Let's write a program.",
    "output": "from sympy import symbols, solve\n\n# define the variables\nV0 = symbols('V0')\n\n# the total voltage across the first capacitor is the sum of the voltages across the other two capacitors\n# since they are in series, the voltage across each of them is V0/2\n# so, the total voltage is 2*V0/2 = V0\n\nfinal_voltage = V0\n\nprint(final_voltage)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 6:13: v_final = 0.6c # final speed of proton in m/s\n",
    "question": "Protons used in cancer therapy are typically accelerated to about 0.6c. How much work must be done on a particle of mass m in order for it to reach this speed, assuming it starts at rest?\nAnswer Choices: (A) 0.25mc^2 (B) 0.60mc^2 (C) 0.67mc^2 (D) 1.25mc^2 Let's write a program.",
    "output": "import math\n\n# define the variables\nc = 3e8 # speed of light in m/s\nm = 1.67e-27 # mass of proton in kg\nv_final = 0.6c # final speed of proton in m/s\n\n# calculate the work using the formula W = 0.5*m*v^2\nW = 0.5*m*(v_final**2)\n\nprint(W)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 4, in <module>\n  File \"<string>\", line 2, in run_it\nNameError: name 'plancks_constant' is not defined\n",
    "question": "De Broglie hypothesized that the linear momentum and wavelength of a free massive particle are related by which of the following constants?\nAnswer Choices: (A) Planck\u2019s constant (B) Boltzmann\u2019s constant (C) The Rydberg constant (D) The speed of light Let's write a program.",
    "output": "de_broglie_hypothesized=plancks_constant\r\nprint(de_broglie_hypothesized)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 7, in <module>\n  File \"<string>\", line 5, in run_it\nNameError: name 'sqrt' is not defined\n",
    "question": "If the total energy of a particle of mass m is equal to twice its rest energy, then the magnitude of the particle\u2019s relativistic momentum is\nAnswer Choices: (A) mc/2 (B) mc/(2^(1/2)) (C) mc (D) (3^(1/2))mc Let's write a program.",
    "output": "m = 1 # rest mass\nc = 1 # speed of light\nE = 2 * m * c^2 # total energy\np = sqrt(2*E/c) # relativistic momentum\nprint(p)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "gt": "D",
    "err": false,
    "question": "In the diamond structure of elemental carbon, the nearest neighbors of each C atom lie at the corners of a\nAnswer Choices: (A) square (B) hexagon (C) cube (D) tetrahedron Let's write a program.",
    "output": "Diamond structure is a covalent bonding of tetrahedrons. Each carbon atom in the diamond is located at the center of a tetrahedron, which is a three-dimensional solid whose four vertices are mutually adjacent.\nThe answer is D",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "0.08602969896859208",
    "question": "The coefficient of static friction between a small coin and the surface of a turntable is 0.30. The turntable rotates at 33.3 revolutions per minute. What is the maximum distance from the center of the turntable at which the coin will not slide?\nAnswer Choices: (A) 0.024 m (B) 0.048 m (C) 0.121 m (D) 0.242 m Let's write a program.",
    "output": "import math\n\n# define the coefficient of static friction\nmu = 0.30\n\n# define the rotational speed of the turntable\nomega = 33.3 * 2 * math.pi / 60\n\n# calculate the maximum distance from the center of the turntable at which the coin will not slide\nr_max = mu / omega\n\nprint(r_max)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "gt": "D",
    "err": false,
    "question": "The sign of the charge carriers in a doped semiconductor can be deduced by measuring which of the following properties?\nAnswer Choices: (A) Specific heat (B) Thermal conductivity (C) Electrical resistivity (D) Hall coefficient Let's write a program.",
    "output": "heat_conduction = 1\r\nelectrical_resistivity = 1\r\nhall_coefficient = 1\r\nspecific_heat = 1\r\n\r\nif heat_conduction is None or electrical_resistivity is None or hall_coefficient is None or specific_heat is None:\r\n    print(\"B\")\r\nelif heat_conduction == 1 and electrical_resistivity == 1 and hall_coefficient == 1 and specific_heat == 1:\r\n    print(\"D\")\r\nelif heat_conduction == 1 and electrical_resistivity == 1 and hall_coefficient == 1 and specific_heat is None:\r\n    print(\"A\")\r\nelif heat_conduction == 1 and electrical_resistivity == 1 and hall_coefficient is None and specific_heat == 1:\r\n    print(\"C\")\r\nelif heat_conduction == 1 and electrical_resistivity is None and hall_coefficient == 1 and specific_heat == 1:\r\n    print(\"D\")\r\nelif heat_conduction == 1 and electrical_resistivity is None and hall_coefficient == 1 and specific_heat is None:\r\n    print(\"A\")\r\nelif heat_conduction == 1 and electrical_resistivity is None and hall_coefficient is None and specific_heat == 1:\r\n    print(\"C\")\r\nelif heat_conduction is None and electrical_resistivity == 1 and hall_coefficient == 1 and specific_heat == 1:\r\n    print(\"B\")\r\nelif heat_conduction is None and electrical_resistivity == 1 and hall_coefficient == 1 and specific_heat is None:\r\n    print(\"A\")\r\nelif heat_conduction is None and electrical_resistivity == 1 and hall_coefficient is None and specific_heat == 1:\r\n    print(\"C\")\r\nelif heat_conduction is None and electrical_resistivity == 1 and hall_coefficient is None and specific_heat is None:\r\n    print(\"A\")\r\nelif heat_conduction is None and electrical_resistivity is None and hall_coefficient == 1 and specific_heat == 1:\r\n    print(\"B\")\r\nelif heat_conduction is None and electrical_resistivity is None and hall_coefficient == 1 and specific_heat is None:\r\n    print(\"A\")\r\nelif heat_conduction is None and electrical_resistivity is None and hall_coefficient is None and specific_heat == 1:\r\n    print(\"C\")\r\nelse:\r\n    print(\"A\")",
    "correct": true
  },
  {
    "ans": "B",
    "err": true,
    "gt": "B",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 12, in <module>\n  File \"<string>\", line 6, in run_it\nNameError: name 'answer' is not defined\n",
    "question": "The primary source of the Sun\u2019s energy is a series of thermonuclear reactions in which the energy produced is c^2 times the mass difference between\nAnswer Choices: (A) two hydrogen atoms and one helium atom (B) four hydrogen atoms and one helium atom (C) six hydrogen atoms and two helium atoms (D) three helium atoms and one carbon atom Let's write a program.",
    "output": "hydrogen = 1\nhelium = 2\ncarbon = 3\n\nif answer == hydrogen:\n  print(\"two hydrogen atoms and one helium atom\")\nelif answer == helium:\n  print(\"four hydrogen atoms and one helium atom\")\nelif answer == carbon:\n  print(\"three helium atoms and one carbon atom\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "A",
    "raw_ans": "False",
    "question": "Electromagnetic radiation provides a means to probe aspects of the physical universe. Which of the following statements regarding radiation spectra is NOT correct?\nAnswer Choices: (A) Lines in the infrared, visible, and ultraviolet regions of the spectrum reveal primarily the nuclear structure of the sample. (B) The wavelengths identified in an absorption spectrum of an element are among those in its emission spectrum. (C) Absorption spectra can be used to determine which elements are present in distant stars. (D) Spectral analysis can be used to identify the composition of galactic dust. Let's write a program.",
    "output": "sample_statement = \"Electromagnetic radiation provides a means to probe aspects of the physical universe.\"\n\ncorrect_part = \"Lines in the infrared, visible, and ultraviolet regions of the spectrum reveal primarily the nuclear structure of the sample.\"\n\nif correct_part in sample_statement:\n  print(\"True\")\nelse:\n  print(\"False\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "gt": "D",
    "err": false,
    "question": "Which of the following statements about bosons and/or fermions is true?\nAnswer Choices: (A) Bosons have symmetric wave functions and obey the Pauli exclusion principle. (B) Bosons have antisymmetric wave functions and do not obey the Pauli exclusion principle. (C) Fermions have symmetric wave functions and obey the Pauli exclusion principle. (D) Fermions have antisymmetric wave functions and obey the Pauli exclusion principle. Let's write a program.",
    "output": "Bosons = 0\nBosons = 1\nFermions = 2\nFermions = 3\nThe answer is D",
    "correct": true
  },
  {
    "ans": "B",
    "gt": "B",
    "err": false,
    "question": "Excited states of the helium atom can be characterized as para- (antiparallel electron spins) and ortho- (parallel electron spins). The observation that an ortho- state has lower energy than the corresponding para- state can be understood in terms of which of the following?\nAnswer Choices: (A) The Heisenberg uncertainty principle (B) The Pauli exclusion principle (C) The Bohr model of the atom (D) Nuclear hyperfine coupling Let's write a program.",
    "output": "Let's think about the multi-choice question.\nThe observation that an ortho- state has lower energy than the corresponding para- state can be understood in terms of which of the following?\nThe Pauli exclusion principle.\nThe energy of an electron in an atom depends on the spin and orbital angular momentum of the electron. In the para-state, the spins of the two electrons are antiparallel, so the total spin is 0. In the ortho-state, the spins are parallel, so the total spin is 1. Since the Pauli exclusion principle states that no two electrons in an atom can have the same set of quantum numbers, the total spin in the para-state is higher than the total spin in the ortho-state.\nThe answer is B",
    "correct": true
  },
  {
    "ans": "A",
    "err": false,
    "gt": "A",
    "raw_ans": "0.000375",
    "question": "One end of a horizontal, massless spring is attached to a wall. A mass of 0.30 kg is attached to the other end of the spring and rests on a table. The mass is displaced 0.030 m from its equilibrium position and released. It has a speed of 0.040 m/s as it passes through its equilibrium position. In the absence of friction, what is the total mechanical energy of the system?\nAnswer Choices: (A) 0.24 mJ (B) 0.38 mJ (C) 0.48 mJ (D) 0.75 mJ Let's write a program.",
    "output": "import math\n\n# define the variables\nm = 0.30  # mass in kg\nx = 0.030  # displacement in m\nv = 0.040  # velocity in m/s\n\n# calculate the potential energy\nU = 0.5 * m * v**2\n\n# calculate the kinetic energy\nK = 0.5 * m * x**2\n\n# calculate the total mechanical energy\nE = U + K\n\n# print the result\nprint(E)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "err": false,
    "gt": "B",
    "raw_ans": "800000000.0",
    "question": "A meter stick with a speed of 0.8c moves past an observer. In the observer\u2019s reference frame, how long does it take the stick to pass the observer ?\nAnswer Choices: (A) 1.6 ns (B) 2.5 ns (C) 4.2 ns (D) 6.9 ns Let's write a program.",
    "output": "import math\n\n# define the speed of the meter stick in the observer's reference frame\nspeed = 0.8 * 3e8 # m/s\n\n# calculate the time it takes for the stick to pass the observer\ntime = speed / 3e8 # s\n\n# convert the time to nanoseconds\ntime_ns = time * 1e9 # ns\n\nprint(time_ns)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 6:13: v_final = 0.6c # final speed of proton in m/s\n",
    "question": "Protons used in cancer therapy are typically accelerated to about 0.6c . How much work must be done on a particle of mass m in order for it to reach this speed, assuming it starts at rest?\nAnswer Choices: (A) 0.25mc^2 (B) 0.60mc^2 (C) 0.67mc^2 (D) 1.25mc^2 Let's write a program.",
    "output": "import math\n\n# define the variables\nc = 3e8 # speed of light in m/s\nm = 1.67e-27 # mass of proton in kg\nv_final = 0.6c # final speed of proton in m/s\n\n# calculate the work using the formula W = 0.5*m*v^2\nW = 0.5*m*(v_final**2)\n\nprint(W)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "gt": "C",
    "err": false,
    "question": "Characteristic X rays, appearing as sharp lines on a continuous background, are produced when high-energy electrons bombard a metal target. Which of the following processes results in the characteristic X rays?\nAnswer Choices: (A) Electrons producing \u010cerenkov radiation (B) Electrons colliding with phonons in the metal (C) Electrons filling inner shell vacancies that are created in the metal atoms (D) Electrons combining with protons to form neutrons Let's write a program.",
    "output": "processes_result_in_characteristic_X_rays=None\nelectrons_producing_Cerenkov_radiation=None\nelectrons_colliding_with_phonons_in_metal=None\nelectrons_filling_inner_shell_vacancies=None\nelectrons_combining_with_protons_to_form_neutrons=None\nanswer=D",
    "correct": false
  },
  {
    "ans": "C",
    "gt": "D",
    "err": false,
    "question": "An atom has filled n = 1 and n = 2 levels. How many electrons does the atom have?\nAnswer Choices: (A) 2 (B) 4 (C) 6 (D) 10 Let's write a program.",
    "output": "Atom has 1 and 2 levels, so it has 1 + 2 = 3 levels\nSince each level has 2 electrons, so number of electrons in 3 levels = 3 * 2 = 6\nThe answer is C",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "B",
    "raw_ans": "2",
    "question": "Light from a laser falls on a pair of very narrow slits separated by 0.5 micrometer, and bright fringes separated by 1.0 millimeter are observed on a distant screen. If the frequency of the laser light is doubled, what will be the separation of the bright fringes?\nAnswer Choices: (A) 0.25 mm (B) 0.5 mm (C) 1.0 mm (D) 2.0 mm Let's write a program.",
    "output": "slit_seperation=0.5\r\nfringe_seperation=1\r\nlaser_frequency=2\r\nnew_fringe_seperation=laser_frequency*fringe_seperation\r\nprint(new_fringe_seperation)\r\n",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "3000",
    "question": "Assume that the solar flux at Earth\u2019s surface is 1,000 W/m^2 and that the sunlight is normal to a completely reflecting surface with an area of 3 m^2. What is the total radiation force exerted on the surface?\nAnswer Choices: (A) 2 x 10^-6 N (B) 1 x 10^-5 N (C) 2 x 10^-5 N (D) 3 N Let's write a program.",
    "output": "solar_flux = 1000  # W/m^2\narea = 3  # m^2\n\n# The total radiation force exerted on the surface is the product of solar flux, area and the cosine of 90 degrees (since the sunlight is normal to the surface).\ntotal_force = solar_flux * area * 1\n\nprint(total_force)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "gt": "B",
    "err": false,
    "question": "The sign of the charge carriers in a doped semiconductor can be deduced by measuring which of the following properties?\nAnswer Choices: (A) Magnetic susceptibility (B) Hall coefficient (C) Electrical resistivity (D) Thermal conductivity Let's write a program.",
    "output": "B\nHall coefficient\nThe Hall coefficient is defined as the ratio of the induced electric field to the external magnetic field. The sign of the Hall coefficient is positive for holes and negative for electrons. Thus, by measuring the Hall coefficient, one can determine the nature of the charge carriers.\nThe answer is B",
    "correct": true
  },
  {
    "ans": "D",
    "gt": "D",
    "err": false,
    "question": "Which of the following ions CANNOT be used as a dopant in germanium to make an n-type semiconductor?\nAnswer Choices: (A) As (B) P (C) Sb (D) B Let's write a program.",
    "output": "Ions that increase the number of free electrons in a semiconductor are called donors. Germanium has 4 valence electrons. If a dopant donates one electron, it becomes a donor. If it donates 2 electrons, it becomes a 2-fold donor. If it donates 3 electrons, it becomes a 3-fold donor, and so on. The number of free electrons in a semiconductor is directly proportional to the number of donors. If you add As, you get an n-type semiconductor. If you add B, you get a p-type semiconductor. Hence, B cannot be used as a donor. The answer is D.",
    "correct": true
  },
  {
    "ans": "A",
    "gt": "A",
    "err": false,
    "question": "An astronomer observes a very small moon orbiting a planet and measures the moon\u2019s minimum and maximum distances from the planet\u2019s center and the moon\u2019s maximum orbital speed. Which of the following CANNOT be calculated from these measurements?\nAnswer Choices: (A) Mass of the moon (B) Mass of the planet (C) Minimum speed of the moon (D) Period of the orbit Let's write a program.",
    "output": "Let's assume the following variables:\n\u2022 d1: minimum distance from the planet's center\n\u2022 d2: maximum distance from the planet's center\n\u2022 v: maximum orbital speed\nFrom these variables, we can calculate the period (P) using the formula:\nP = 2*pi*sqrt(d1**2 + d2**2)/v\nWe can also calculate the mass of the planet (m1) using the formula:\nm1 = (4/3)*pi*d1**3/P**2\nThe mass of the moon (m2) cannot be calculated from the given information.\nThe answer is A.",
    "correct": true
  },
  {
    "ans": "C",
    "err": false,
    "gt": "B",
    "raw_ans": "0.7499999999999998",
    "question": "A rod measures 1.00 m in its rest system. How fast must an observer move parallel to the rod to measure its length to be 0.80 m?\nAnswer Choices: (A) 0.50c (B) 0.60c (C) 0.70c (D) 0.80c Let's write a program.",
    "output": "import math\n\n# define the length of the rod in its rest system\nlength_rod_rest = 1.00\n\n# define the length of the rod measured by the observer\nlength_rod_observer = 0.80\n\n# calculate the length of the rod parallel to its rest system as measured by the observer\nlength_parallel = length_rod_rest * math.sqrt(1 - length_rod_observer**2 / length_rod_rest**2)\n\n# calculate the speed of the observer relative to the rod\nspeed_observer = length_parallel / length_rod_observer\n\n# print the result\nprint(speed_observer)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "B",
    "raw_ans": "",
    "question": "A proton moves in the +z-direction after being accelerated from rest through a potential difference V. The proton then passes through a region with a uniform electric field E in the +x-direction and a uniform magnetic field B in the +y-direction, but the proton\u2019s trajectory is not affected. If the experiment were repeated using a potential difference of 2V, the proton would then be\nAnswer Choices: (A) deflected in the +x-direction (B) deflected in the -x-direction (C) deflected in the +y-direction (D) deflected in the -y-direction Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nV = sp.symbols('V')\n\n# define the electric field and magnetic field\nE = sp.symbols('E')\nB = sp.symbols('B')\n\n# define the direction of the proton after being accelerated\ndirection_accelerated = '+'\n\n# if the experiment were repeated using a potential difference of 2V, the proton would then be deflected in the +x-direction\nif V == 2*sp.symbols('V'):\n    print('+x')\n\n# if the experiment were repeated using a potential difference of 2V, the proton would then be deflected in the -x-direction\nelif V == 2*sp.symbols('V'):\n    print('-x')\n\n# if the experiment were repeated using a potential difference of 2V, the proton would then be deflected in the +y-direction\nelif V == 2*sp.symbols('V'):\n    print('+y')\n\n# if the experiment were repeated using a potential difference of 2V, the proton would then be deflected in the -y-direction\nelif V == 2*sp.symbols('V'):\n    print('-y')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "10.0",
    "question": "A magnetic field is directed perpendicular to the plane of a circular coil of area 0.2 m^2 and 250 turns. If the magnetic field is increased from 0.01 T to 0.06 T during a time interval of 0.25 s, the average induced EMF in the coil is\nAnswer Choices: (A) 0.04 V (B) 0.1 V (C) 2.5 V (D) 10 V Let's write a program.",
    "output": "area = 0.2\r\nturns = 250\r\nchange_in_field = 0.06 - 0.01\r\ntime = 0.25\r\n\r\naverage_induced_emf = (change_in_field * area * turns) / time\r\n\r\nprint(average_induced_emf)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "1",
    "question": "Light of variable frequency shines on the metal surface of a photoelectric tube. Einstein\u2019s theory of the photoelectric effect predicts that the\nAnswer Choices: (A) work function of the metal is proportional to the frequency (B) work function of the metal is proportional to the wavelength (C) current in the tube is a linear function of the wavelength (D) potential difference necessary to stop the emitted electrons is a linear function of the frequency above the threshold frequency Let's write a program.",
    "output": "variable_frequency = 1\nwavelength = variable_frequency\ncurrent = wavelength\npotential_difference = current\n\nprint(current)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "The orbits will remain unchanged",
    "question": "If the Sun were suddenly replaced by a black hole of the same mass, it would have a Schwarzschild radius of 3,000 m. What effect, if any, would this change have on the orbits of the planets?\nAnswer Choices: (A) The planets would move directly toward the Sun. (B) The planets would move in spiral orbits. (C) The planets would oscillate about their former elliptical orbits. (D) The orbits would remain unchanged. Let's write a program.",
    "output": "import math\n\n# define the mass of the sun and the radius of the black hole\nM_sun = 1.989e30\nR_hole = 3000\n\n# calculate the distance from the sun to the black hole\nd_sun_hole = math.sqrt(R_hole**2 + M_sun**2/R_hole**2)\n\n# calculate the change in the distance from the sun to the planets\ndelta_d = d_sun_hole - M_sun\n\n# if the change is positive, the orbits will change\n# if the change is negative, the orbits will remain unchanged\nif delta_d > 0:\n    print('The orbits will change.')\nelif delta_d < 0:\n    print('The orbits will remain unchanged.')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "gt": "B",
    "err": false,
    "question": "At 20\u00b0C, a pipe open at both ends resonates at a frequency of 440 hertz. At what frequency does the same pipe resonate on a particularly cold day when the speed of sound is 3 percent lower than it would be at 20\u00b0C ?\nAnswer Choices: (A) 414 Hz (B) 427 Hz (C) 433 Hz (D) 440 Hz Let's write a program.",
    "output": "Let's use the formula of speed of sound in a medium,\nSpeed of sound = \u221a(Bulk Modulus of Medium * Specific heat of Medium)\nWe know that the speed of sound in air is 340 m/s at 20\u00b0C.\nIf we decrease the temperature, the speed of sound decreases.\nLet's define the specific heat of air (Cp) = 1005 J/kg.K\nLet's define the bulk modulus of air (B) = 100x10^9 Pa\nLet's calculate the speed of sound in air at 0\u00b0C,\nSpeed of sound = \u221a(Bulk Modulus of Medium * Specific heat of Medium)\n= \u221a(100x10^9 * 1005)\n= \u221a(10102500)\n= 10050 m/s\nFrom this, we can calculate the decrease in speed of sound due to the decrease in temperature,\n= 340 - 10050\n= -9650\nWe know that the frequency of the pipe is inversely proportional to the speed of sound.\nSo, when the speed of sound decreases, the frequency increases.\nLet's calculate the new frequency,\n= 440 * (-9650) / -10050\n= 414 Hz\nThe answer is A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "10.0 0.9055385138137417",
    "question": "The quantum efficiency of a photon detector is 0.1. If 100 photons are sent into the detector, one after the other, the detector will detect photons\nAnswer Choices: (A) exactly 10 times (B) an average of 10 times, with an rms deviation of about 0.1 (C) an average of 10 times, with an rms deviation of about 1 (D) an average of 10 times, with an rms deviation of about 3 Let's write a program.",
    "output": "import math\n\n# define the variables\nefficiency = 0.1\nphotons = 100\n\n# calculate the number of photons detected\ndetected_photons = photons * efficiency\n\n# calculate the average number of times the detector will detect a photon\naverage_detections = photons / 10\n\n# calculate the rms deviation\nrms_deviation = math.sqrt((10 * (efficiency ** 2) + 10 * ((1 - efficiency) ** 2)) / 10)\n\n# print the result\nprint(average_detections, rms_deviation)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 5, in <module>\n  File \"<string>\", line 2, in run_it\nNameError: name 'T' is not defined\n",
    "question": "A three-dimensional harmonic oscillator is in thermal equilibrium with a temperature reservoir at temperature T. The average total energy of the oscillator is\nAnswer Choices: (A) (1/2) k T (B) kT (C) (3/2) k T (D) 3kT Let's write a program.",
    "output": "kT = 1.38e-23 * T\ntotal_energy = 3 * kT\nprint(total_energy)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "2.581988897471611",
    "question": "A student makes 10 one-second measurements of the disintegration of a sample of a long-lived radioactive isotope and obtains the following values: 3, 0, 2, 1, 2, 4, 0, 1, 2, 5. How long should the student count to establish the rate to an uncertainty of 1 percent?\nAnswer Choices: (A) 80 s (B) 160 s (C) 2,000 s (D) 5,000 s Let's write a program.",
    "output": "import math\n\n# Define the data\ndata = [3, 0, 2, 1, 2, 4, 0, 1, 2, 5]\n\n# Calculate the mean\nmean = sum(data) / len(data)\n\n# Calculate the standard deviation\nstd = math.sqrt(sum([(x - mean)**2 for x in data]) / len(data))\n\n# Calculate the number of counts\ncounts = mean * 100\n\n# Calculate the uncertainty\nuncertainty = std / mean * 100\n\n# Calculate the time\ntime = counts / uncertainty\n\nprint(time)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "gt": "D",
    "err": false,
    "question": "By definition, the electric displacement current through a surface S is proportional to the\nAnswer Choices: (A) magnetic flux through S (B) rate of change of the magnetic flux through S (C) time integral of the magnetic flux through S (D) rate of change of the electric flux through S Let's write a program.",
    "output": "Let's take the time derivative of the electric displacement current through a surface S.\nBy definition, the electric displacement current through a surface S is proportional to the rate of change of the electric flux through S.\nThe answer is D",
    "correct": true
  },
  {
    "ans": "C",
    "err": true,
    "gt": "A",
    "raw_ans": "",
    "question": "The negative muon, mu^-, has properties most similar to which of the following?\nAnswer Choices: (A) Electron (B) Meson (C) Photon (D) Boson Let's write a program.",
    "output": "muon = {'negative', 'mu', '-'}\nelectron = {'electron', 'e', 'negative'}\nmeson = {'meson', 'pi', 'rho', 'omega'}\nphoton = {'photon', 'gamma'}\nboson = {'boson', 'higgs', 'w', 'z'}\n\nif muon == electron:\n    print('A')\nelif muon == meson:\n    print('B')\nelif muon == photon:\n    print('C')\nelif muon == boson:\n    print('D')",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "C",
    "raw_ans": "1.5*10^8",
    "question": "The speed of light inside of a nonmagnetic dielectric material with a dielectric constant of 4.0 is\nAnswer Choices: (A) 1.2 x 10^9 m/s (B) 3.0 x 10^8 m/s (C) 1.5 x 10^8 m/s (D) 1.0 x 10^8 m/s Let's write a program.",
    "output": "c = 300\r\ndielectric = 4\r\nspeed = '1.5*10^8'\r\nprint(speed)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "4",
    "question": "The energy from electromagnetic waves in equilibrium in a cavity is used to melt ice. If the Kelvin temperature of the cavity is increased by a factor of two, the mass of ice that can be melted in a fixed amount of time is increased by a factor of\nAnswer Choices: (A) 2 (B) 4 (C) 8 (D) 16 Let's write a program.",
    "output": "cavity_temperature = 2\r\nice_melted = cavity_temperature * 2\r\nprint(ice_melted)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "gt": "D",
    "err": false,
    "question": "A resistor in a circuit dissipates energy at a rate of 1 W. If the voltage across the resistor is doubled, what will be the new rate of energy dissipation?\nAnswer Choices: (A) 0.25 W (B) 0.5 W (C) 1 W (D) 4 W Let's write a program.",
    "output": "Rate of energy dissipation = 1 W\nAs the voltage is doubled, the rate of energy dissipation becomes 1*1 = 1 W\nThe answer is C",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "B",
    "raw_ans": "0.03163555836760512",
    "question": "A gas cell with an optical path length of 10 cm is placed in one arm of a Michelson interferometer. If the light source for the interferometer is a laser with wavelength 632.2 nm, then 100 fringes are counted as the gas cell is evacuated. What is the index of refraction of the original gas?\nAnswer Choices: (A) 1.00063 (B) 1.00032 (C) 1.00016 (D) 0.99968 Let's write a program.",
    "output": "lamda = 632.2 # wavelength of laser in nm\npath_length = 10 # path length in cm\nfringes = 100 # number of fringes\n\n# For a Michelson interferometer, the index of refraction of the gas can be given by\n# n = (2*path_length*fringes)/(lamda*100)\n\nn = (2*path_length*fringes)/(lamda*100)\n\n# The index of refraction of the original gas is 1 plus the difference in the index of refraction of the gas and 1\nindex_original_gas = 1 + n - 1\n\nprint(index_original_gas)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "7.895683520871487e-19",
    "question": "Under certain conditions, a beam of electrons impinging on a crystal surface will diffract and a scattering pattern of the beam can be obtained. What is the approximate kinetic energy of the electrons needed in order to see the pattern? (Assume the lattice spacing of the crystal to be 0.4 nm.)\nAnswer Choices: (A) 0.1 eV (B) 1 eV (C) 10 eV (D) 100 eV Let's write a program.",
    "output": "import math\n\n# define the lattice spacing\na = 0.4  # nm\n\n# convert the lattice spacing to meters\na_m = a * 10**-9  # m\n\n# the minimum kinetic energy needed for the electrons to diffract\nE_min = (math.pi * a_m)**2 / 2  # eV\n\nprint(E_min)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "B",
    "raw_ans": "0.6666666666666666",
    "question": "A uniform solid disk starts from rest and rolls down an inclined plane without slipping. After some time, what fraction of the disk\u2019s total kinetic energy is rotational kinetic energy?\nAnswer Choices: (A) 1/4 (B) 1/3 (C) 1/2 (D) 2/3 Let's write a program.",
    "output": "import math\n\n# The total kinetic energy of a rolling disk is the sum of its translational kinetic energy and rotational kinetic energy.\n# The fraction of the disk\u2019s total kinetic energy that is rotational kinetic energy is 2/3.\n\nfraction_rotational_kinetic_energy = 2/3\n\nprint(fraction_rotational_kinetic_energy)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "B",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 16, in <module>\n  File \"<string>\", line 12, in run_it\nValueError: math domain error\n",
    "question": "Blue light of wavelength 480 nanometers is most strongly reflected off a thin film of oil on a glass slide when viewed near normal incidence. Assuming that the index of refraction of the oil is 1.2 and that of the glass is 1.6, what is the minimum thickness of the oil film (other than zero) ?\nAnswer Choices: (A) 150 nm (B) 200 nm (C) 300 nm (D) 400 nm Let's write a program.",
    "output": "import math\n\n# define the wavelength of the light\nlambda_light = 480\n\n# define the indices of refraction of the oil and the glass\nn_oil = 1.2\nn_glass = 1.6\n\n# calculate the minimum thickness of the oil film\nt_min = 2 * math.pi / (lambda_light * math.sqrt(n_oil * n_oil - n_glass * n_glass))\n\n# print the result\nprint(t_min)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "D",
    "err": false,
    "gt": "B",
    "raw_ans": "15000.0",
    "question": "A heat pump is to extract heat from an outdoor environment at 7\u00b0C and heat the environment indoors to 27\u00b0C. For each 15,000 J of heat delivered indoors, the smallest amount of work that must be supplied to the heat pump is approximately\nAnswer Choices: (A) 500 J (B) 1,000 J (C) 1,100 J (D) 2,000 J Let's write a program.",
    "output": "T1 = 7\r\nT2 = 27\r\nH = 15000\r\nW = H*(T2-T1)/abs(T2-T1)\r\nprint(W)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "C",
    "raw_ans": "6",
    "question": "The driver of a police car hears an echo of the car\u2019s siren from a wall toward which the car is moving with a speed of 3.5 m/s. If the speed of sound is 350 m/s and the frequency of the siren is 600 Hz, the driver hears the echo at a frequency nearest to which of the following?\nAnswer Choices: (A) 600 Hz (B) 606 Hz (C) 612 Hz (D) 618 Hz Let's write a program.",
    "output": "speed_of_car = 3.5 # m/s\r\nspeed_of_sound = 350 # m/s\r\nfrequency = 600 # Hz\r\n\r\n# calculate the frequency heard by the driver\r\nfrequency_heard = (frequency * speed_of_car) / (speed_of_sound - speed_of_car)\r\n\r\n# round to the nearest whole number\r\nfrequency_heard = round(frequency_heard)\r\n\r\n# print the nearest frequency\r\nprint(frequency_heard)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "D",
    "raw_ans": "1.2",
    "question": "A particle decays in 2.0 ms in its rest frame. If the same particle moves at v=0.60c in the lab frame, how far will it travel in the lab before decaying?\nAnswer Choices: (A) 150 m (B) 288 m (C) 360 m (D) 450 m Let's write a program.",
    "output": "beta = 0.60\r\nrest_frame_time = 2.0\r\n\r\nlab_frame_distance = beta * rest_frame_time\r\n\r\nprint(lab_frame_distance)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "1.8333333333333333",
    "question": "A tube of water is traveling at 1/2 c relative to the lab frame when a beam of light traveling in the same direction as the tube enters it. What is the speed of light in the water relative to the lab frame? (The index of refraction of water is 4/3.)\nAnswer Choices: (A) 1/2 c (B) 2/3 c (C) 5/6 c (D) 10/11 c Let's write a program.",
    "output": "import sympy as sp\n\n# define the speed of the tube in the lab frame\ntube_speed = 1/2\n\n# the speed of light in the tube relative to the lab frame is equal to the speed of the tube minus the speed of light in the air\nlight_speed_in_tube = tube_speed - 1\n\n# the index of refraction of water is 4/3, so the speed of light in water is 4/3 times the speed of light in air\nspeed_of_light_in_water = 4/3 * 1\n\n# the speed of light in the water relative to the lab frame is the speed of light in water minus the speed of light in the tube\nlight_speed_in_water = speed_of_light_in_water - light_speed_in_tube\n\nprint(light_speed_in_water)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "0.9949874371066174",
    "question": "The rest mass of a particle with total energy 5.0 GeV and momentum 4.9 GeV/c is approximately\nAnswer Choices: (A) 0.1 GeV/c^2 (B) 0.2 GeV/c^2 (C) 0.5 GeV/c^2 (D) 1.0 GeV/c^2 Let's write a program.",
    "output": "import math\n\n# define the total energy and momentum\ntotal_energy = 5.0  # in GeV\nmomentum = 4.9  # in GeV/c\n\n# calculate the rest mass using the formula m^2 = E^2 - p^2\nrest_mass = math.sqrt(total_energy**2 - momentum**2)\n\n# print the rest mass\nprint(rest_mass)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "err": false,
    "gt": "B",
    "raw_ans": "200",
    "question": "A grating spectrometer can just barely resolve two wavelengths of 500 nm and 502 nm, respectively. Which of the following gives the resolving power of the spectrometer?\nAnswer Choices: (A) 2 (B) 250 (C) 5,000 (D) 10,000 Let's write a program.",
    "output": "wavelength1 = 500\r\nwavelength2 = 502\r\n\r\nresolving_power = (wavelength2 - wavelength1) * 100\r\n\r\nprint(resolving_power)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "A",
    "raw_ans": "ruby",
    "question": "The best type of laser with which to do spectroscopy over a range of visible wavelengths is\nAnswer Choices: (A) a dye laser (B) a helium-neon laser (C) an excimer laser (D) a ruby laser Let's write a program.",
    "output": "laser_type = ['dye', 'helium-neon', 'excimer', 'ruby']\r\nlaser_type_number = 3\r\nprint(laser_type[laser_type_number])",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "gt": "A",
    "err": false,
    "question": "The eigenvalues of a Hermitian operator are always\nAnswer Choices: (A) real (B) imaginary (C) degenerate (D) linear Let's write a program.",
    "output": "Hermitian_operator_real_eigenvalue=real\nThe answer is A",
    "correct": true
  },
  {
    "ans": "A",
    "err": true,
    "gt": "D",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 21, in <module>\n  File \"<string>\", line 17, in run_it\n  File \"<string>\", line 17, in <listcomp>\nTypeError: 'Zero' object is not subscriptable\n",
    "question": "A net force F_A acts on object A, and a net force F_B acts on object B. The mass of object B is twice the mass of object A, and the acceleration of object B is twice that of object A. Which of the following is true of forces F_A and F_B?\nAnswer Choices: (A) F_B = 1/4 F_A (B) F_B = 1/2 F_A (C) F_B = 2F_A (D) F_B = 4F_A Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nFA = sp.symbols('FA')\n\n# define the equation\nFB = 2 * FA\n\n# solve the equation for FA\nFA_solution = sp.solve(FB - FA, FA)\n\n# calculate FB\nFB_solution = 2 * FA_solution[0]\n\n# find the index of the solution that corresponds to F_A = F_B\nindex = [i for i in range(len(FA_solution)) if FA_solution[i] == FB_solution[i]][0]\n\n# print the solution that corresponds to F_A = F_B\nprint(FA_solution[index])",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "gt": "C",
    "err": false,
    "question": "Under ideal conditions, the electric and magnetic fields inside a superconductor are zero. Maxwell\u2019s equations imply that which of the following must be true just outside the surface of the superconductor?\nAnswer Choices: (A) B = 0 (B) B is perpendicular to the surface. (C) B is tangential to the surface. (D) B is time independent. Let's write a program.",
    "output": "import sympy as sp\n\nB = sp.symbols('B')\n\n# The electric and magnetic fields inside a superconductor are zero.\n# This means that there are no free charges or currents in the superconductor.\n# Maxwell's equations imply that just outside the surface of the superconductor, \n# the magnetic field B is perpendicular to the surface.\n\nprint(B)",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "100.0",
    "question": "Two students perform an experiment in which they drop a ball from rest from a known height above the ground and measure the speed of the ball just before it strikes the ground. From repeated measurement, the students estimate the uncertainty in the measured speed of the ball to be 10 percent. Which of the following gives the uncertainty in the kinetic energy of the ball? (Assume the uncertainty in the ball\u2019s mass is negligibly small.)\nAnswer Choices: (A) 5% (B) 10% (C) 15% (D) 20% Let's write a program.",
    "output": "speed_of_ball=10\r\nmass_of_ball=100\r\nkinetic_energy=0.5*speed_of_ball*mass_of_ball\r\nuncertainty_in_kinetic_energy=speed_of_ball*mass_of_ball*0.10\r\nprint(uncertainty_in_kinetic_energy)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "err": false,
    "gt": "C",
    "raw_ans": "0.0",
    "question": "A particle is constrained to move in a circle with a 10-meter radius. At one instant, the particle\u2019s speed is 10 meters per second and is increasing at a rate of 10 meters per second squared. The angle between the particle\u2019s velocity and acceleration vectors is\nAnswer Choices: (A) 0\u00b0 (B) 30\u00b0 (C) 45\u00b0 (D) 60\u00b0 Let's write a program.",
    "output": "import math\n\n# define the radius and speed\nr = 10\nv = 10\n\n# calculate the acceleration\na = v**2 / r\n\n# calculate the angle\nangle = math.acos(a / v)\n\n# print the result\nprint(math.degrees(angle))",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "9.0",
    "question": "If the absolute temperature of a blackbody is increased by a factor of 3, the energy radiated per second per unit area does which of the following?\nAnswer Choices: (A) Decreases by a factor of 81. (B) Decreases by a factor of 9. (C) Increases by a factor of 9. (D) Increases by a factor of 81. Let's write a program.",
    "output": "import math\n\n# define the factor by which the temperature is increased\nfactor = 3\n\n# calculate the new temperature\nnew_temp = factor * 1\n\n# calculate the new energy radiated per second per unit area\nnew_energy = new_temp * new_temp * 1\n\n# calculate the factor by which the energy increases\nenergy_factor = new_energy / 1\n\n# print the result\nprint(energy_factor)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "10.0",
    "question": "A magnetic field is directed perpendicular to the plane of a circular coil of area 0.2 m^2 and 250 turns. If the magnetic field is increased from 0.01 T to 0.06 T during a time interval of 0.25 s, the average induced EMF in the coil is\nAnswer Choices: (A) 0.04 V (B) 0.1 V (C) 2.5 V (D) 10 V Let's write a program.",
    "output": "area = 0.2\r\nturns = 250\r\nchange_in_field = 0.06 - 0.01\r\ntime = 0.25\r\n\r\n# formula for average induced EMF\r\naverage_EMF = (change_in_field * area * turns) / time\r\n\r\nprint(average_EMF)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "C",
    "err": false,
    "gt": "C",
    "raw_ans": "The entropy of the system and its environment remains unchanged",
    "question": "Which of the following is true about any system that undergoes a reversible thermodynamic process?\nAnswer Choices: (A) There are no changes in the internal energy of the system. (B) The temperature of the system remains constant during the process. (C) The entropy of the system and its environment remains unchanged. (D) The entropy of the system and its environment must increase. Let's write a program.",
    "output": "def reversible_thermodynamic_process():\n    return 'The entropy of the system and its environment remains unchanged.'\n\nprint(reversible_thermodynamic_process())",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "err": false,
    "gt": "D",
    "raw_ans": "[50, 100, 150, 200, 250]",
    "question": "The first five harmonics produced by an organ pipe open at both ends are 50 Hz, 100 Hz, 150 Hz, 200 Hz, and 250 Hz. Which of the harmonics, if any, will survive once the pipe is closed at one end?\nAnswer Choices: (A) 50 Hz, 150 Hz, and 250 Hz only (B) 100 Hz and 200 Hz only (C) 150 Hz and 250 Hz only (D) None Let's write a program.",
    "output": "frequency = [50, 100, 150, 200, 250]\nclosed = []\nfor i in frequency:\n    if i%2 == 0:\n        closed.append(i)\nprint(closed)\n",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "A",
    "raw_ans": "1",
    "question": "Electromagnetic radiation emitted from a nucleus is most likely to be in the form of\nAnswer Choices: (A) gamma rays (B) microwaves (C) ultraviolet radiation (D) visible light Let's write a program.",
    "output": "gamma = 1\r\nmicrowaves = 2\r\nultraviolet = 3\r\nvisible_light = 4\r\n\r\nmost_probable = gamma\r\n\r\nprint(most_probable)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "D",
    "raw_ans": "262",
    "question": "An organ pipe, closed at one end and open at the other, is designed to have a fundamental frequency of C (131 Hz). What is the frequency of the next higher harmonic for this pipe?\nAnswer Choices: (A) 44 Hz (B) 196 Hz (C) 262 Hz (D) 393 Hz Let's write a program.",
    "output": "fundamental_frequency = 131\nfirst_harmonic = 2 * fundamental_frequency\nprint(first_harmonic)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "5",
    "question": "A single-electron atom has the electron in the l = 2 state. The number of allowed values of the quantum number m_l is\nAnswer Choices: (A) 1 (B) 2 (C) 3 (D) 5 Let's write a program.",
    "output": "l=2\r\nm_l=-2,-1,0,1,2\r\nallowed_values=5\r\nprint(allowed_values)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 22, in <module>\n  File \"<string>\", line 11, in run_it\nAttributeError: module 'sympy' has no attribute 'g'\n",
    "question": "Two simple pendulums A and B consist of identical masses suspended from strings of length L_A and L_B, respectively. The two pendulums oscillate in equal gravitational fields. If the period of pendulum B is twice the period of pendulum A, which of the following is true of the lengths of the two pendulums?\nAnswer Choices: (A) L_B = 4L_A (B) L_B = 2L_A (C) L_B = L_A (D) L_B = 1/2 L_A Let's write a program.",
    "output": "import sympy as sp\n\n# define the variables\nL_A = sp.symbols('L_A')\nL_B = sp.symbols('L_B')\n\n# Given that the period of pendulum B is twice the period of pendulum A\n# and the period of a pendulum is given by 2*pi*sqrt(L/g)\n# Therefore, we can write the equation as follows:\neq = sp.Eq(2*sp.pi*sp.sqrt(L_B/sp.g), 2*sp.pi*sp.sqrt(L_A/sp.g))\n\n# solve the equation for L_B\nsolution = sp.solve(eq, L_B)\n\n# simplify the solution to get the required form\nL_B_simplified = sp.simplify(solution[0])\n\n# Since L_B = 2L_A, the correct option is B.\n\nprint(L_B_simplified)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "the strong nuclear force",
    "question": "According to the BCS theory, the attraction between Cooper pairs in a superconductor is due to\nAnswer Choices: (A) the weak nuclear force (B) the strong nuclear force (C) vacuum polarization (D) interactions with the ionic lattice Let's write a program.",
    "output": "sc_theory_attraction= \"the strong nuclear force\"\nprint(sc_theory_attraction)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "B",
    "raw_ans": "0.3333333333333337",
    "question": "A rod measures 1.00 m in its rest system. How fast must an observer move parallel to the rod to measure its length to be 0.80 m?\nAnswer Choices: (A) 0.50c (B) 0.60c (C) 0.70c (D) 0.80c Let's write a program.",
    "output": "import math\n\n# define the length of the rod in its rest system\nlength_rod_rest = 1.00\n\n# define the length of the rod measured by the observer\nlength_rod_observer = 0.80\n\n# calculate the length of the rod parallel to its rest system as measured by the observer\nlength_parallel = length_rod_observer / math.sqrt(1 - (0.80/1.00)**2)\n\n# calculate the speed of the observer relative to the rod\nspeed_observer = (length_parallel - length_rod_rest) / length_rod_rest\n\n# print the result\nprint(speed_observer)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "A",
    "raw_ans": "54.4",
    "question": "The energy required to remove both electrons from the helium atom in its ground state is 79.0 eV. How much energy is required to ionize helium (i.e., to remove one electron)?\nAnswer Choices: (A) 24.6 eV (B) 39.5 eV (C) 51.8 eV (D) 54.4 eV Let's write a program.",
    "output": "def ionization_energy(Z):\n    return 13.6 * Z**2\n\nZ = 2  # for helium\nE = ionization_energy(Z)\nprint(E)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "A",
    "raw_ans": "one-quarter as distant as they are today",
    "question": "At the present time, the temperature of the universe (i.e., the microwave radiation background) is about 3 K. When the temperature was 12 K, typical objects in the universe, such as galaxies, were\nAnswer Choices: (A) one-quarter as distant as they are today (B) one-half as distant as they are today (C) separated by about the same distances as they are today (D) two times as distant as they are today Let's write a program.",
    "output": "temp = 3\r\nthen = 12\r\ndifference = then - temp\r\n\r\nif difference == 9:\r\n    print(\"one-quarter as distant as they are today\")\r\nelif difference == 6:\r\n    print(\"one-half as distant as they are today\")\r\nelif difference == 0:\r\n    print(\"separated by about the same distances as they are today\")\r\nelif difference == 12:\r\n    print(\"two times as distant as they are today\")",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "gt": "A",
    "err": false,
    "question": "By definition, the electric displacement current through a surface S is proportional to the\nAnswer Choices: (A) rate of change of the electric flux through S (B) electric flux through S (C) time integral of the magnetic flux through S (D) rate of change of the magnetic flux through S Let's write a program.",
    "output": "Let's take the definition of electric displacement current:\nThe rate of change of the electric flux through a surface S\nSo the answer is A",
    "correct": true
  },
  {
    "ans": "C",
    "err": false,
    "gt": "D",
    "raw_ans": "980000.0",
    "question": "The suspension cable of a 1,000 kg elevator snaps, sending the elevator moving downward through its shaft. The emergency brakes of the elevator stop the elevator shortly before it reaches the bottom of the shaft. If the elevator fell a distance of 100 m starting from rest, the heat that the brakes must dissipate to bring the elevator safely to rest is\nAnswer Choices: (A) 100 J (B) 1,000 J (C) 10,000 J (D) 1,000,000 J Let's write a program.",
    "output": "elevator_mass = 1000\r\ndistance_fell = 100\r\ng = 9.8\r\n\r\n# Total energy reached is the potential energy\r\ntotal_energy = elevator_mass * g * distance_fell\r\n\r\nprint(total_energy)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "C",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 13, in <module>\n  File \"<string>\", line 10, in run_it\nNameError: name 'c' is not defined\n",
    "question": "The hydrogen lines observed in the spectrum of the quasar 3C9 are shifted so far into the red that their wavelengths are three times as long as those observed in the light from hydrogen atoms at rest in a laboratory on Earth. If it is assumed that the shift is entirely due to the relative motion of 3C9 and Earth, the relative speed of the quasar is\nAnswer Choices: (A) 2c (B) c (C) 0.8c (D) 0.5c Let's write a program.",
    "output": "lambda_rest = 1216 # Angstroms, see here: https://en.wikipedia.org/wiki/Hydrogen_line\nlambda_moving = 3 * lambda_rest\n\n# v = c / n, where n is the refractive index\n# the refractive index is the ratio of the speed of light in a vacuum to the speed of light in the medium\n# therefore, the refractive index of the quasar is 3c/c = 3\n# therefore, the speed of the quasar is c / 3\n\nv_quasar = c / 3\n\nprint(v_quasar)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "2.0",
    "question": "A 10 kg box slides horizontally without friction at a speed of 1 m/s. At one point, a constant force is applied to the box in the direction of its motion. The box travels 5 m with the constant force applied. The force is then removed, leaving the box with a speed of 2 m/s. Which of the following gives the magnitude of the applied force?\nAnswer Choices: (A) 1 N (B) 2 N (C) 3 N (D) 4 N Let's write a program.",
    "output": "m = 10 # mass in kg\nv1 = 1 # initial speed in m/s\nv2 = 2 # final speed in m/s\nd = 5 # distance travelled in m\n\n# calculate the work done by the force\nwork = (m * v2) - (m * v1)\n\n# calculate the magnitude of the force\nforce = work / d\n\nprint(force)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "B",
    "raw_ans": "120.0",
    "question": "Two spaceships approach Earth with equal speeds, as measured by an observer on Earth, but from opposite directions. A meterstick on one spaceship is measured to be 60 cm long by an occupant of the other spaceship. What is the speed of each spaceship, as measured by the observer on Earth?\nAnswer Choices: (A) 0.4c (B) 0.5c (C) 0.6c (D) 0.7c Let's write a program.",
    "output": "import sympy as sp\n\n# define the variable\nc = sp.symbols('c')\n\n# the speed of each spaceship is 0.5c as measured by the observer on Earth\n# since the spaceship approaches Earth from opposite directions,\n# the speed of each spaceship as measured by the occupant of the other spaceship is 0.5c - 0.5c = 0\n\n# the length of the meterstick on one spaceship as measured by the occupant of the other spaceship is 60 cm\n# so, the speed of each spaceship as measured by the occupant of the other spaceship is 60 cm / 0.5 sec\n\n# calculate the speed of each spaceship as measured by the observer on Earth\nspeed_observer = 60 / 0.5\n\nprint(speed_observer)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "100000",
    "question": "The suspension cable of a 1,000 kg elevator snaps, sending the elevator moving downward through its shaft. The emergency brakes of the elevator stop the elevator shortly before it reaches the bottom of the shaft. If the elevator fell a distance of 100 m starting from rest, the heat that the brakes must dissipate to bring the elevator safely to rest is\nAnswer Choices: (A) 10,000 J (B) 100,000 J (C) 1,000,000 J (D) 10,000,000 J Let's write a program.",
    "output": "elevator_mass = 1000\r\ndistance_travelled = 100\r\n\r\n# Calculate the potential energy of the elevator\r\npotential_energy = elevator_mass * distance_travelled\r\n\r\n# The brakes dissipate the same amount of heat as the potential energy of the elevator\r\nheat_dissipated = potential_energy\r\n\r\nprint(heat_dissipated)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "gt": "C",
    "err": false,
    "question": "The mean kinetic energy of the conduction electrons in metals is ordinarily much higher than kT because\nAnswer Choices: (A) electrons have many more degrees of freedom than atoms do (B) the electrons and the lattice are not in thermal equilibrium (C) the electrons form a degenerate Fermi gas (D) electrons in metals are highly relativistic Let's write a program.",
    "output": "electrons_have_many_more_degrees_freedom=1\nlattice_and_electrons_not_in_thermal_equilibrium=2\nelectrons_form_degenerate_fermi_gas=3\nelectrons_in_metals_are_highly_relativistic=4\nmean_kinetic_energy_of_conduction_electrons_in_metals=electrons_form_degenerate_fermi_gas\n\n\nThe answer is C",
    "correct": true
  },
  {
    "ans": "B",
    "err": false,
    "gt": "C",
    "raw_ans": "2.0",
    "question": "A 10 kg box slides horizontally without friction at a speed of 1 m/s. At one point, a constant force is applied to the box in the direction of its motion. The box travels 5 m with the constant force applied. The force is then removed, leaving the box with a speed of 2 m/s. Which of the following gives the magnitude of the applied force?\nAnswer Choices: (A) 1 N (B) 2 N (C) 3 N (D) 4 N Let's write a program.",
    "output": "m = 10 # mass in kg\nv1 = 1 # initial speed in m/s\nv2 = 2 # final speed in m/s\nd = 5 # distance travelled in m\n\n# calculate the work done by the force\nwork = (m * v2) - (m * v1)\n\n# calculate the magnitude of the force\nforce = work / d\n\nprint(force)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "1",
    "question": "Light of variable frequency shines on the metal surface of a photoelectric tube. Einstein\u2019s theory of the photoelectric effect predicts that the\nAnswer Choices: (A) work function of the metal is proportional to the frequency (B) work function of the metal is proportional to the wavelength (C) current in the tube is a linear function of the wavelength (D) potential difference necessary to stop the emitted electrons is a linear function of the frequency above the threshold frequency Let's write a program.",
    "output": "variable_frequency = 1\nwavelength = variable_frequency\ncurrent = wavelength\npotential_difference = current\n\nprint(current)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "C",
    "err": false,
    "gt": "D",
    "raw_ans": "4.0",
    "question": "A spring of force constant k is stretched a certain distance. It takes twice as much work to stretch a second spring by half this distance. The force constant of the second spring is\nAnswer Choices: (A) k (B) 2k (C) 4k (D) 8k Let's write a program.",
    "output": "initially_stretched_distance = 1\nsecond_spring_stretched_distance = initially_stretched_distance / 2\nwork_to_stretch_initially = 1\nwork_to_stretch_second = 2 * work_to_stretch_initially\nforce_constant_second_spring = work_to_stretch_second / second_spring_stretched_distance\nprint(force_constant_second_spring)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "C",
    "raw_ans": "2.5658776553704006e-18",
    "question": "An observer O at rest midway between two sources of light at x = 0 and x = 10 m observes the two sources to flash simultaneously. According to a second observer O', moving at a constant speed parallel to the x-axis, one source of light flashes 13 ns before the other. Which of the following gives the speed of O' relative to O?\nAnswer Choices: (A) 0.13c (B) 0.15c (C) 0.36c (D) 0.53c Let's write a program.",
    "output": "import math\n\n# define the distance between the two sources\ndistance = 10 # m\n\n# define the time it takes for the first source to flash\ntime_first_source = 0 # ns\n\n# define the time it takes for the second source to flash\ntime_second_source = 13 # ns\n\n# calculate the speed of O' relative to O\nspeed_O_prime = (distance / (time_second_source - time_first_source)) * 1e-9 # m/s\n\n# convert the speed to a fraction of the speed of light\nspeed_fraction = speed_O_prime / 2.99792458e8 # -\n\nprint(speed_fraction)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "A",
    "raw_ans": "9.659228333333335e-06",
    "question": "The surface of the Sun has a temperature close to 6,000 K and it emits a blackbody (Planck) spectrum that reaches a maximum near 500 nm. For a body with a surface temperature close to 300 K, at what wavelength would the thermal spectrum reach a maximum?\nAnswer Choices: (A) 10:00 PM (B) 100 Pm (C) 10 mm (D) 100 mm Let's write a program.",
    "output": "T_sun = 6000  # temperature of the sun in K\nT_earth = 300  # temperature of the earth in K\n\n# wavelength of the maximum of the blackbody spectrum in nm\nlambda_max = 2.8977685 * 10**-3 / T_sun  # 2.8977685 cm K^-1\n\n# the earth would see the sun as a blackbody at a temperature of 200 K\n# so the wavelength of the maximum of the thermal spectrum would be\nlambda_max_earth = 2.8977685 * 10**-3 / T_earth\n\nprint(lambda_max_earth)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "B",
    "raw_ans": "-1.0540925533894598\n-1.0540925533894598\n-1.0540925533894598\n-1.118033988749895",
    "question": "Consider an electron in the n = 4, l = 1 state in hydrogen. Which of the following final states can NOT be reached by an allowed transition?\nAnswer Choices: (A) n = 3, l = 2 (B) n = 3, l = 1 (C) n = 3, l = 0 (D) n = 2, l = 0 Let's write a program.",
    "output": "from math import sqrt\n\n# define the initial state\nn1, l1 = 4, 1\n\n# calculate the initial state energy\nE1 = -1 * sqrt(1 + 1/n1**2)\n\n# calculate the energy of the final state\n# for n = 3, l = 2, E = -1 * sqrt(1 + 1/9)\nE2 = -1 * sqrt(1 + 1/9)\n\n# for n = 3, l = 1, E = -1 * sqrt(1 + 1/9)\nE3 = -1 * sqrt(1 + 1/9)\n\n# for n = 3, l = 0, E = -1 * sqrt(1 + 1/9)\nE4 = -1 * sqrt(1 + 1/9)\n\n# for n = 2, l = 0, E = -1 * sqrt(1 + 1/4)\nE5 = -1 * sqrt(1 + 1/4)\n\n# find the final state that can not be reached\nfor E in [E2, E3, E4, E5]:\n    if E != E1:\n        print(E)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "A",
    "raw_ans": "5",
    "question": "A single-electron atom has the electron in the l = 2 state. The number of allowed values of the quantum number m_l is\nAnswer Choices: (A) 5 (B) 4 (C) 3 (D) 2 Let's write a program.",
    "output": "l=2\r\nm_l=-2,-1,0,1,2\r\nallowed_values=5\r\nprint(allowed_values)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "C",
    "err": false,
    "gt": "D",
    "raw_ans": "6",
    "question": "The driver of a police car hears an echo of the car\u2019s siren from a wall toward which the car is moving with a speed of 3.5 m/s. If the speed of sound is 350 m/s and the frequency of the siren is 600 Hz, the driver hears the echo at a frequency nearest to which of the following?\nAnswer Choices: (A) 588 Hz (B) 594 Hz (C) 600 Hz (D) 612 Hz Let's write a program.",
    "output": "speed_of_car = 3.5 # m/s\r\nspeed_of_sound = 350 # m/s\r\nfrequency = 600 # Hz\r\n\r\n# calculate the frequency heard by the driver\r\nfrequency_heard = (frequency * speed_of_car) / (speed_of_sound - speed_of_car)\r\n\r\n# round to the nearest whole number\r\nfrequency_heard = round(frequency_heard)\r\n\r\nprint(frequency_heard)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 10, in run_it\nZeroDivisionError: division by zero\n",
    "question": "The emission spectrum of the doubly ionized lithium atom Li++ (Z = 3, A = 7) is identical to that of a hydrogen atom in which all the wavelengths are\nAnswer Choices: (A) decreased by a factor of 9 (B) decreased by a factor of 49 (C) decreased by a factor of 81 (D) increased by a factor of 9 Let's write a program.",
    "output": "c = 299792458 # speed of light\nLi = 7 # atomic number of lithium\nH = 1 # atomic number of hydrogen\n\n# calculate the emission spectrum of lithium\nLi_emission = c * (Li**2 - H**2) / (Li - H)\n\n# calculate the emission spectrum of hydrogen\nH_emission = c * (H**2 - H**2) / (H - H)\n\n# calculate the ratio of the emission spectra\nratio = Li_emission / H_emission\n\n# print the answer\nprint(ratio)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "gt": "D",
    "err": false,
    "question": "A photon strikes an electron of mass m that is initially at rest, creating an electron-positron pair. The photon is destroyed and the positron and two electrons move off at equal speeds along the initial direction of the photon. The energy of the photon was\nAnswer Choices: (A) mc^2 (B) 2mc^2 (C) 3mc^2 (D) 4mc^2 Let's write a program.",
    "output": "Let's assume the mass of the electron is m and the speed of light is c.\nThe total energy before the collision is 2mc^2 (considering the electron-positron pair).\nAfter the collision, the positron and two electrons move off at equal speeds along the initial direction of the photon. The energy of the positron and the two electrons is equal.\nSo, the total energy after the collision is 3mc^2 (considering the positron and two electrons).\nThe difference in energy before and after the collision is 2mc^2 - 3mc^2 = -mc^2\nThis difference in energy must be the energy of the photon.\nSo, the energy of the photon is mc^2.\nThe answer is A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "D",
    "raw_ans": "Diode",
    "question": "Which of the following lasers utilizes transitions that involve the energy levels of free atoms?\nAnswer Choices: (A) Diode laser (B) Dye laser (C) Free-electron laser (D) Gas laser Let's write a program.",
    "output": "lasers = ['Diode', 'Dye', 'Free-electron', 'Gas']\n\ndiode_laser = 'Diode'\ndye_laser = 'Dye'\nfree_electron_laser = 'Free-electron'\ngas_laser = 'Gas'\n\nif lasers[0] == diode_laser or lasers[1] == dye_laser or lasers[2] == free_electron_laser or lasers[3] == gas_laser:\n    print(lasers[0])\nelse:\n    print(lasers[1])",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "D",
    "raw_ans": "25.00000000000001",
    "question": "Unpolarized light is incident on a pair of ideal linear polarizers whose transmission axes make an angle of 45q with each other. The transmitted light intensity through both polarizers is what percentage of the incident intensity?\nAnswer Choices: (A) 100% (B) 75% (C) 50% (D) 25% Let's write a program.",
    "output": "import math\n\n# define the angle between the polarizers\ntheta = 45 * math.pi / 180\n\n# calculate the transmitted light intensity\n# for an unpolarized light, the intensity transmitted by a polarizer is cos^2(theta)\n# so, the total transmitted light intensity for two polarizers is cos^2(theta1) * cos^2(theta2)\n# and since the polarizers are orthogonal, theta2 = 90 - theta1\n\ntheta1 = theta\ntheta2 = math.pi / 2 - theta1\n\n# calculate the transmitted light intensity\nI_trans = math.cos(theta1)**2 * math.cos(theta2)**2\n\n# calculate the percentage of the transmitted light intensity over the incident intensity\n# which is 1 for an unpolarized light\npercentage = (I_trans / 1) * 100\n\nprint(percentage)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "A",
    "err": false,
    "gt": "D",
    "raw_ans": "0.7071067811865475",
    "question": "Sound waves moving at 350 m/s diffract out of a speaker enclosure with an opening that is a long rectangular slit 0.14 m across. At about what frequency will the sound first disappear at an angle of 45q from the normal to the speaker face?\nAnswer Choices: (A) 500 Hz (B) 1,750 Hz (C) 2,750 Hz (D) 3,500 Hz Let's write a program.",
    "output": "import math\n\n# define the variables\nspeed_of_sound = 350  # m/s\nslit_width = 0.14  # m\nangle = 45  # degrees\n\n# calculate the wavelength of the sound wave\nwavelength = speed_of_sound / math.sin(math.radians(angle))\n\n# calculate the frequency of the sound wave\nfrequency = speed_of_sound / wavelength\n\n# print the result\nprint(frequency)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 10, in run_it\nZeroDivisionError: division by zero\n",
    "question": "The emission spectrum of the doubly ionized lithium atom Li++ (Z = 3, A = 7) is identical to that of a hydrogen atom in which all the wavelengths are\nAnswer Choices: (A) decreased by a factor of 9 (B) decreased by a factor of 49 (C) decreased by a factor of 81 (D) increased by a factor of 9 Let's write a program.",
    "output": "c = 299792458 # speed of light\nLi = 7 # atomic number of lithium\nH = 1 # atomic number of hydrogen\n\n# calculate the emission spectrum of lithium\nLi_emission = c * (Li**2 - H**2) / (Li - H)\n\n# calculate the emission spectrum of hydrogen\nH_emission = c * (H**2 - H**2) / (H - H)\n\n# calculate the ratio of the emission spectra\nratio = Li_emission / H_emission\n\n# print the answer\nprint(ratio)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "B",
    "raw_ans": "0.6666666666666666",
    "question": "A uniform solid disk starts from rest and rolls down an inclined plane without slipping. After some time, what fraction of the disk\u2019s total kinetic energy is rotational kinetic energy?\nAnswer Choices: (A) 1/4 (B) 1/3 (C) 1/2 (D) 2/3 Let's write a program.",
    "output": "import math\n\n# The total kinetic energy of a rolling disk is the sum of its translational kinetic energy and rotational kinetic energy.\n# The fraction of the disk\u2019s total kinetic energy that is rotational kinetic energy is 2/3.\n\nfraction_rotational_kinetic_energy = 2/3\n\nprint(fraction_rotational_kinetic_energy)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "C",
    "raw_ans": "75000000.0",
    "question": "The speed of light inside of a nonmagnetic dielectric material with a dielectric constant of 4.0 is\nAnswer Choices: (A) 1.2 * 10^9 m/s (B) 3.0 * 10^8 m/s (C) 1.5 * 10^8 m/s (D) 1.0 * 10^8 m/s Let's write a program.",
    "output": "c = 3e8 # speed of light in vacuum\r\ndielectric_const = 4\r\n# speed of light in dielectric material is c/sqrt(dielectric_const)\r\nspeed_light_dielectric = c/dielectric_const\r\nprint(speed_light_dielectric)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "err": false,
    "gt": "A",
    "raw_ans": "45000*C1 + 45000*C2",
    "question": "A 3-microfarad capacitor is connected in series with a 6-microfarad capacitor. When a 300-volt potential difference is applied across this combination, the total energy stored in the two capacitors is\nAnswer Choices: (A) 0.09 J (B) 0.18 J (C) 0.27 J (D) 0.41 J Let's write a program.",
    "output": "from sympy import symbols, solve\n\n# capacitance = C1 = 3 microfarad, C2 = 6 microfarad\nC1, C2 = symbols('C1, C2')\n\n# total energy stored in the two capacitors\ntotal_energy = (C1 + C2) * 300**2 / 2\n\nprint(total_energy)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "C",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 8, in run_it\nTypeError: unsupported operand type(s) for ^: 'float' and 'int'\n",
    "question": "Under certain conditions, a beam of electrons impinging on a crystal surface will diffract and a scattering pattern of the beam can be obtained. What is the approximate kinetic energy of the electrons needed in order to see the pattern? (Assume the lattice spacing of the crystal to be 0.4 nm.)\nAnswer Choices: (A) 0.1 eV (B) 1 eV (C) 10 eV (D) 100 eV Let's write a program.",
    "output": "import math\n\n# define the lattice spacing\na = 0.4  # in nm\n\n# convert the lattice spacing to m\na_in_m = a * 10^-9\n\n# the minimum kinetic energy needed for the electrons to diffract\nE_min = (math.pi * a_in_m)**2 * 2  # in Joules\n\n# convert the energy to eV\nE_min_in_eV = E_min / 1.6 * 10^-19\n\nprint(E_min_in_eV)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "C",
    "err": false,
    "gt": "C",
    "raw_ans": "2.8284271247461903",
    "question": "Two identical satellites, A and B, are in circular orbits around Earth. The orbital radius of A is twice that of B. Which of the following gives the ratio of the angular momentum of A to the angular momentum of B?\nAnswer Choices: (A) 4 (B) 2 (C) sqrt(2) (D) 1/sqrt(2) Let's write a program.",
    "output": "import math\n\n# define the ratio of the orbital radius of A to B\nradius_ratio = 2\n\n# calculate the ratio of the angular momentum of A to B\nangular_momentum_ratio = radius_ratio * math.sqrt(radius_ratio)\n\nprint(angular_momentum_ratio)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "C",
    "err": false,
    "gt": "D",
    "raw_ans": "40.0",
    "question": "An object is thrown horizontally from the open window of a building. If the initial speed of the object is 20 m/s and it hits the ground 2.0 s later, from what height was it thrown? (Neglect air resistance and assume the ground is level.)\nAnswer Choices: (A) 4.9 m (B) 9.8 m (C) 10.0 m (D) 19.6 m Let's write a program.",
    "output": "initial_speed = 20 # m/s\ntime = 2.0 # seconds\n\n# The horizontal distance (range) is the speed times time.\ndistance = initial_speed * time\n\n# The height of the building is the distance times the sine of the angle.\n# Since the angle is 90 degrees, the sine of the angle is 1.\nheight = distance * 1\n\nprint(height)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "D",
    "gt": "C",
    "err": false,
    "question": "In a nonrelativistic, one-dimensional collision, a particle of mass 2m collides with a particle of mass m at rest. If the particles stick together after the collision, what fraction of the initial kinetic energy is lost in the collision?\nAnswer Choices: (A) 0 (B) 1/4 (C) 1/3 (D) 1/2 Let's write a program.",
    "output": "initial_kinetic_energy = 2 * (1/2) * 2m * v^2\nfinal_kinetic_energy = 2 * (1/2) * (m+2m) * v^2\nlost_kinetic_energy = initial_kinetic_energy - final_kinetic_energy\nfraction_lost = lost_kinetic_energy / initial_kinetic_energy\nThe answer is D.",
    "correct": false
  },
  {
    "ans": "A",
    "err": false,
    "gt": "C",
    "raw_ans": "500",
    "question": "White light is normally incident on a puddle of water (index of refraction 1.33). A thin (500 nm) layer of oil (index of refraction 1.5) floats on the surface of the puddle. Of the following, the most strongly reflected wavelength is\nAnswer Choices: (A) 500 nm (B) 550 nm (C) 600 nm (D) 650 nm Let's write a program.",
    "output": "index_of_refraction_water = 1.33\r\nindex_of_refraction_oil = 1.5\r\n\r\n# The reflectance of a surface is given by the equation:\r\n# R = [(n2-n1)^2 / (n2+n1)^2]\r\n# where n1 is the index of refraction of the medium from which the light is incident and n2 is the index of refraction of the medium in which the light is reflected.\r\n\r\n# Therefore, the most strongly reflected wavelength will be the one for which the value of R is the highest.\r\n\r\n# For water-oil interface, the highest value of R will be when n1 is the index of refraction of water and n2 is the index of refraction of oil.\r\n\r\nindex_refraction_incident = index_of_refraction_water\r\nindex_refraction_reflected = index_of_refraction_oil\r\n\r\n# For 500 nm light\r\nR_500nm = [(index_of_refraction_oil - index_of_refraction_water)**2 / (index_of_refraction_oil + index_of_refraction_water)**2]\r\n\r\n# For 550 nm light\r\nR_550nm = [(index_of_refraction_oil - 1.3)**2 / (index_of_refraction_oil + 1.3)**2]\r\n\r\n# For 600 nm light\r\nR_600nm = [(index_of_refraction_oil - 1.4)**2 / (index_of_refraction_oil + 1.4)**2]\r\n\r\n# For 650 nm light\r\nR_650nm = [(index_of_refraction_oil - 1.5)**2 / (index_of_refraction_oil + 1.5)**2]\r\n\r\n# Therefore, the most strongly reflected wavelength is 500 nm\r\nmost_strongly_reflected_wavelength = 500\r\n\r\nprint(most_strongly_reflected_wavelength)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 306, in execute_code\n    exec(code, globals(), locals())\n  File \"<string>\", line 17, in <module>\n  File \"<string>\", line 7, in run_it\nTypeError: unsupported operand type(s) for ^: 'float' and 'int'\n",
    "question": "A nonrelativistic particle with a charge twice that of an electron moves through a uniform magnetic field. The field has a strength of \u03c0/4 tesla and is perpendicular to the velocity of the particle. What is the particle\u2019s mass if it has a cyclotron frequency of 1,600 hertz?\nAnswer Choices: (A) 2.5 * 10^-23 kg (B) 1.2 * 10^-22 kg (C) 3.3 * 10^-22 kg (D) 5.0 * 10^-21 kg Let's write a program.",
    "output": "import math\n\n# define the variables\nB = math.pi/4 # magnetic field in tesla\nf = 1600 # cyclotron frequency in hertz\nq = 2*1.60217662 * 10^-19 # charge of the electron in coulombs\n\n# calculate the speed of the particle\nv = 2*math.pi*f*q / B\n\n# calculate the mass of the particle\nm = v**2 / (2*B**2)\n\n# print the result\nprint(m)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "B",
    "raw_ans": "4  # seconds\n\nvelocity_relative_to_plane(t)",
    "question": "An airplane drops a payload while traveling due north, parallel to the ground, at a constant speed of 100 m/s. If air resistance is neglected, what is the velocity of the payload relative to the plane 4.0 s after it is released?\nAnswer Choices: (A) 0 (B) 40 m/s down (C) 80 m/s down (D) 100 m/s north and 40 m/s down Let's write a program.",
    "output": "def velocity_relative_to_plane(t):\n    # Since the plane is moving due north and the payload is dropped parallel to the ground,\n    # the payload's velocity relative to the plane is purely horizontal.\n    # The payload's horizontal velocity relative to the plane is the same as the plane's speed.\n    return 100  # m/s\n\nt = 4  # seconds\n\nvelocity_relative_to_plane(t)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": true
  },
  {
    "ans": "B",
    "err": true,
    "gt": "A",
    "raw_ans": "Traceback (most recent call last):\n  File \"/path/to/project/home/src/utils.py\", line 295, in execute_code\n    code = black.format_str(code_str, mode=black.FileMode())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1079, in format_str\n    dst_contents = _format_str_once(src_contents, mode=mode)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/__init__.py\", line 1089, in _format_str_once\n    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ssddata/tongyx/miniconda3/envs/def/lib/python3.11/site-packages/black/parsing.py\", line 127, in lib2to3_parse\n    raise exc from None\nblack.parsing.InvalidInput: Cannot parse: 1:4: The energy of a photon can be calculated by using the formula:\n",
    "question": "Positronium is an atom formed by an electron and a positron (antielectron). It is similar to the hydrogen atom, with the positron replacing the proton. If a positronium atom makes a transition from the state with n=3 to a state with n=1, the energy of the photon emitted in this transition is closest to\nAnswer Choices: (A) 6.0 e (B) 6.8 eV (C) 12.2 eV (D) 13.6 eV Let's write a program.",
    "output": "The energy of a photon can be calculated by using the formula:\nE = h*c/\u03bb\nThe wavelength \u03bb can be calculated by using the formula:\n\u03bb = h/\u0394E\nHere, \u0394E is the energy difference between the two energy levels.\nThe rest is programming.\nimport math\n\n# define the constants\nh = 6.62607015e-34 # Planck's constant\nc = 2.99792458e8 # speed of light\n\n# calculate the wavelength\n\u0394E = 3 - 1 # energy difference between the two levels\n\u03bb = h / \u0394E\n\n# calculate the energy of the photon\nE = h*c/\u03bb\n\n# print the result\nprint(E)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  },
  {
    "ans": "B",
    "err": false,
    "gt": "D",
    "raw_ans": "6.283185307179586",
    "question": "A satellite of mass m orbits a planet of mass M in a circular orbit of radius R. The time required for one revolution is\nAnswer Choices: (A) independent of M (B) proportional to m^(1/2) (C) linear in R (D) proportional to R^(3/2) Let's write a program.",
    "output": "import math\n\n# define the variables\nm = 1 # mass of the satellite\nM = 1 # mass of the planet\nR = 1 # radius of the orbit\n\n# calculate the time required for one revolution\nT = 2*math.pi*R/(math.sqrt(M*m))\n\n# print the result\nprint(T)",
    "matching_err": false,
    "matching_strategy": "self||A",
    "correct": false
  }
]